Colabora
con la
cultura libre

Desde sus inicios Traficantes de Sueños ha apostado
por licencias de publicación que permiten compartir, como
las Creative Commons, por eso sus libros se pueden copiar,
distribuir, comunicar públicamente y descargar desde su
web. Entendemos que el conocimiento y las expresiones
artísticas se producen a partir de elementos previos y
contemporáneos, gracias a las redes difusas en las que
participamos. Están hechas de retazos, de mezclas, de
experiencias colectivas; cada persona las recompone de
una forma original, pero no se puede atribuir su propiedad
total y excluir a otros de su uso o replicación.
Sin embargo, «cultura libre» no es sinónimo de «cultura gratis». Producir un libro conlleva costes de derechos de
autor, traducción, edición, corrección, maquetación, diseño
e impresión. Tú puedes colaborar haciendo una donación al
proyecto editorial; con ello estarás contribuyendo a la
liberación de contenidos.

Puedes hacer una donación
(si estás fuera de España a través de PayPal ),

suscribirte a la editorial
o escribirnos un mail

WUDILFDQWHVGHVXHxRV

Traficantes de Sueños no es una casa editorial, ni siquiera una
editorial independiente, que contempla la publicación de una
colección variable de textos críticos. Es, por el contrario, un
proyecto, en el sentido estricto de «apuesta», que se dirige a
cartografíar las líneas constituyentes de otros órdenes de vida.
La construcción teórica y práctica de la caja de herramientas
que, con palabras propias, puede componer el ciclo de luchas
de las próximas décadas
Sin complacencias con la arcaica sacralidad de la cultura, sin
concesiones para con los narcisismos del genio literario, sin
lealtad alguna a los usurpadores del saber, TdS adopta sin
ambagajes la libertad de acceso al conocimiento. Queda, por
tanto, permitida y abierta la reproducción total o parcial de los
textos publicados, en cualquier formato imaginable, salvo por
explícita voluntad del autor o de la autora y sólo en el caso de
las ediciones con ánimo de lucro.
Omnia sunt communia!

mapas 3

Mapas. Cartas para orientarse en la geografía variable de la
nueva composición del trabajo, de la movilidad entre fronteras,
de las transformaciones urbanas. Mutaciones veloces que exigen la introducción de líneas de fuerza a través de las discusiones de mayor potencia en el horizonte global.
Mapas recoge y traduce algunos ensayos, que con lucidez y una
gran fuerza expresiva han sabido reconocer las posibilidades
políticas contenidas en el relieve sinuoso y controvertido de los
nuevos planos de la existencia.

En el principio fue...
la línea de comandos
Neal Stephenson
Traducción:

Asunción Álvarez
Presentación, edición y notas:

Miquel Vidal
Prólogo:

Pedro Jorge Romero

WUDILFDQWHVGHVXHxRV

mapas

Condiciones del copyright
Se permite la copia parcial o total, en
papel o en formato digital, de los contenidos de este libro siempre y cuando
se respete la autoría de los textos y de
las traducciones. Para ediciones con
ánimo de lucro se requiere el permiso
del titular del copyright.
© 2003, Neal Stephenson
© 2003, Traficantes de Sueños
Mayo del 2003
Tìtulo:
En el principio... fue la línea de comandos
Autora:
Neal Stephenson
traducción:
Asunción Alvárez
maquetación y diseño de cubierta:
Miquel Vidal y David Gámez Hernández
edición:
traficantes de sueños
www.traficantes.net
C\.hortaleza 19, 1º drcha.
28004 Madrid. Tlf: 915320928
e-mail:editorial@traficantes.net

Impresión:
Queimada Gráficas.
C\. Salitre, 15 28012, Madrid
tlf: 915305211

ISBN: 84-932982-3-0
Depósito legal: M-20238-2003

Índice general

1. Introducción

5

2. Descapotables, tanques y batmóviles

9

3. Lanzador de bits

15

4. Los GUIs

21

5. Lucha de clases en el escritorio

29

6. Tarro de miel, pozo de brea, lo que sea

37

7. La tecnosfera

45

8. La cultura del interfaz

51

9. Morlocks y Eloi al teclado

63

10. El trasquilón metafórico

71

11. Linux

75

12. La broca de agujero de los sistemas operativos

83

13. La tradición oral

87
3

ÍNDICE GENERAL

14. Shock de Sistema Operativo

91

15. Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos
101
16. Memento Mori

113

17. La fatiga del nerd

121

18. Etre

125

19. Mente compartida

137

20. El meñique derecho de Dios

141

4

Introducción
H ACE UNOS VEINTE A ÑOS , a Jobs y Wozniak, los fundadores de
Apple, se les ocurrió la muy extraña idea de vender máquinas
de procesamiento de información para uso doméstico. El negocio despegó, y sus fundadores hicieron un montón de dinero
y recibieron el crédito que merecı́an como osados visionarios.
Pero sobre la misma época, a Bill Gates y Paul Allen se les ocurrió una idea todavı́a más extraña y fantasiosa: vender sistemas
operativos de ordenador. Esto era mucho más extraño que la
idea de Jobs y Wozniak. Un ordenador por lo menos tenı́a cierta
realidad fı́sica. Venı́a en una caja, podı́a abrirse y enchufarse y
se podı́a ver cómo parpadeaban las luces. Un sistema operativo
no tenı́a ninguna encarnación tangible. Venı́a en un disco, claro, pero el disco no era, a todos los efectos, más que la caja que
contenı́a el sistema operativo. El producto mismo era una serie
muy larga de unos y ceros que, cuando se instalaba y se cuidaba
bien, te daba la capacidad de manipular otras series muy largas
de unos y ceros. Incluso los pocos que de hecho comprendı́an
qué era un sistema operativo de ordenador posiblemente pensaban en ello como un prodigio increı́blemente complicado de
la ingenierı́a, como un reactor o un avión espı́a U-2, y no algo
que pudiera llegar a ser (en la jerga de la alta tecnologı́a) productizado.
Pero ahora la compañı́a que fundaron Gates y Allen ven5

Introducción

de sistemas operativos como Gillette vende hojas de afeitar. Se
lanzan nuevas versiones de sistemas operativos como si fueran pelı́culas de Hollywood, con el respaldo de celebridades,
apariciones en talk shows, y giras mundiales. Su mercado es lo
bastante vasto como para que la gente se preocupe de si ha sido monopolizado por una compañı́a. Incluso los menos inclinados a la técnica de nuestra sociedad tienen ahora al menos una
idea nebulosa de lo que hacen los sistemas operativos; lo que es
más, tienen fuertes opiniones sobre sus méritos relativos. Es ya
un conocimiento compartido el que, si tienes un software que
funciona en tu Macintosh, y lo pasas a una máquina Windows,
no funciona. Esto serı́a, de hecho, un error risible e idiota, como
clavar herraduras en las ruedas de un coche.
Una persona que entrara en coma antes de la fundación de
Microsoft y despertara hoy, tomarı́a el New York Times de esta
mañana y no entenderı́a nada —casi:
Ítem: el hombre más rico del mundo hizo su fortuna a partir
de ¿qué? ¿ferrocarriles? ¿buques? ¿petróleo? No, sistemas operativos.
Ítem: el Departamento de Justicia está investigando el supuesto monopolio en sistemas operativos de Microsoft con herramientas legales que se inventaron para restringir el poder de
los jefes de bandas de ladrones del siglo XIX.
Ítem: una amiga mı́a me contó recientemente que habı́a interrumpido un (hasta entonces) estimulante intercambio de emails con un joven. Al principio parecı́a un tipo tan inteligente
e interesante, dijo, pero luego empezó a ponerse en plan PCcontra-Mac. ¿Qué diablos está pasando aquı́? Y ¿tiene futuro el
negocio de los sistemas operativos, o sólo pasado? Esta es mi
opinión, que es completamente subjetiva; pero, dado que me
he pasado bastante tiempo no sólo usando, sino programando
en Macintosh, Windows, Linux y BeOS, tal vez no sea tan desinformada como para carecer completamente de valor. Este es
un ensayo subjetivo, más crı́tica que artı́culo de investigación, y
puede parecer injusto o sesgado comparado con lo que se pue6

En el principio fue la lı́nea de comandos

de encontrar en las revistas de PC. Pero desde que salió el Mac,
nuestros sistemas operativos están basados en metáforas, y, por
lo que a mı́ respecta, es legı́timo cuestionar cualquier cosa con
metáforas dentro.

7

Introducción

8

Descapotables, tanques y
batmóviles
E N LA ÉPOCA EN QUE J OBS , Wozniak, Gates, y Allen estaban
soñando estos planes inverosı́miles, yo era un adolescente que
vivı́a en Ames, Iowa. El padre de uno de mis amigos tenı́a un
viejo descapotable oxidándose en el garaje. A veces de hecho
conseguı́a que arrancara y cuando lo hacı́a nos llevaba a dar
una vuelta por el barrio, con una expresión memorable de salvaje entusiasmo juvenil en la cara; para sus preocupados pasajeros, era un loco, tosiendo y renqueando por Ames, Iowa y
tragándose el polvo de oxidados Gremlins y Pintos, pero en su
propia imaginación él era Dustin Hoffman cruzando el Puente
de la Bahı́a con el cabello al viento.
Mirando atrás, esto me reveló dos cosas acerca de la relación
de las personas con la tecnologı́a. Una fue que el romanticismo
y la imagen inﬂuyen mucho sobre su opinión. Si lo dudan (y
tienen un montón de tiempo libre), pregúntenle a cualquiera
que tenga un Macintosh y que por ello imagina ser miembro de
una minorı́a oprimida.
El otro punto, algo más sutil, fue que la interfaz es muy importante. Claro que aquel deportivo era un coche malı́simo en
casi cualquier aspecto importante: pesado, poco ﬁable, poco potente. Pero era divertido conducirlo. Respondı́a. Cada guijarro
9

Descapotables, tanques y batmóviles

de la carretera se sentı́a en los huesos, cada matiz en el asfalto se
transmitı́a instantáneamente a las manos del conductor. Podı́a
escuchar al motor y saber qué fallaba. El volante respondı́a inmediatamente a las órdenes de las manos. Para nosotros los pasajeros, era un ejercicio fútil de no ir a ningún lado —más o
menos tan interesante como mirar por encima del hombre de
alguien que mete números en una hoja de cálculo. Pero para
el conductor era una experiencia. Durante un breve tiempo, estaba expandiendo su cuerpo y sus sentidos en un ámbito más
amplio, y haciendo cosas que no podı́a hacer sin ayuda.
La analogı́a entre coches y sistemas operativos es bastante
buena, ası́ que permı́tanme seguir con ella durante un rato, como modo de dar un resumen sumario de nuestra situación hoy
en dı́a.
Imagı́nense un cruce de carreteras donde hay cuatro puntos
de venta de coches. Uno de ellos (Microsoft) es mucho, mucho
mayor que los demás. Comenzó hace años vendiendo bicicletas
de tres velocidades ( MS - DOS); no eran perfectas, pero funcionaban, y cuando se rompı́an se arreglaban fácilmente.
Enfrente estaba la tienda de bicicletas rival (Apple), que un
dı́a empezó a vender vehı́culos motorizados —coches caros, pero de estilo atractivo, con los mecanismos herméticamente sellados, de tal modo que su funcionamiento era algo misterioso.
La tienda grande respondió apresurándose a sacar un kit de
actualización (el Windows original) al mercado. Este era un dispositivo que, cuando se atornillaba a una bicicleta de tres velocidades, le permitı́a seguir, a duras penas, el ritmo de los coches Apple. Los usuarios tenı́an que usar gafas de protección
y siempre estaban sacándose bichos de los dientes mientras los
usuarios de Apple corrı́an en su confort herméticamente sellado, burlándose por las ventanillas. Pero los Micro-motopedales
eran baratos, y fáciles de reparar comparados con los coches
Apple, y su cuota de mercado creció.
Al ﬁnal la tienda grande acabó por sacar un coche en toda
regla: un monovolumen colosal (Windows 95). Tenı́a el encan10

En el principio fue la lı́nea de comandos

to estético de un bloque soviético de viviendas para obreros,
perdı́a aceite y le estallaban las bujı́as, y fue un éxito tremendo. Poco tiempo después, sacaron también un enorme vehı́culo
para la circulación fuera de carretera destinado a los usuarios
industriales (Windows NT), que no era más bonito que el monovolumen, y sólo algo más ﬁable.
Desde entonces ha habido un montón de ruido y gritos, pero poco ha cambiado. La tienda pequeña sigue vendiendo elegantes sedanes de estilo europeo y gastándose mucho dinero
en campañas publicitarias. Tienen carteles de ((¡Liquidación!))
puestos en el escaparate desde hace tanto tiempo que ya están
amarillos y arrugados. La tienda grande sigue fabricando monovolúmenes y vehı́culos de circulación fuera de carretera, cada
vez más y más grandes.
Al otro lado de la carretera hay dos competidores que llegaron más recientemente. Uno de ellos, (Be, Inc.) vende Batmóviles plenamente operativos (los BeOS). Son más bonitos y elegantes incluso que los eurosedanes, mejor diseñados, más avanzados tecnológicamente, y al menos tan ﬁables como cualquier
otra cosa en el mercado - y sin embargo son más baratos que los
demás.
Con una excepción, claro: Linux, que está enfrente mismo, y
que no es un negocio en absoluto. Es un conjunto de tiendas de
campaña, yurtas, tipis, y cúpulas geodésicas levantadas en un
prado y organizadas por consenso. La gente que vive allı́ fabrica tanques. No son como los anticuados tanques soviéticos de
hierro forjado; son más parecidos a los tanques M1 del ejército americano, hechos de materiales de la era espacial y llenos
de soﬁsticada tecnologı́a de arriba abajo. Pero son mejores que
los tanques del ejército. Han sido modiﬁcados de tal modo que
nunca, nunca se averı́an, son lo bastante ligeros y maniobrables
como para usarlos en la calle, y no consumen más combustible
que un coche compacto. Estos tanques se producen ahı́ mismo a
un ritmo aterrador, y hay un número enorme de ellos alineados
junto a la carretera con las llaves puestas. Cualquiera que quiera
11

Descapotables, tanques y batmóviles

puede simplemente montarse en uno y marcharse con él gratis.
Los clientes llegan a este cruce en multitudes, dı́a y noche.
El noventa por ciento se van derechos a la tienda grande y compran monovolúmenes o vehı́culos para circulación fuera de carretera. Ni siquiera miran las otras tiendas.
Del diez por ciento restante, la mayorı́a va y compra un elegante eurosedán, deteniéndose sólo para mirar por encima del
hombro a los ﬁlisteos que compran monovolúmenes y vehı́culos para circulación fuera de carretera. Si acaso llegan a ﬁjarse
siquiera en la gente al otro lado de la carretera, vendiendo los
vehı́culos más baratos y técnicamente superiores, estos clientes
los desprecian, considerándolos lunáticos y descerebrados.
La tienda de batmóviles vende unos pocos vehı́culos al maniático de los coches ocasional que quiere un segundo vehı́culo
además de su monovolumen, pero parece aceptar, al menos de
momento, que es un jugador marginal.
El grupo que regala los tanques sólo permanece vivo porque lo llevan voluntarios, que se alinean al borde de la calle con
megáfonos, tratando de llamar la atención de los clientes sobre
esta increı́ble situación. Una conversación tı́pica es algo ası́:
H ACKER CON MEG ÁFONO : ¡Ahorra dinero! ¡Acepta uno de
nuestros tanques gratis! ¡Es invulnerable, y puede atravesar roquedales y ciénagas a ciento cincuenta kilómetros por hora consumiendo dos litros a los cien!
F UTURO COMPRADOR DE MONOVOLUMEN : Ya sé que lo que
dices es cierto... pero... eh... ¡yo no sé mantener un tanque!
M EG ÁFONO : ¡Tampoco sabes mantener un monovolumen!
C OMPRADOR : Pero esta tienda tiene mecánicos contratados.
Si le pasa algo a mi monovolumen, puedo tomarme un dı́a libre del trabajo, traerlo aquı́, y pagarles para que trabajen en él
mientras yo me siento en la sala de espera durante horas, escuchando música de ascensor.
M EG ÁFONO : ¡Pero si aceptas uno de nuestros tanques gratuitos te mandaremos voluntarios a tu casa para que lo arreglen
gratis mientras duermes!
12

En el principio fue la lı́nea de comandos

C OMPRADOR : ¡Manténte alejado de mi casa, bicho raro!
M EG ÁFONO : Pero...
C OMPRADOR : ¿Es que no ves que todo el mundo está comprando monovolúmenes?

13

Descapotables, tanques y batmóviles

14

Lanzador de bits
L A CONEXI ÓN ENTRE COCHES y modos de interactuar con los
ordenadores no se me habrı́a ocurrido en la época en que me
llevaban de paseo en aquel descapotable. Me habı́a apuntado a
una clase de programación en el Instituto de Ames. Tras unas
cuantas clases introductorias, nos dieron permiso a los estudiantes para entrar en una sala diminuta que contenı́a un teletipo, un teléfono, y un módem anticuado consistente en una
caja de metal con un par de cuencas de plástico encima (Nota:
muchos lectores, abriéndose camino a través de esta última oración, probablemente sintieron un retortijón inicial de temor de
que este ensayo estuviera a punto de convertirse en una tediosa
batallita sobre lo difı́cil que lo tenı́amos en los viejos tiempos;
tranquilı́cense: lo que estoy haciendo, de hecho, es colocar mis
piezas sobre el tablero de ajedrez, por ası́ decirlo, preparándome
para realizar una observación sobre temas realmente interesantes y actualizados como el Software de Código Abierto). El teletipo era exactamente el mismo tipo de máquina que se habı́a
usado, durante décadas, para envı́ar y recibir telegramas. Era
básicamente una máquina de escribir ruidosa que sólo podı́a
producir MAY ÚSCULAS. Montada a un lado habı́a una máquina
más pequeña con un largo rollo de cinta de papel, y una cesta
de plástico transparente debajo.
Para conectar este aparato (que no era un ordenador en ab15

Lanzador de bits

soluto) con la Universidad Estatal de Iowa al otro lado de la
ciudad, habı́a que coger el teléfono, marcar el número del ordenador, esperar a que llegaran ruidos raros, y entonces colocar
el auricular en las cuencas de plástico. Si acertabas, una cuenca
envolvı́a sus labios de neopreno en torno a la parte de la oreja
y el otro en torno a la parte de la boca, consumando una especie de sesenta y nueva informacional. El teletipo se estremecı́a
mientras era poseı́do por el espı́ritu del lejano ordenador, y empezaba a martillear mensajes crı́pticos.
Puesto que el tiempo de ordenador era un recurso escaso,
usábamos una especie de técnica de procesamiento en racimo.
Antes de marcar en el teléfono, conectábamos la perforadora de
cinta (una máquina subsidiaria atornillada al costado del teletipo) y tecleábamos nuestros programas. Cada vez que pulsábamos una teclar, el teletipo imprimı́a una letra en el papel delante
nuestro, de tal modo que pudiéramos leer lo que habı́amos escrito; pero al mismo tiempo convertı́a la letra en un conjunto
de ocho dı́gitos binarios, o bits, y perforaba un patrón correspondiente de agujeros a lo ancho de una cinta de papel. Los
diminutos discos de papel salidos de la cinta caı́an en la cesta
de plástico transparente, que lentamente se llenaba de lo que
sólo puede describirse como bits reales. El último dı́a del curso,
el chico más listo de la clase (no yo) saltó desde detrás de su pupitre y lanzó varios kilos de estos bits por encima de la cabeza
de nuestro profesor, como confetti, como una especie de broma
semiafectuosa. La imagen de aquel hombre sentado allı́, atenazado por las fases iniciales de una atávica reacción de lucha-ohuye, con millones de bits (megabytes) cayéndole por el pelo y
metiéndosele por la nariz y la boca, el rostro poniéndosele morado a medida que se aproximaba a la explosión, es la escena
más memorable de mi educación formal.
De cualquier modo, resultará obvio que mi interacción con
el ordenador fue de una naturaleza extremadamente formal, estando dividida en diferentes fases, a saber: 1) sentado en casa
con lápiz y papel, a kilómetros de distancia de cualquier orde16

En el principio fue la lı́nea de comandos

nador, pensaba mucho acerca de lo que querı́a que hiciera el
ordenador, y traducı́a mis intenciones a un lenguaje informático —una serie de sı́mbolos alfanuméricos sobre la página—. 2)
Llevaba esto a través de una especie de cordón sanitario informacional (cinco kilómetros a través de tormentas de nieve) hasta el colegio e introducı́a aquellas letras en una máquina —no
un ordenador— que convertı́a los sı́mbolos en números binarios
y los registraba visiblemente en cinta. 3) Entonces, mediante el
módem de las cuencas de goma, enviaba aquellos números al
ordenador de la universidad, que 4) hacı́a aritmética con ellos y
devolvı́a números diferentes al teletipo. 5) El teletipo convertı́a
estos números de nuevo en letras y los martilleaba en una página y 6) yo, mirando, interpretaba las letras como sı́mbolos signiﬁcativos.
El reparto de responsabilidades que todo esto conlleva es
admirablemente limpio: los ordenadores hacen aritmética con
bits de información. Los humanos interpretan los bits como
sı́mbolos signiﬁcativos. Pero está distinción está desdibujándose, o al menos complicándose, con la llegada de los sistemas
operativos modernos que usan, y frecuentemente abusan, del
poder de la metáfora para hacer los ordenadores disponibles
para un público más amplio. Por el camino - posiblemente debido a estas metáfora, que hacen de un sistema operativo una
especie de obra de arte —la gente empieza a ponerse emotiva—
y le toma cariño a fragmentos de software del mismo modo que
el padre de mi amigo le tenı́a cariño a su descapotable.
Puede que la gente que sólo ha interactuado con un ordenador a través de interfaces gráﬁcas de usuario como el MacOS o Windows —es decir, casi cualquiera que haya usado un
ordenador— se haya sorprendido, o al menos llamado la atención, lo de la máquina de telégrafos que yo usaba para comunicarme con un ordenador en 1973. Pero habı́a, y hay, una buena razón para usar este tipo particular de tecnologı́a. Los seres
humanos disponen de formas diversas de comunicarse, como
la música, el arte, la danza, y las expresiones faciales, pero al17

Lanzador de bits

gunas de ellas son más susceptibles que otras para expresarse
como cadenas de sı́mbolos. El lenguaje escrito es la más fácil,
porque, por supuesto, ya consiste en cadenas de sı́mbolos para
empezar. Si resulta que los sı́mbolos pertenecen a un alfabeto
fonético (y no son, por ejemplo, ideogramas), convertirlos en
bits es un procedimiento trivial que se ﬁjó tecnológicamente en
el siglo XIX, con la introducción del código morse y de otras
formas de telegrafı́a.
Tenı́amos una interfaz humano/ordenador cien años antes
de tener ordenadores. Cuando se crearon los ordenadores en la
época de la Segunda Guerra Mundial, los humanos, de modo
natural, se comunicaron con ellos, injertándolos en tecnologı́as
ya existentes para traducir letras a bits y viceversa: teletipos y
máquinas de tarjetas perforadas.
Estas encarnaban dos enfoques fundamentalmente diferentes de la computación. Cuando se usaban tarjetas, se perforaba
todo un taco y se pasaban por el lector a la vez, lo cual se llamaba procesamiento por lotes. También se podı́a hacer procesamiento por lotes con un teletipo, como ya he descrito, usando el
lector de cinta de papel, y ciertamente se nos animaba a adoptar este enfoque cuando yo estaba en el instituto. Pero —aunque
se hacı́an esfuerzos por mantenernos ignorantes de esto— el teletipo podı́a hacer algo que el lector de tarjetas no podı́a. En
el teletipo, una vez se establecı́a el vı́nculo con el módem, se
podı́a introducir sólo una lı́nea y pulsar la tecla de retorno. El
teletipo enviarı́a entonces esa lı́nea al ordenador, que podı́a responder o no con lı́neas propias, que el teletipo martillearı́a —
produciendo, con el tiempo, una transcripción del intercambio
mantenido con la máquina—. Este modo de hacerlo ni siquiera
tenı́a nombre entonces, pero cuando, mucho más tarde, apareció una alternativa, se denominó retroactivamente la Interfaz de
Lı́nea de Comandos (CLI).
Cuando fui a la universidad, usaba los ordenadores en grandes salas abarrotadas donde manadas de estudiantes se sentaban frente a versiones ligeramente actualizadas de las mismas
18

En el principio fue la lı́nea de comandos

máquinas y escribı́an programas informáticos; estas usaban mecanismos de impresión por matrices de puntos, pero eran (desde el punto de vista de la máquina) idénticas a los antiguos teletipos. En aquel momento, los ordenadores compartı́an mejor
el tiempo —es decir, los mainframes seguı́an siendo los mainframes, pero se comunicaban mejor con un gran número de terminales a la vez—. En consecuencia, ya no era necesario usar
procesamiento por lotes. Los lectores de tarjetas fueron desterrados a pasillos y sótanos, y el procesamiento por lotes se convirtió en una cosa exclusiva de nerds,1 y en consecuencia adquirió un cierto tinte arcano incluso entre aquellos de nosotros que
sabı́amos siquiera que existı́a. Todos evitábamos ya la interfaz
por Lotes, habiéndonos pasado a la Lı́nea de comandos —mi
primer cambio de paradigma operativo, y yo sin enterarme.
Habı́a una enorme pila de papel plegado en el suelo bajo cada uno de estos teletipos gloriﬁcados, y kilómetros de papel se
estremecı́an mientras pasaban por sus rodillos. Casi todo este
papel se tiraba o se reciclaba sin haber sido tocado jamás por la
tinta, una atrocidad ecológica tan ﬂagrante que aquellas máquinas pronto fueron reemplazadas por terminales de vı́deo —los
llamados ((teletipos de vidrio)), que eran más slenciosos y no
desperdiciaban papel—. Sin embargo, desde el punto de vista
del ordenador, éstos también eran indistinguibles de las máquinas de teletipo de la Segunda Guerra Mundial. A todos los efectos, seguimos usando tecnologı́a victoriana para comunicarnos
con los ordenadores hasta cerca de 1984, cuando se introdujo el
Macintosh con su Interfaz Gráﬁca de Usuario ( GUI, ((Graphical
User Interface))). Incluso después de eso, la lı́nea de comandos
siguió existiendo como estrato subyacente —una especie de reﬂejo medular— a muchos sistemas informáticos modernos durante la edad de oro de los GUI.
1 Nerd: literalmente ((empollón)), pero en la jerga hacker se ha asumido de
forma irónica (((news for nerds)) es el lema de slashdot, el foro web más importante dedicado al software libre), perdiendo el matiz originalmente despectivo,
y ha acabado usándose como sinónimo de alguien que se preocupa por las cosas
importantes y no se entretiene en trivialidades. (N. del E.)

19

Lanzador de bits

20

Los GUIs
LO

PRIMERO QUE TIENE QUE HACER CUALQUIER PROGRAMA -

DOR al escribir un nuevo fragmento de software es decidir cómo

tomar la información con que está trabajando (en un programa
gráﬁco, una imagen; en una hoja de cálculo, una tabla de números) y convertirla en una serie lineal de bytes. Estas cadenas de
bytes se suelen denominar archivos o (de modo algo más a la
última) ﬂujos. Son a los telegramas lo que los humanos actuales
son al hombre de Cromañón, lo que quiere decir la misma cosa
con distinto nombre. Todo lo que se ve en la pantalla del ordenador —Tomb Raider, los correos electrónicos de voz digitalizada,
los faxes, y los documentos de procesador de textos escritos en
treinta siete tipos diferentes— sigue siendo, desde el punto de
vista del ordenador, igual que telegramas, sólo que son mucho
más largos, y requieren más aritmética.
El modo más rápido de apreciarlo es abriendo el navegador,
visitando un sitio web, y seleccionando la opción ((Ver Código
Fuente)) en el menú. Saldrá código informático parecido a este:
<HEAD>
<TITLE>C R Y P T O N O M I C O N</TITLE>
</HEAD>
<BODY BGCOLOR="#000000" LINK="#996600" ALINK="#FFFFFF"
VLINK="#663300">
<MAP NAME="navtext">
AREA SHAPE=RECT HREF="praise.html" COORDS="0,37,84,55">

21

Los GUIs

<AREA SHAPE=RECT HREF="author.html" COORDS="0,59,137,75">
<AREA SHAPE=RECT HREF="text.html" COORDS="0,81,101,96">
<AREA SHAPE=RECT HREF="tour.html" COORDS="0,100,121,117">
<AREA SHAPE=RECT HREF="order.html" COORDS="0,122,143,138">
<AREA SHAPE=RECT HREF="beginning.html"
COORDS="0,140,213,157">v</MAP>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="520">
<TR>
<TD VALIGN=TOP ROWSPAN="5">
<IMG SRC="images/spacer.gif" WIDTH="30" HEIGHT="1" BORDER="0">
</TD>
<TD VALIGN=TOP COLSPAN="2">
<IMG SRC="images/main_banner.gif" ALT="Cryptonomicon by Neal
Stephenson" WIDTH="479" HEIGHT="122" BORDER="0">
</TD>
</TR>

Esto se llama HTML, Lenguaje de Marcado de HiperTexto, y
básicamente es un lenguaje de programación muy sencillo que
le dice al navegador cómo dibujar una página en la pantalla.
Cualquiera puede aprender HTML y mucha gente lo hace. Lo
importante es que, por muchas espléndidas páginas multimedia que representen, los archivos de HTML son sólo telegramas.
Cuando Ronald Reagan era locutor de radio, solı́a informar
de los partidos de béisbol leyendo las concisas descripciones
que llegaban por el telégrafo y se imprimı́an en cinta de papel.
Se sentaba solo en una habitación insonorizada con un micrófono, y la cinta de papel salı́a de la máquina y le caı́a en la palma
de la mano, cubierta de crı́pticas abeviaturas. Si el tanteo pasaba
de tres a dos, Reagan describı́a la escena como se la imaginaba:
El fornido zurdo sale del puesto de bateo para secarse el sudor.
El árbitro se adelanta para limpiar el polvo de la base etc. Cuando el criptograma en la cinta de papel anunciaba un golpe en
una base, Reagan golpeaba el borde de la mesa con un lápiz,
creando un pequeño efecto sonoro, y describı́a el arco de la pelota como si pudiera verlo de verdad. Sus oyentes, muchos de
los cuales presumiblemente creı́an que Reagan estaba de hecho
en el campo de juego viendo el partido, reconstruı́an la escena
22

En el principio fue la lı́nea de comandos

en su mente según sus descripciones.
Ası́ es exactamente como funciona la WWW: los archivos
son la concisa descripción en la cinta de papel, y el navegador es Ronald Reagan. Lo mismo vale para los GUI en general.
HTML

Ası́ que un sistema operativo es un montón de metáforas
y abstracciones que media entre los telegramas y tú, encarnando diversos trucos que el programadosr usó para convertir la
información con la que estás trabajando —ya sean imágenes,
mensajes de correo electrónico, pelı́culas, o documentos de procesador de textos— en las cadenas de bytes que son lo único
con lo que funcionan los ordenadores. Cuando usamos equipo
telegráﬁco genuino (teletipos) o sus sustitutos de alta tecnologı́a
(teletipos de vidrio, o la lı́nea de comandos de MS - DOS) para
trabajar con nuestros ordenadores, estamos muy cerca de la base de este montón. Cuando usamos la mayor parte de sistemas
operativos modernos, sin embargo, nuestra interacción con la
máquina se ve fuertemente mediada. Todo lo que hacemos es
interpretados oy traducido una y otra vez mientras se abre camino a través de todas las metáfora y abstracciones.
El sistema operativo de Macintosh fue una revolución en el
buen y en el mal sentido. Obviamente era cierto que las interfaces de lı́nea de comandos no eran para todo el mundo, y que
estarı́a bien hacer los ordenadores accesibles a un público menos técnico - si no porrazones altruistas, entonces porque este
tipo de persona constituı́a un mercado incomparablemente mayor. Está claro que los ingenieros del Mac vieron todo un paı́s
nuevo que se les abrı́a; casi podı́as oı́rles mascullas, ¡Caray! ¡Ya
no tenemos que limitarnos a los archivos como ﬂujos lineales
de bytes, vive la revolution, veamos lo lejos que llegamos con
esto!. No habı́a ninguna interfaz de lı́nea de comandos disponible en el Macintosh; hablabas con la máquina a través del ratón,
o no hablabas. Esta era una especie de declaración de principios, una credencial de pureza revolucionaria. Parecı́a que los
diseñadores del Mac pretendı́an barrer las Interfaces de Lı́nea
23

Los GUIs

de comandos a la papelera de la historia.
Mi propia historia de amor con el Macintosh comenzó en la
primavera de 1984 en una tienda de ordenadores en Cedar Rapids, Iowa, cuando un amigo mı́o - por coincidencia, el hijo del
dueño del descapotable - me mostró un Macintosh ejecutando
MacPaint, el revolucionario programa de diseño. Terminó en julio de 1995 cuando traté de guardar un archivo grande e importante en mi Macintosh Powerbook y en vez de eso destruyó los
datos de modo tan concienzudo que dos programas distintos de
recuperación de datos fueron incapaces de hallar rastro alguno
de que hubiera existido jamás. En aquellos diez años, sentı́a una
pasión por el MacOS que en aquel momento parecı́a virtuosa y
razonable, pero que mirando atrás me parece el mismo tipo de
enamoramiento engañoso que el padre de mi amigo tenı́a con
su coche.
La introducción del Mac inició una especie de guerra santa
en el mundo de la informática. ¿Eran los GUI una brillante innovación tecnológica que convertı́a a los ordenadores en más accesibles para los humanos y por tanto para las masas, llevándonos
a una revolución sin precedentes en la sociedad humana, o una
insultante chorrada audiovisual diseñada por hackers zumbados de San Francisco, que despojaba a los ordenadores de su
potencia y ﬂexibilidad y convertı́a el serio y noble arte de la
computación en un pueril videojuego?
Este debate, de hecho, me parece más interesante hoy en
dı́a que a mediados de los ochenta. Pero la gente más o menos
dejó de debatir cuando Microsoft respaldó la idea de los GUI
al sacar el primer Windows. En aquel momento, los partidarios
de la lı́nea de comandos se vieron relegados al estatus de viejos carcamales, mientras se disparaba un nuevo conﬂicto entre
usuarios de MacOS y usuarios de Windows.
Habı́a mucho sobre lo que discutir. Los primeros Macintosh
parecı́an distintos de otros PC incluso estando apagados: consistı́an en una caja que contenı́a tanto la CPU (la parte del ordenador que hace aritmética con los bits) como la pantalla del
24

En el principio fue la lı́nea de comandos

monitor. Esto suponı́a, en aquel momento, una especie de aﬁrmación ﬁlosóﬁca: Apple querı́a convertir el ordenador personal
en un electrodoméstico, como la tostadora. Pero también reﬂejaba las exigencias puramente técnicas de ejecutar una inferfaz
gráﬁca de usuario. En una máquina de GUI, los chips que dibujan las cosas en la pantalla tienen que ir integrados con la
unidad de procesamiento central, o CPU, del ordenador, en un
grado mucho mayor que en las interfaces de lı́nea de comandos,
que hasta hace poco ni siquiera sabı́an que no estaban hablando
sólo con teletipos.
Esta distinción era de naturaleza técnica y abstracta, pero
se hacı́a más clara cuando la máquina fallaba (como sucede
frecuentemente con tecnologı́as cuyo funcionamiento se comprende mejor viéndolas fallar). Cuando todo se iba a la porra
y la CPU empezaba a escupir bits aleatoriamente, el resultado,
en una máquina de interfaz de lı́nea de comandos, era lı́neas
y lı́neas de caracteres perfectamente formados pero aleatorios
en la pantalla - lo que los conocedores conocı́an como ponerse
cirı́lico. Pero para el MacOS la pantalla no era teletipo sino un
lugar en el que poner gráﬁcos; la imagen en pantalla era un mapa de bits, una representación literal de los contenidos de una
parte dada de la memoria del ordenador. Cuando el ordenador
fallaba y escribı́a tonterı́as en el mapa de bits, el resultado era
algo que recordaba vagamente a la nieve en una televisión estropeada: un snow crash.1
E incluso tras la introducción de Windows, las diferencias
subyacentes persistieron: cuando una máquina Windows tenı́a
problemas, la vieja interfaz de lı́nea de comandos caı́a sobre el
GUI como un telón de amianto, sellando el escenario de una
ópera incendiada. Cuando un Macintosh tenı́a problemas, te
presentaba el dibujito de una bomba, que resultaba gracioso la
primera vez que lo veı́as.
1 Literalmente: ((cuelgue de nieve)). Es también el tı́tulo de una magnı́ﬁca novela de ciencia-ﬁcción del propio Stephenson, auténtica obra de culto entre los
hackers, publicada en 1994, y traducida al castellano por la editorial Gigamesh
en 1999.(N. del E.)

25

Los GUIs

Y éstas no eran en absoluto diferencias superﬁciales. El retorno de Windows a una interfaz de lı́nea de comandos cuando tenı́a problemas les demostraba a los partidarios del Mac
que Windows no era más que una fachada barata, como una
chillona manta afgana tendida sobre un sofa putrefacto. Les
perturbaba y molestaba la sensación de que bajo la ostensiblemente amistosa interfaz de usuario de Windows habı́a —
literalmente— un subtexto.
Por su parte, los fans de Windows podrı́an haber observado
agriamente que todos los ordenadores, incluso los Macintosh,
estaban construidos sobre ese mismo subtexto, y que la negativa
de los dueños de Macs a admitir ese hecho parecı́a apuntar a
una voluntad, incluso un deseo, de engañarse.
En cualquier caso, un Macintosh tenı́a que mover bits individuales en los chips de memoria en la tarjeta de vı́deo, y tenı́a
que hacerlo muy rápido, y en patrones arbitrariamente complicados. Hoy en dı́a esto resulta barato y fácil, pero en el régimen
tecnológico vigente a principios de los ochenta, el único modo
realista de hacerlo era integrar la placa base (que contenı́a la
CPU ) y el sistema de vı́deo (que contenı́a la memoria proyectada sobre la pantalla) como un todo —de ahı́ el único contenedor,
herméticamente sellado, que hacı́a al Macintosh tan distintivo.
Cuando salió Windows llamaba la atención por su fealdad,
y sus actuales sucesores, Windows 95 y Windows NT, no son
cosas que la gente pagarı́a por ver. La absoluta falta de atención
de Microsoft por la estética nos proporcionaba muchas oportunidades a todos los amantes de Mac para mirarles por encima
del hombro. El que Windows se pareciera un montón a un calco
directo de MacOS nos daba además una fuerte sensación de ultraje moral.2 Entre las personas que realmente conocı́an y apreciaban los ordenadores (los hackers, en el sentido no peyorativo
que Steven Levy le da a la palabra3 ) y unos pocos otros ámbitos
2 De

hecho, Apple demandó a Microsoft por plagiarle la interfaz gráﬁca, juicio que perdió. Al parecer, Apple olvidó demasiado rápido que ellos mismos
habı́an copiado diez años antes dicha interfaz a Xerox.(N. del E.)
3 Se reﬁere a la ya obra clásica Hackers (1984), en el que S. Levy expuso una

26

En el principio fue la lı́nea de comandos

como los músicos profesionales, los artistas gráﬁcos y los maestros, el Macintosh, durante un tiempo, era simplemente el ordenador. No sólo se consideraba una obra soberbia de ingenierı́a,
sino la encarnación de ciertos ideales acerca del uso de la tecnologı́a para beneﬁciar a la humanidad, mientras que Windows se
consideraba una imitación patéticamente torpe y una siniestra
combinación para dominar el mundo, todo en uno. Ya entonces se habı́a establecido un patrón que persiste hasta nuestros
dı́as: a la gente no le gusta Microsoft, lo cual es aceptable; pero
no les gusta por razones mal consideradas y en último término
contradictorias.

serie de principios que habı́an guiado a la ética hacker desde los años sesenta.
Levy los resumió ası́ en su obra: ((El acceso a los ordenadores y a todo lo que
te pueda enseñar algo sobre cómo funciona el mundo debe ser ilimitado. Toda
la información debe ser libre. Desconﬁa de la autoridad, promueve la descentralización; los hackers deberı́an ser juzgados por su habilidad, no por su edad,
nivel, raza o posición. Puedes crear arte y belleza con tu ordenador. Los ordenadores pueden cambiar tu vida a mejor.))

27

Los GUIs

28

Lucha de clases en el
escritorio
A HORA QUE YA HEMOS DEJADO claro el trasfondo, merece la
pena revisar algunos hechos básicos: como cualquier compañı́a
de accionariado público y con ﬁnes de lucro, Microsoft ha tomado prestado un montón de dinero de algunas personas (sus
accionistas) para estar en el negocio del bit. Como ejecutivo de
esa compañı́a, Bill Gates sólo tiene una responsabilidad, que es
maximizar el rendimiento de las inversiones. Lo ha hecho increı́blemente bien. Cualquier acción emprendida en el mundo
por Microsoft —cualquier software que lancen, por ejemplo—
es básicamente un epifenómeno que no puede comprenderse ni
entederse salvo en la medida en que reﬂejan el desempeño por
Bill Gates de su única responsibilidad.
De ello se sigue que si Microsoft vende mercancı́as que son
estéticamente desagradables, o que no funcionan demasiado
bien, no signiﬁca que sean (respectivamente) ﬁlisteos o medio
tontos. Se debe a que la excelente dirección de Microsoft ha
llegado a la conclusión de que pueden ganar más dinero para
sus accionistas lanzando productos con imperfecciones obvias
y conocidas del que ganarı́an haciéndolos hermosos o libres de
errores. Esto es irritante, pero (al ﬁnal) no tan irritante como
contemplar cómo Apple se autodestruye inexplicable e impla29

Lucha de clases en el escritorio

cablemente.
No resulta difı́cil encontrar en la Red una hostilidad hacia
Microsoft que mezcla dos elementos: resentidos que sienten que
Microsoft es demasiado poderosa, y desdeñosos que creen que
es chapucera. Esto recuerda fuertemente al periodo álgido del
comunismo y el socialismo, cuando se odiaba a la burguesı́a
desde ambos lados: los proletarios, porque la burguesı́a tenı́a
todo el dinero, y los intelectuales, por su tendencia a gastárselo en enanitos de jardı́n. Microsoft es la encarnación misma de
la moderna prosperidad de alta tecnologı́a - en una palabra, es
burguesa - y atrae todos los mismos odios.
La pantalla inicial de Microsoft Word 6.0 lo resumı́a todo
bastante bien: cuando iniciabas el programa te soltaba la imagen de un bolı́grafo caro encima de un par de folios de papel de
escritura hecho a mano. Obviamente, era un intento por hacer
que el software pareciera pijo, y puede que valiera para algunos, pero no para mı́, porque era un bolı́grafo, y yo soy hombre
de pluma estilográﬁca. Si lo hubiera hecho Apple, habrı́an usado una pluma Mont Blanc, o quizás un pincel caligráﬁco chino.
Dudo que esto fuera accidental. Hace poco estuve reinstalando
Windows NT en uno de los ordenadores de mi casa, y tuve que
hacer doble clic en el icono del Panel de Control muchas veces.
Por razones que resulta difı́cil comprender, este icono consiste
en el dibujito de un martillo y una broca o un destornillador
encima de una carpeta de archivos.
Estas meteduras de pata estéticas le dan a uno unas ganas
casi incontrolables de reı́rse de Microsoft, pero, de nuevo, ésa
no es la cuestión - si Microsoft hubiese hecho pruebas con grupos diana sobe posibles gráﬁcos alternativos, probablemente
habrı́an hallado que el oﬁcinista medio asociaba las estilográﬁcas con los amanerados ejecutivos de rango más alto, y estaba
más cómodo con los bolı́grafos. De igual forma, los tipos normales, los papás con entradas del mundo que posiblemente cargan con la responsabilidad de montar y conﬁgurar el ordenador
en casa, probablemente preﬁeren el dibujito de un martillo —
30

En el principio fue la lı́nea de comandos

quizás al tiempo que albergan fantası́as de usar un martillo de
verdad con sus ordenadores.
Es el único modo en que consigo explicar cierto hechos curiosos acerca del actual mercado de sistemas operativos, tales
como el que el noventa por ciento de todos los clientes sigan
comprando monovolúmenes de la tienda de Microsfot mientras
que un se puede llevar los tanques gratuitos sin más, al otro lado de la calle.
A Bill Gates no le resultó difı́cil distribuir una sarta de unos
y ceros, una vez se le ocurrió la idea. Lo duro era venderla —
asegurarles a los clientes que de hecho estaban obteniendo algo
a cambio de su dinero.
Cualquier que haya comprado software en una tienda alguna vez habrá tenido la curiosamente desalentadora experiencia
de llevarse la caja envuelta en plástico a casa, abrirla, encontrarse con el 95 % es aire, tirar todas las tarjetitas, propaganda y
basura, y meter el disco en el ordenador. El resultado ﬁnal (después de haber perdido el disco) no es nada más que algunas
imágenes en la pantalla del ordenador, y algunas posibilidades
de que antes se carecı́a. A veces, ni siquiera eso —en vez de ello,
uno se encuentra con una serie de mensajes de error. Pero el dinero se ha ido deﬁnitivamente. Ahora casi estamos acostumbrados e esto pero hace veinte años era una proposición muy sospechosa. De todas formas, Bill Gates consiguió que funcionara.
No hizo que funcionara vendiendo el mejor software ni ofreciendo el precio más barato. Pero de algún modo consiguió que
la gente creyera que estaban recibiendo algo a cambio de su dinero.
Las calles de todas las ciudades del mundo están llenas
de esos pesados, ruidosos monovolúmenes. Cualquiera que no
tenga uno se siente un poco raro, y se pregunta, pese a sı́ mismo,
si no será hora de dejar de resistirse y comprar uno; cualquiera
que tenga uno, se siente seguro que ha adquirido una posesión
signiﬁcativa, incluso los dı́as en que el vehı́culo está en el taller
de reparación.
31

Lucha de clases en el escritorio

Todo esto es perfectamente congruente con la pertenencia
a la burguesı́a, que es un estado tanto mental como material.
Y explica por qué Microsoft se ve constantemente atacado en
la Red desde ambos lados. Los que se siente pobres y oprimidos interpretan todo lo que hace Microsoft como parte de algún
siniestro complot orwelliano. A los que les gusta considerarse
usuarios inteligentes e informados les desquicia lo chapucero
de Windows.
No hay nada que moleste más a las personas soﬁsticadas
que ver cómo alguien que es lo bastante rico como para evitarlo
es hortera —a menos que se den cuenta, un momento después,
de que probablemente sabe que es hortera y sencillamente no le
importa y va a seguir siendo hortera, y rico, y feliz, para siempre. Microsoft tiene la misma relación con la élite de Silicon Valley que la que mantenı́an los Beverly Hillbillies con su banquero, el Sr. Drysdale— a quien no le irrita tanto el hecho de que
los Clampetts se mudaran a su barrio como el saber que, cuando Jethro tenga setenta años, seguirá hablando como un paleto
y llevando petos, y seguirá siendo mucho más rico que el Sr.
Drysdale.
Incluso el hardware que empleaba Windows, comparado
con las máquinas que sacaba Apple, parecı́a cosa de palurdos,
y en su mayor parte sigue pareciéndolo. La razón es que Apple
era y es una compañı́a de hardware, mientras que Microsoft era
y es una compañı́a de software. Apple tenı́a ası́ el monopolio
del hardware que ejecutaba MacOS, mientras que el hardware
compatible con Windows venı́a del mercado libre. El mercado
libre parece haber decidido que la gente no va a pagar por ordenadores elegantes; los fabricantes de hardware para PC que
contratan a diseñadores para hacer que sus productos tengan
un aire distintivo acaban vapuleados por fabricantes taiwaneses de clones metidos en cajas que parecen ladrillos que uno se
encontrarı́a delante de una caravana. Pero Apple podı́a hacer
su software todo lo bonito que quisiera y simplemente pasarle
la factura a sus encantados consumidores, como yo. La semana
32

En el principio fue la lı́nea de comandos

pasada (escribo esta frase a principios de enero de 1999), las secciones de tecnologı́a de todos los periódicos estaban llenas de
reportajes aduladores sobre el lanzamiento por Apple del iMac
en varios colores nuevos, como Arándano y Mandarina.
Apple siempre ha insistido en tener el monopolio de su
hardware, salvo durante un breve periodo a mediados de los
noventa, cuando permitieron que los fabricantes de clones compitieran con ellas, antes de acabar con su negocio. El hardware
de Macintosh, en consecuencia, era caro. No lo abrı́as y enredabas con él porque hacerlo anulaba la garantı́a. De hecho, el primer Mac estaba especı́ﬁcamente diseñado para resultar difı́cil
de abrir —necesitabas un juego de herramientas exóticas, que
podı́as comprar mediante pequeños anuncios que empezaron a
aparecer en las páginas ﬁnales de las revistas unos pocos meses
después de que saliera al mercado el Mac. Estos anuncios siempre tenı́an un cierto aire sórdido, como si anunciaran ganzúas
en la contraportada de sensacionalistas revistas de detectives.
Esta polı́tica de monopolio puede explicarse al menos de tres
maneras distintas.
La explicación caritativa es que la polı́tica de monopolio sobre
el hardware reﬂejaba el deseo por parte de Apple de proporcionar una unión sin fallas de hardware, sistema operativo, y
software. Algo hay de esto. Ya resulta bastante difı́cl diseñar un
sistema operativo que funcione bien en un hardware especı́ﬁco, diseñado y probado por ingenieros que trabajan al lado, en
la misma compañı́a. Diseñar un sistema operativo que funcione
en un hardware cualquiera, fabricado por hacedores de clones
rabiosamente competitivos al otro lado de la Lı́nea de Fecha Internacional, es muy difı́cil, y explica gran parte de los problemas
que tiene la gente cuando usa Windows.
La explicación ﬁnanciera es que Apple, a diferencia de Microsoft, es y siempre ha sido una compañı́a de hardware. Sencillamente depende de los ingresos de la venta de hardware, y no
puede subsistir sin ellos.
La explicación no tan caritativa tiene que ver con la cultura
33

Lucha de clases en el escritorio

corporativa de Apple, que tiene sus raı́ces en el Baby Boom del
Área de la Bahı́a de San Francisco.
Dado que voy a hablar sobre cultura durante un rato, probablemente está bien que ponga las cartas sobre la mesa, para
protegerme de las acusaciones de conﬂicto de intereses y falta
de ética: 1) Geográﬁcamente, soy de Seattle, de temperamento saturnino, e inclinado a mirar con malos ojos la dionisı́aca
Área de la Bahı́a de San Francisco, igual que a ellos nosotros les
molestamos y escandalizamos. 2) Cronológicamente pertenezco a una generación posterior al Baby Boom. Al menos, ası́ me
siento, ya que nunca experimenté las partes divertidas y emocionantes del Baby Boom - sólo me pasé un montón de tiempo
riendo apropiadamente ante las irritantemente vacuas anécdotas de los pertenecientes al Baby Boom sobre lo puestos que iban
en diversas ocasiones, y escuchando cortés sus aseveraciones
de lo estupenda que era su música. Pero incluso desde aquella
distancia resultaba posible extraer ciertos patrones, y uno que
reaparecı́a tan regularmente como una leyenda urbana era el de
alguien que habı́a mudado a una comuna de hippies con sandalias y signos de la paz para acabar descubriendo que, bajo
aquella fachada, los tipos al mando eran de hecho obsesos del
control; y que, dado que vivir en una comuna, donde los ideales de la paz, el amor y la armonı́a se mantenı́an de boquilla,
les habı́a privado de válvulas de escape normales y socialmente
admitidas para su obsesión, tendı́a a salir de de otros modos,
invariablemente más siniestros
Dejaré el aplicar esto al caso de Apple como ejercicio para el
lector —un ejercicio no demasiado difı́cil.
Resulta un poco desconcertante, al principio, pensar en Apple como un obseso del control, porque contradice completamente su imagen corporativa. ¿No fueron estos los tipos que
lanzaron los famosos anuncios durante la Super Bowl en los
que ejecutivos trajeados, con los ojos vendados, saltaban como
lemmings de un acantilado? ¿No es ésta la compañı́a que ahora
mismo saca anuncios con el Dalai Lama (salvo en Hong Kong)
34

En el principio fue la lı́nea de comandos

y Einstein y otros rebeldes alternativos?
Ciertamente es la misma compañı́a, y el hecho de que hayan implantado esta imagen de sı́ mismos como librepensadores creativos y rebeldes en la mente de tantos escépticos inteligentes y encallecidos por los medios realmente hace que uno
se pare a pensar. Da fe del insidioso poder de las campañas
publicitarias costosas y tal vez, en cierta medida, de la facilidad de la gente para creer lo que quiere creer. También suscita la pregunta de por qué a Microsoft se le da tan mal las relaciones públicas, cuando la historia de Apple demuestra que,
pasándoles gordos cheques a buenas agencias publicitarias, se
puede implantar una imagen corporativa en la mente de personas inteligentes que diﬁere completamente de la realidad. (La
respuesta, para aquéllos a los que no les gustan las espadas de
Damocles, es que, ya que Microsoft se ha hecho con las mentes y los corazones de la silenciosa mayorı́a - la burguesı́a -, les
importa un pito tener una imagen elegante, igual que Richard
Nixon. Quiero creer,- el mantra que Fox Mulder tiene puesto en
la pared de su despacho en los Expedientes X - resulta aplicable
de diferentes modos a estas dos compañı́as; los partidarios del
Mac quieren creen en la imagen de Apple que transmiten estos
anuncios, y en la noción de que los Macs son de algún modo
fundamentalmente diferentes de otros ordenadores, mientras
que los seguidores de Windows quieren creer que obtienen algo a cambio de su dinero, mediante una respetable transacción
comercial).
En cualquier caso, en 1987 tanto MacOS como Windows ya
estaban en el mercado, ejecutándose en plataformas de hardware que eran radicalmente diferentes entre sı́ - no sólo en el sentido de que MacOS usaba chips de CPU de Motorola, mientras
que WIndows usaba Intel, sino también en el sentido - entonces
pasado por alto, pero a largo plazo mucho más signiﬁcativo - de
que el negocio de hardware de Apple era un monopolio rı́gido
y Windows era un abierto-a-todos.
Pero todas las ramiﬁcaciones de esto no estuvieron claras
35

Lucha de clases en el escritorio

hasta muy recientemente - de hecho, aún están desplegándose,
de modos notablemente extraños, como explicaré cuando lleguemos a Linux. El resultado es que millones de personas se
acostumbraron a usar GUI de una forma u otra. Con ello, hicieron que Apple/Microsoft ganaran un montón de dinero. La
fortuna de muchas personas ha acabado por ir ligada a la capacidad de estas compañı́as de seguir vendiendo productos cuya
vendibilidad resulta muy cuestionable.

36

Tarro de miel, pozo de brea,
lo que sea
C UANDO G ATES Y A LLEN INVENTARON la idea de vender software, se encontraron con la crı́tica tanto de los hackers como de
los sobrios hombres de negocios. Los hackers entendı́an que el
software sólo era información, y le ponı́an objeciones a la idea
de venderla. Estas objeciones eran en parte morales. Los hackers
salı́an del mundo cientı́ﬁco y académico, donde resulta imperativo hacer los resultados del propio trabajo disponibles para el
público. También eran en parte prácticas: ¿cómo puedes vender
algo que puede copiarse fácilmente? Los hombres de negocioes,
que son el polo opuesto de los hackers en tantos aspectos, tenı́an
sus propias objeciones. Acostumbrados a vender tostadoras y
seguros, era natural que les resultara difı́cil comprender cómo
una larga sarta de unos y ceros podı́a constituir un producto
vendible.
Obviamente, Microsoft remontó estas objeciones, ası́ como
Apple. Pero las objeciones siguen ahı́. El hacker más hacker de
todos, el Ur-hacker por ası́ decirlo, era y es Richard Stallman,
que se irritó tanto con la malvada práctica de vender software
que, en 1984 (el mismo año en que salió a la venta el Macintosh)
fue y fundó algo llamado la Fundación del Software Libre (Free
Software Foundation), que comenzó a trabajar en algo llaman37

Tarro de miel, pozo de brea, lo que sea

do GNU. GNU son las siglas de Gnu’s Not Unix (((Gnu No es
Unix))), pero se trata de una broma en más de un sentido, porque GNU ciertamente es Unix. Debido a cuestiones de copyright
(Unix es una marca de AT&T), sencillamente no podı́an aﬁrmar
que fuera Unix, y ası́, sólo para asegurarse, aﬁrmaban que no
lo era. Pese al incomparable talento y empuje del Sr. Stallman
y otros seguidores de GNU, su proyecto no pudo construir una
Unix gratuita para competir contra los sistemas operativos de
Windows y Apple era un poco como tratar de excavar un sistema de metro con una cucharilla. Esto es, hasta la llegada de
Linux, de la que hablaré luego.
Pero la idea básica de recrear un sistema operativo a partir
de la nada era perfectamente consistente y completamente factible. Se ha hecho muchas veces. Es inherente a la naturaleza
misma de los sistemas operativos.
Los sistemas operativos no son estrictamente necesarios. No
hay razón por la que un escritor de código lo bastante dedicado no pueda partir de la nada en cada proyecto y escribir
nuevo código para manejar operaciones tan básicas y de bajo
nivel como controlar las cabezas lectoras/escritoras en los controladores de disco y activar pı́xeles en pantalla. Los primeros
ordenadores tenı́an que programarse de est modo. Pero dado
que casi todos los programas tienen que desempeñar las mismas operaciones básicas, este enfoque llevarı́a a una tremenda
duplicación del esfuerzo
No hay nada más desagradable para el hacker que la duplicación del esfuerzo. El primer y más importante hábito mental
que desarrolla la gente cuando aprende a escribir programas
de ordenador es generalizar, generalizar, generalizar. Hacer su
código lo más modular y ﬂexible posible, descomponer los problemas grandes en pequeñas subrutinas que puedan usarse una
y otra vez en diferentes contextos. En consecuencia, el desarrollo de los sistemas operativos, pese a ser técnicamente innecesario, era inevitable. Porque en el fondo un sistema operativo no
es más que una biblioteca que contiene el código más usado, es38

En el principio fue la lı́nea de comandos

crito una vez (y con suerte, bien escrito), y puesto a disposición
de cualquier escritor de código que lo necesite.
Ası́ que un sistema operativo privado y secreto es una contradicción en términos. Va contra la razón de ser de los sistemas
operativos. Y de cualquier modo es imposible mantenerlos en
secreto. El código fuente —las lı́neas originales de texto escritas
por los programadores— pueden mantenerse en secreto. Pero el
conjunto de un sistema operativo es una colección de pequeñas
subrutinas que realizan tareas muy especı́ﬁcas y muy claramente deﬁnidas. Qué hacen exactamente esas subrutinas ha de ser
público, de forma muy explı́cita y exacta, o de lo contrario el
sistema operativo es completamente inservible para los programadores; no pueden usar esas subrutinas si no tienen perfecta
y total comprensión de lo que hacen las subrutinas.
Lo único que no se hace público es exactamente cómo hacen
las subrutinas lo que hacen. Pero una vez sabes lo que hace una
subrutina, generalmente resulta bastante fácil (si eres un hacker) escribir tu propia rutina que haga exactamente lo mismo.
Puedes tardar algo, y resulta tedioso y poco gratiﬁcante, pero
en la mayorı́a de los casos no es demasiado difı́cil.
Lo que es difı́cil, para un hacker como para un escritor de ﬁcción, no es escribir; es decidir qué escribir. Y los vendedores de
sistemas operativos comerciales ya han decidido, y han hecho
públicas sus decisiones.
Esto se sabe desde hace mucho. MS - DOS fue duplicado funcionalmente por un producto rival, escrito a partir de la nada,
llamado ProDOS; que hacı́a las mismas cosas de modo muy parecido. En otras palabras, otra compañı́a pudo escribir código
que hacı́a las mismas cosas que MS - DOS y lo vendió para obtener beneﬁcios. Si usas el sistema operativo de Linux, puedes
obtener un programa gratuiro llamando WINE que es un emulador de Windows; esto es, puedes abrir una ventan en tu escritorio que ejecuta programas de Windows. Quiere decir que se
ha recreado un sistema operativo de Windows completamente
funcional dentro de Unix, como un barquito en una botella. Y el
39

Tarro de miel, pozo de brea, lo que sea

propio Unix, que es un sistema operativo mucho más soﬁsticado que MS - DOS, ha sido reconstruido a partir de la nada una y
otra vez. Sun, Hewlett-Packard, AT & T, Silicon Graphics, IBM, y
otros vendieron versiones de él.
En otras palabras, la gente lleva reescribiendo código básico
de sistemas operativos tanto tiemo que toda la tecnologı́a que
consitutı́a un sistema operativo en el sentido tradicional (preGUI ) de esa expresión es ahora tan barata y común que es literalmente gratuita. No sólo no podrı́an Gates y Allen vender
MS - DOS hoy, ni siquiera podrı́an regalarlo, por ya se regalan
sistemas operativos mucho más potentes. Incluso el Windows
original (que era el único sistema de ventanas hasta 1995) ya
no vale nada, dado que no tiene sentido poseer algo que puede
emularse dentro de Linux - que es gratuito.
De este modo, el negocio de los sistemas operativos es muy
diferente de, pongamos, el negocio de la venta de coches. Incluso un viejo coche de segunda mano tiene algún valor. Puedes
usarlo para ir al basurero, o vender sus partes. El destino de
los bienes manufacturados es depreciarse lentamente a medida que envejecen y tienen que competir contra productos más
modernos.
Pero el destino de los sistemas operativos es volverse gratuitos.
Microsoft es una gran compañı́a de aplicaciones de software. El de las aplicaciones —tales como Microsoft Word— es un
área en el que la innovación lleva beneﬁcios reales, directos y
tangibles a los usuarios. Las innovaciones pueden consistir en
nueva tecnologı́a recién salida del departamento de investigación, o pueden estár en la categorı́a de los lacitos decorativos,
pero en cualquier caso a menudo resultan útiles y parecen contentar a los usuarios. Y Microsoft está convirtiéndose en una
gran compañı́a de investigación. Esto no se debe necesariamente a que sus sistemas operativos sean todos tan maloes desde el
punto de vista puramente tecnológico. Los sistemas operativos
de Microsoft tienen sus problemas, claro, pero son mucho me40

En el principio fue la lı́nea de comandos

jores de lo que solı́an ser, y son adecuados para la mayor parte
de la gente.
¿Por qué digo entonces que Microsoft no es es una compañı́a
de sistemas operativos tan grandes? Por la naturaleza misma de
los sistemas operativos es tal que no tiene sentido que una compañı́a especı́ﬁca los desarrolle y posea. Para empezar, es un trabajo muy desagradecido. Las aplicaciones crean posibilidades
para millones de usuarios crédulos, mientras que los sistemas
operativos imponen limitaciones a millones de cascarrabias escritores de código, y ası́ los hacedores de sistemas operativos
siempre estarán en la lista negra de cualquiera que cuente en
el mundo de la alta tecnologı́a. Las aplicaciones las usan personas cuyo gran problema es comprender todas sus caracterı́sticas, mientras que los sistemas operativos se ven hackeados por
escritores de código irritados con sus limitaciones. El negocio
de los sistemas operativos ha sido bueno para Microsoft sólo en
la medida en que les ha proporcionado el dinero necesario para
lanzar un negocio de software de aplicaciones realmente bueno
y contratar a un montón de investigadores inteligentes. Ahora
debiera estar en posición de desembarazarse de su sistema operativo, como los cohetes se libran en algún momento de los tanques vacı́os de combustible. La gran pregunta es si Microsoft es
capaz de hacerlo. ¿O es adicta a la venta de sistemas operativos
del mismo modo que Apple lo es de la venta de hardware?
Hay que tener en cuenta que los observadores expertos citaban en un tiempo la capacidad de Apple de monopolizar su
propia provisión de hardware como su gran ventaja frente a Microsoft. En aquella época, parecı́a situarles en una posición mucho más fuerte. Al ﬁnal, casi les mató, y todavı́a puede matarlos.
El problema para Apple era que la mayor parte de los usuarios
de ordenador del mundo acaba comprando hardware más barato. Pero un hardware barato no podı́a ejecutar MacOS, y esa
gente se pasó a Windows.
Sustituyan hardware por sistemas operativos, y Apple por
Microsoft y verán cómo lo mismo está a punto de suceder de
41

Tarro de miel, pozo de brea, lo que sea

nuevo. Microsoft domina el mercado de sistemas operativos, lo
cual les reporta ingresos y parece una gran idea de momento.
Pero hay sistemas operativos mejores y más baratos, y están haciéndose cada vez más populares en partes del mundo que no
están tan saturadas de ordenadores como los EEUU. Dentro de
diez años, puede que la mayorı́a de los usuarios de ordenador
del mundo acabe por tener estos sistemas operativos más baratos. Pero estos sistemas operativos, de momento, no ejecutan
ninguna aplicación de Windows, y ası́ esta gente acabará usando otra cosa.
Por expresarlo de forma más directa: cada vez que alguien
decide usar un sistema operativo que no es de Microsoft, la división de sistemas operativos de Microsfot obviamente pierde
un cliente. Pero, tal como están las cosas, la división de aplicaciones de Microsoft también pierde un cliente. No es para tanto,
dado que casi todo el mundo usa sistemas operativos de Microsoft. Pero en cuanto la cuota de mercado de Windows empiece
a disminuir, las matemáticas van a ponerse bastante torvas para
los de Redmond.
Podrı́a replicarse a este argumento diciendo que Microsoft
sencillamente podrı́a recompilar sus aplicaciones para que pudieran ejecutarse en otros sistemas operativos. Pero esta estrategia va contra los instintos corporativos normales. El caso de Apple resulta de nuevo instructivo. Cuando las cosas empezaron
a ponerse feas para Apple, debieron haber llevado su sistema
operativo a un hardware barato. Pero no lo hicieron. Por el contrario, trataron de hacer que su brillante hardware diera lo más
posible de sı́, añadiendo nuevas posibilidades y expandiendo
la lı́nea de productos. Pero esto sólo tuvo el efecto de hacer su
sistema operativo más dependiente de esas caracterı́sticas especiales del hardware, lo cual al ﬁnal resulta peor para ellos.
Igualmente, cuando la posición de Microsoft en el mundo
de los sistemas operativos se vea amenazada, sus instintos corporativos les dirán que apilen más posibilidades en sus sistemas operativos, y luego reconﬁguren sus aplicaciones de soft42

En el principio fue la lı́nea de comandos

ware para explotar esas posibilidades especiales. Pero esto sólo
tendrá el efecto de hacer que sus aplicaciones dependan de un
sistema oeprativo con una cuota de mercado decreciente, y al
ﬁnal será peor para ellos.
El mercado de los sistemas operativos es una trampa letal,
un pozo de brea, una ciénaga. Sólo hay dos motivos para invertir en Apple y en Microsoft.
1.

Cada una de estas compañı́as está en lo que llamarı́amos
una relación de codependencia con sus clientes. Los clientes Quieren Creer, y Apple y Microsoft saben cómo darles
lo que quieren.

2.

Cada ompañı́a trabaja muy duro para añadir nuevas posibilidades a sus sistemas operativos, lo cual tiene el efecto
de asegurar la lealtad de sus clientes, al menos durante un
tiempo.

En consecuencia, la mayor parte del resto de este ensayo tratará sobre estos dos temas.

43

Tarro de miel, pozo de brea, lo que sea

44

La tecnosfera
U NIX ES EL ÚNICO SISTEMA OPERATIVO que queda cuyo GUI
(un montón de código llamado X Window System1 ) está separado del sistema operativo en el antiguo sentido del término.
Es decir, que puedes ejecutar Unix en puro modo de lı́nea de
comandos si quieres, sin ventanas, iconos, ratones, etc., y seguirá siendo Unix y capaz de hacer todo lo que se supone que
hace Unix. Pero los demás sistemas operativos: MacOS, la familia Windows y BeOS, tienen sus GUI enmarañados con las anticuadas funciones del sistema operativo en tal grado que tienen
que ejecutarse en modo GUI o no se ejecutan verdaderamente.
Ası́ que ya no es posible pensar en los GUI como en algo distinto del sistema operativo; ahora forman una parte inalienable de
los sistemas operativos a los que pertenecen —y son, con mucho, la parte mayor mayor, más cara y difı́cil de crear.
Sólo hay dos modos de vender un producto: precio y funcionalidades. Cuando los sistemas operativos son gratuitos, las
compañı́as de sistemas operativos no pueden competir median1 A pesar de la semejanza con el nombre del producto estrella de Microsoft, el
Sistema X Window de los Unices no tiene nada que ver con Windows, sino que
se trata de un potente sistema de ventanas cliente/servidor. Una de las ventajas
de la arquitectura cliente/servidor es que puede ser implementado tanto de
manera distribuida (es decir, aplicaciones y servidor gráﬁco ejecutándose en
máquinas diferentes) como local (todo el subsistema gráﬁco ejecutándose en el
mismo ordenador). [N. del E.]

45

La tecnosfera

te el precio, ası́ que compiten mediante las funcionalidades. Esto signiﬁca que siempre tratan de superarse unos a otros escribiendo código que, hasta hace poco, no se consideraba parte de
un sistema operativo en absoluto: cosas como los GUI. Esto explica en gran medida el comportamiento de estas compañı́as.
Explica por qué Microsoft añadió un navegador a su sistema operativo, por ejemplo. Resulta fácil obtener navegadores
gratuitos, igual que sistemas operativos gratuitos. Si los navegadores son gratuitos y los sistemas operativos son gratuitos,
pareciera que no hay modo de hacer dinero con los navegadores ni con los sistemas operativos. Pero si puedes integrar un
navegador en un sistema operativo y ası́ llenar ambos de nuevas funcionalidades, ya tienes un producto vendible.
Dejando a un lado, de momento, el hecho de que esto cabrea
de verdad a los abogados antitrust del gobierno, esta estrategia
tiene sentido. Al menos, tiene sentido si se asume (como parece hacer la dirección de Microsoft) que el sistema operativo ha
de ser protegido a cualquier precio. La verdadera cuestión es si
cada moda tecnológica nueva que aparezca ha de usarse como
muleta para sostener la posición dominante del sistema operativo. Al enfrentarse al fenómeno de la Web, Microsoft tuvo que
desarrollar un navegador web realmente bueno, y lo hicieron.
Pero entonces tuvieron que elegir: podı́an hacer que ese navegador funcionara en múltiples sistemas operativos, lo cual darı́a
a Microsoft una posición fuerte en el mundo de Internet con independencia de lo que le pasara a la cuota de mercado de su sistema operativo. O podı́an integrar el navegador con el sistema
operativo, apostando a que esto harı́a que su sistema operativo pareciera tan moderno y atractivo que ayudarı́a a conservar
su dominio en ese mercado. El problema es que cuando la posición del sistema operativo Windows empiece a venirse abajo
(y dado que actualmente es de cerca del noventa por ciento, no
puede sino descender) arrastrará todo tras de sı́.
En la clase de geologı́a del instituto probablemente les enseñaran que toda la vida sobre la Tierra existe en una delgada
46

En el principio fue la lı́nea de comandos

capa llamada biosfera, que existe entre miles de kilómetros de
roca muerta por debajo, y frı́o espacio vacı́o, muerto y radiactivo, por encima. Las compañı́as que venden sistemas operativos
existen en una especie de tecnosfera. Por debajo está la tecnologı́a que ya es gratuita. Por encima está la tecnologı́a que todavı́a ha de ser desarrollada, o que es demasiado disparatada
y especulativa para ser explotada de momento. Como la biosfera de la Tierra, la tecnosfera es muy ﬁna comparada con lo que
tiene por encima y por debajo.
Pero se mueve mucho más rápido. En diversas partes del
mundo, es posible visitar ricas capas fósiles en las que hay esqueletos apilados, los más recientes encima y los más antiguos
debajo. En teorı́a, todos se remontan a los primeros organismos
unicelulares. Y si usan su imaginación un poco, se darán cuenta
de que, si se queda ahı́ el tiempo suﬁciente, también quedará fosilizado, y con el tiempo algún organismo más avanzado quedará fosilizado encima suyo.
El registro fósil —La Brea Tar Pits2 — de la tecnologı́a software es Internet. Cualquier cosa que aparezca allı́ se puede tomar de forma gratuita (posiblemente ilegal, pero gratuita). Los
ejecutivos de compañı́as como Microsoft tienen que acostumbrarse a la experiencia —impensable en otras industrias— de
invertir millones de dólares en el desarrollo de nuevas tecnologı́as, tales como navegadores web, y luego ver cómo aparece
en Internet el mismo software, o un software equivalente, dos
años, un año, o incluso pocos meses después.
Al seguir desarrollando nuevas tecnologı́as y añadiendo posibilidades a sus productos, pueden mantenerse un paso por
delante del proceso de fosilización, pero algunos dı́as deben de
sentirse como mamuts atrapados en La Brea, usando todas sus
energı́as para salir adelante, una y otra vez, escapando de la pe2 Las canteras de Rancho La Brea Tar Pits es un yacimiento de fósiles situado
en el Condado de Los Angeles (EE . UU .). Durante casi cuarenta mil años, la mina (pits) ha emitido una gran cantidad de brea, asfalto pegajoso y espeso, que
ha dejado atrapados a lo largo del tiempo a muchos especı́menes de plantas y
animales prehistóricos. (N. del E.)

47

La tecnosfera

gajosa brea caliente que quiere cubrirles y engullirles.
La supervivencia en esta biosfera requiere colmillos fuertes
y pies que puedan pisotear en un extremo de la organización,
y Microsoft es famosa por tenerlos. Pero pisotear a los otros
mamuts en la brea sólo puede mantenerte vivo cierto tiempo.
El peligro es que, con su obsesión por mantenerse fuera de las
capas fósiles, estas compañı́as olviden lo que hay por encima
de la biosfera: el ámbito de la nueva tecnologı́a. En otras palabras, deben seguir con sus armas primitivas y bastos instintos
competitivos, pero también han de desarrollar cerebros potentes. Esto parece ser lo que está haciendo Microsoft con su departamento de investigación, que contrata a personas inteligentes
por doquier. (Y aquı́ debo mencionar que, aunque conozco y
me relaciono con varias personas del departamento de investigación de esa compañı́a, nunca hablamos de negocios, y no
tengo ni idea de qué demonios están haciendo. He aprendido
mucho más sobre Microsoft usando el sistema operativo Linux
de lo que habrı́a aprendido usando Windows).
Da igual cómo hiciera antes dinero Microsoft; hoy en dı́a, hace dinero gracias a una especie de arbitraje temporal. Arbitraje,
en el sentido habitual, signiﬁca hacer dinero aprovechándose
de las diferencias en los precios de algo en diferentes mercados. En otras palabras, es espacial y se basa sobre el hecho de
que el árbitro sabe por qué tecnologı́as pagará dinero la gente
el año que viene, y cuánto tardarán esas tecnologı́as en volverse gratuitas. Lo que el arbitraje espacial y temporal tienen en
común es que ambos pivotan sobre la información extremadamente buena del árbitro; información sobre las gradientes de
precios en un momento dado en un caso, sobre las gradientes
de precios a lo largo del tiempo en un lugar dado en el otro.
Ası́ que Apple/Microsoft ofrecen nuevas posibilidades a sus
usuarios casi a diario, con la esperanza de que un ﬂujo constante
de genuinas innovaciones técnicas, combinadas con el fenómeno del ”quiero creer”impedirá que sus clientes miren al otro lado de la carretera, hacia los sistemas operativos, mejores y más
48

En el principio fue la lı́nea de comandos

baratos, que tienen disponibles. La cuestión es si esto tiene sentido a largo plazo. Si Microsoft es adicta a los sistemas operativos como Apple lo es al hardware, entonces se apostarán la
camisa por sus sistemas operativos, y vincularán todas sus nuevas aplicaciones y sistemas operativos a ellos. Su supervivencia
dependerá entonces de estas dos cosas: añadir más posibilidades a sus sistemas operativos de tal modo que sus clientes no se
pasen a las alternativas más baratas, y mantener la imagen que,
de algún modo misterioso, les da a estos clientes la sensación de
que obtienen algo a cambio de su dinero.
Este último es un fenómeno cultural verdaderamente extraño e interesante.

49

La tecnosfera

50

La cultura del interfaz
H ACE UNOS A ÑOS entré en una tienda en algún lugar y me encontré con la siguiente escena: cerca de la entrada habı́a una
pareja joven frente a un gran mostrador de cosméticos. El hombre sostenı́a estólidamente una cesta de la compra en las manos mientras su compañera arramblaba con productos de maquillaje del mostrador y los apilaba en la cesta. Desde entonces
siempre he pensado en ese hombre como la personiﬁcación de
una interesante tendencia humana: no sólo no nos ofenden las
imágenes manufacturadas sino que nos gustan. Prácticamente
insistimos en ello. Estamos ansiosos por ser cómplices de nuestro propio engaño: por pagar dinero por el pase a un parque
temático, votar a un tipo que obviamente nos está mintiendo o
permanecer de pie sosteniendo la cesta que se llena de cosméticos.
Hace poco estuve en Disney World, especı́ﬁcamente en la
parte llamada el Reino Mágico, caminando por Main Street USA.
Esta es la perfecta pequeña ciudad victoriana y cuca que lleva al
castillo Disney. Habı́a mucha gente; nos abrı́amos camino más
que caminábamos. Justo delante mı́o habı́a un hombre con una
videocámara. Era una de esas nuevas videocámaras en las que,
en vez de mirar por un visor, contemplas una pantalla plana
en color del tamaño de un naipe, que televisa en directo lo que
quiera que la cámara esté grabando. Sostenı́a el aparato cerca de
51

La cultura del interfaz

la cara, de tal modo que le tapaba la vista. En vez de ir a ver una
pequeña ciudad de verdad gratis, habı́a pagado dinero por ver
una falsa, y en vez de verla a simple vista estaba contemplándola por televisión.
Y en vez de quedarme en casa y leer un libro, yo le estaba
mirando a él.
La preferencia de los estadounidenses por las experiencias
mediadas resulta bastante obvia, y no voy a dar la murga con
ello. Ni siquiera voy a hacer comentarios desdeñosos acerca de
ello —después de todo, yo estaba en Disney World como cliente
de pago—. Pero claramente está relacionado con el colosal éxito
de los GUI, ası́ que tengo que hablar algo acerca de ello. A los de
la Disney se le dan mejor que a nadie las experiencias mediadas.
Si entendieran qué son los sistemas operativos, y por qué los usa
la gente, aplastarı́an a Microsoft en uno o dos años.
En la sección de Disney World llamada el Reino Animal hay
una nueva atracción, que se supone abrirá en marzo de 1999,
llamada el Viaje por la Jungla del Maharajá. Lo habı́an abierto
como anticipo cuando yo estuve allı́. Es una reproducción completa, piedra por piedra, de una hipotética ruina en las junglas
de la India. Según decı́an, fue construida por un rajá local en el
siglo XVI como reserva de caza. Él iba allı́ con sus principescos
huéspedes a cazar tigres de Bengala. Con el paso del tiempo,
quedó abandonada y la ocuparon los tigres y los monos; ﬁnalmente, en torno a la época de la independencia de la India, se
convirtió en una reserva natural del gobierno, ahora abierto a
los visitantes.
El lugar se parece más a lo que he descrito que ningún ediﬁcio real que se pueda encontrar en la India. Todas las piedras
en los muros derrumbados tenı́an el aspecto de haber sido desgastados por las lluvias monzónicas durante siglos, la pintura de las paredes está descascarillada y apagada, y los tigres
de Bengala se mueven por entre las columnas rotas. Allı́ donde se podrı́an realizar reparaciones modernas en la antigua estructura, se han hecho, pero no como las llevarı́an a cabo los
52

En el principio fue la lı́nea de comandos

ingenieros de la Disney, sino ahorrativos encargados indios,
con bambú y barras herrumbrosas. La herrumbre está pintada,
claro, y protegida de la herrumbre auténtica por una capa de
plástico transparente, pero no se nota a menos que uno se agache.
En un punto se puede caminar junto a un muro de piedra
con una serie de desgastados frisos antiguos esculpidos. Un extremo del muro se ha derrumbado y caı́do a tierra, quizás debido a algún terremoto largo tiempo olvidado, y uno o dos paneles tienen anchas ﬁsuras, pero la historia sigue siendo legible:
primero, el caos primordial lleva a la creación de muchas especies animales. Luego, vemos el Árbol de la Vida rodeado de
diversos animales. Esta es una alusión obvia al enorme Árbol
de la Vida que domina el centro del Reino Animal de Disney,
igual que el Castillo domina el Reino Mágico o la Esfera domina Epcot. Pero está hecho en un estilo históricamente correcto,
y probablemente engañarı́a a cualquiera que no tuviera un doctorado en historia del arte indio.
El siguiente panel muestra a un homo sapiens bigotudo derribando el Árbol de la Vida con una cimitarra, y a animales huyendo en todas direcciones. El panel que va después muestra al
errado humano golpeado por un tsunami, parte de un Diluvio
presumiblemente provocado por su estupidez.
El panel ﬁnal muestra al Brote de la Vida que vuelve a crecer,
pero ahora el Hombre ha abandonado su aﬁlada arma y se ha
unido a los demás animales, que lo rodean para ensalzarlo y
adorarlo.
Es, en otras palabras, una profecı́a del Cuello de Botella: la
situación, planteada habitualmente por los modernos ecologistas, de que el mundo se enfrentará pronto a un periodo de graves tribulaciones ecológicas que durarán unas pocas décadas o
siglos y acabarán cuando encontremos un nuevo y armonioso
modus vivendi con la Naturaleza.
En conjunto, el friso es una obra bastante brillante. Obviamente no es una antigua ruina india, y alguna persona o per53

La cultura del interfaz

sonas vivas merecen ser elogiadas. Pero no hay ﬁrmas en la
reserva de caza de Maharajá en Disney World. No hay ﬁrmas
en nada, porque arruinarı́a el efecto si largos créditos colgaran
de cada ladrillo desgastado a medida, como en las pelı́culas de
Hollywood.
Entre los guionistas de Hollywood, Disney tiene la reputación de ser una madrastra verdaderamente malvada. No resulta
difı́cil ver por qué. Disney está en el negocio de los productos
de ilusión sin ﬁsuras —un espejo mágico que reﬂeja el mundo
mejor de lo que realmente es—. Pero hay un escritor que literalmente está hablando a sus lectores, no sólo creando un ambiente o dándoles algo que mirar; y ası́ como la interfaz de lı́nea
de comandos abre un canal mucho más directo y explı́cito entre
usuario y máquina que el GUI, lo mismo sucede con palabras,
escritor, y lector.
La palabra, al ﬁnal, es el único sistema para codiﬁcar los pensamientos —el único medio— que no es fungible, que se niega
a disolverse en el torrente devorador de los medios electrónicos (los turistas más ricos en Disney World llevan camisetas con
los nombres de diseñadores famosos impresos, porque los propios diseños pueden copiarse fácilmente y con impunidad. El
único modo de fabricar ropa que no puede copiarse legalmente
es imprimir palabras con copyright y marca registrada; una vez
se ha dado ese paso, la ropa misma ya no importa realmente, y
ası́ una camiseta es tan buena como cualquier otra cosa. Las camisetas con palabras caras son ahora la insignia de la clase alta.
Las camisetas con palabras baratas, o sin palabras, son para el
común de los mortales).
Pero esta cualidad especial de las palabras y de la comunicación escrita tendrı́a el mismo efecto sobre el producto de la
Disney que un grafﬁti de spray sobre un espejo mágico. Ası́ que
la Disney lleva a cabo la mayor parte de su comunicación sin
recurrir a las palabras, y en su mayor parte, no se echa de menos las palabras. Algunas de las propiedades más antiguas de
la Disney, como Peter Pan, Winnie Pooh, y Alicia en el Paı́s de
54

En el principio fue la lı́nea de comandos

las Maravillas, salieron de libros. Pero los nombres de sus autores se mencionan raramente, si es que se mencionan, y no se
pueden comprar los libros originales en la tienda Disney. Si se
pudiera, parecerı́an viejos y extraños, como versiones muy raras
de los originales más puros y auténticos de la Disney. Comparados con producciones más recientes como la Bella y la Bestia
y Mulan, las pelı́culas de la Disney basadas en estos libros (en
particular Alicia en el Paı́s de las Maravillas y Peter Pan) parecen profundamente extrañas, y no del todo apropiadas para
niños. Lo cual es razonable, porque Lewis Carroll y J.M. Barrie
eran hombres muy raros, y la naturaleza de la palabra escrita es
tal que su rareza personal se ﬁltra a través de todas las capas de
disneyﬁcación como rayos X a través de una pared. Probablemente por esta misma razón, la Disney parece haber dejado de
comprar libros, y ahora encuentra sus temas y caracteres y los
relatos tradicionales, que tienen la cualidad lapidaria y gastada
por el tiempo de los antiguos bloques de piedra de las ruinas
del Maharajá.
Si siguiéramos a esos turistas a sus casas, podrı́amos encontrar arte, pero serı́a el tipo de arte folclórico no ﬁrmado que venden en las tiendas de la Disney de tema africano y asiático. En
general, sólo parecen estar cómodos con medios que ha sido ratiﬁcados por su antigüedad, por su aceptación popular masiva,
o por ambas cosas.
En este mundo, los artistas son como los obreros anónimos y
analfabetos que construyeron las grandes catedrales en Europa
y luego desaparecieron en tumbas anónimas del cementerio. La
catedral en conjunto es apabullante y conmovedora a pesar de,
y posiblemente debido a, el hecho de que no tenemos ni idea de
quién la construyó. Cuando caminamos por ella comulgamos
no con obreros individuales sino con toda una cultura.
Disney World funciona del mismo modo. Si se es un intelectual, un lector o escritor de libros, lo más amable que se puede decir al respecto es que la ejecución es soberbia. Pero resulta fácil encontrarlo todo un poco siniestro, porque falta algo:
55

La cultura del interfaz

la traducción de todo su contenido a palabras escritas, claras
y explı́citas, las atribución de las ideas a personas especı́ﬁcas.
No se puede discutir con ello. Parece como si se estuviera pasando por alto un montón de cosas, como si Disney World nos
estuviera engañando, y posiblemente colándonos todo tipo de
asunciones ocultas y pensamiento blando.
Pero esto es exactamente lo mismo que se pierde en la transición de la interfaz de lı́nea de comandos al GUI.
La Disney y Apple/Microsoft están en el mismo negocio:
cortocircuitar la laboriosa y explı́cita comunicación verbal con
interfaces de diseño caro. La Disney es una especie de interfaz de usuario en sı́ misma - y más que meramente gráﬁca.
Llamémosla Interfaz Sensorial. Puede aplicarse a cualquier cosa
en el mundo, real o imaginada, aunque a un precio apabullante.
¿Por qué rechazamos las interfaces basadas en la palabra, y
preferimos las gráﬁcas o sensoriales —una tendencia que explica el éxito tanto de Microsoft como de la Disney?
Parte de ello es simplemente que el mundo es ahora muy
complicado —mucho más complicado que el mundo de los
cazadores-recolectores para apañárselas con el cual evolucionaron nuestros cerebros— y sencillamente no podemos manejar
todos los detalles. Tenemos que delegar. No tenemos más opción que conﬁar en algún artista anónimo de la Disney o en
algún programador de Apple o Microsoft para que elijan por
nosotros, nos libren de algunas opciones, y nos den un resumen
convenientemente empaquetado.
Pero más importante es el hecho de que durante este siglo el
intelectualismo falló, y todo el mundo lo sabe. En lugares como
Rusia y Alemania, la gente común renunció a su control sobre
los modos de vida tradicionales, costumbres y religión, y permitió que los intelectuales llevaran el cotarro, y los intelectuales lo estropearon todo y convirtieron el siglo en un matadero.
Aquellos intelectuales de tanta palabrerı́a eran vistos como meramente tediosos; ahora también parecen algo peligrosos.
Los estadounidenses somos los únicos que no salimos mal56

En el principio fue la lı́nea de comandos

parados en ningún momento de todo esto. Somos libres y
prósperos porque heredamos sistemas polı́ticos y de valores fabricados por un conjunto dado de intelectuales del siglo XVIII
que por casualidad acertaron. Pero hemos perdido contacto con
esos intelectuales, y con cualquier cosa parecida al intelectualismo, hasta el punto de no leer libros ya, aunque sabemos leer.
Estamos mucho más cómodos transmitiéndoles esos valores a
las generaciones futuras de forma no-verbal, mediante el proceso de inmersión mediática. Parece que esto funciona hasta cierto punto, porque la policı́a en muchos paı́ses ahora se queja de
que los arrestados insisten en que les lean sus derechos, como
en las pelı́culas de policı́as estadounidenses. Cuando se les explica que están en un paı́s diferente, se indignan. Puede que las
reposiciones de Starsky y Hutch, dobladas a diversas lenguas,
resulten ser, a largo plazo, una fuerza más potente en favor de
los derechos humanos que la Declaración de Independencia.
Una cultura enorme, rica y nuclear que propaga sus valores nucleares mediante la inmersión mediática parece una mala
idea. Está el riesgo obvio de errar. Las palabras son el único medio inmutable que tenemos, que es el motivo por el cual son el
vehı́culo preferido para conceptos extremadamente importantes como los Diez Mandamientos, el Corán, y la Declaración de
Derechos. A menos que los mensajes transmitidos por nuestros
medios vayan ligados a algún conjunto ﬁjo de preceptos, pueden desperdigarse por doquier y posiblemente llenar la mente
de la gente de estupideces.
Orlando tenı́a una base militar llamada McCoy Air Force
Base, con largas pistas de las que podı́an despegarlos B-52 para llegar a Cuba o a cualquier otro lugar, cargados de bombas
nucleares. Pero ahora McCoy ha sido desmantelada y sus instalaciones se han destinado a otros ﬁnes. El aeropuerto civil de
Orlando las ha absorbido. Las largas pistas se usan ahora para descargar turistas llegados en vuelos 747 desde Brasil, Italia,
Rusia y Japón, a ﬁn de que vengan a Disney World y empaparse
de nuestros medios durante un tiempo.
57

La cultura del interfaz

Para las culturas tradicionales, especialmente las basadas en
la palabra como el Islam, esto resulta inﬁnitamente más amenazante de lo que lo fueron jamás los B-52. Resulta obvio para
cualquiera fuera de los Estados Unidos que nuestras archimuletillas, multiculturalismo y diversidad, son fachadas que encubren (en muchos casos involuntariamente) una tendencia global
a erradicar las diferencias culturales. El pilar básico del multiculturalismo (o de ”honrar la diversidad”, o como se quiera llamarlo) es que las personas tienen que dejar de juzgarse unas a
otras —dejar de aseverar (y, gradualmente, dejar de creer) que
esto está bien y esto está mal, que una cosa es fea y otra hermosa, que Dios existe y tiene estas o aquellas cualidades.
La lección que la mayor parte de la gente ha extraı́do del
siglo XX es que, para que un gran número de diferentes culturas coexistan pacı́ﬁcamente en el globo (o incluso en el barrio)
es necesario que la gente suspenda el juicio de este modo. De
ahı́ (argumento) nuestra sospecha, u hostilidad, respecto de todas las ﬁguras de autoridad en la cultura moderna. Como explicó David Foster Wallace en su ensayo E Unibus Pluram, este
es el mensaje fundamental de la televisión; es el mensaje que la
gente se lleva a casa, de cualquier modo, tras llevar inmersos
en los medios el tiempo suﬁciente. No está expresado en esos
términos altisonantes, claro. Se transmite a través de la presunción de que todas las ﬁguras de autoridad —maestros, generales, policı́as, sacerdotes, polı́ticos— son bufones hipócritas, y
que el cinismo descreı́do es el único modo de ser.
El problema es que una vez que nos hemos librado de la
capacidad de juzgar lo bueno y lo malo, lo verdadero y lo falso, etc., ya no queda cultura. Todo lo que queda son los bailes
folclóricos y el macramé. La capacidad de juicio, de creencia, es
el ﬁn mismo de tener una cultura. Creo que por eso aparecen a
veces tipos con metralletas en lugares como Luxor, y empiezan
a disparar a los occidentales. Entienden perfectamente la lección de la base aérea McCoy. Cuando los hijos llegan con gorras
ladeadas de los Chicago Bulls, los padres enloquecen.
58

En el principio fue la lı́nea de comandos

La anticultura global transmitida a todos los rincones del
mundo por la televisión es una cultura en sı́ misma, y según
los estándares de grandes y antiguas culturas como el Islam o
Francia, parece inmensamente inferior, al menos al principio.
Los único bueno que se puede decir de ella es que hace que
guerras mundiales y holocaustos parezcan menos probables —
¡y de hecho eso es algo bastante bueno!
El único problema real es que cualquiera que no tenga más
cultura que esta monocultura global está completamente jodido. Cualquiera que crezca viendo la televisión, que nunca vea
nada de religión o ﬁlosofı́a, se crı́e en una atmósfera de relativismo moral, aprenda ética viendo escándalos sexuales en el
telediario, y vaya a una universidad donde los postmodernistas
de desviven por demoler las nociones tradicionales de verdad
y calidad, va a salir al mundo como un ser humano bastante incapaz. Y —de nuevo— tal vez el ﬁn de todo esto es hacernos incapaces, de modo que no nos bombardeemos mutuamente con
armas nucleares.
Por otro lado, si te crı́as en el ámbito de una cultura dada,
acabas con un conjunto básico de herramientas que se pueden
usar para pensar y comprender el mundo. Puedes usar esas herramientas para rechazar la cultura en que te criaste, pero al
menos tienes algunas herramientas.
En este paı́s, la gente que lleva el cotarro —los que llenan los
bufetes y las juntas directivas— comprende todo esto a cierto
nivel. Apoyan el multiculturalismo y la diversidad y la suspensión del juicio de boquilla, pero no educan a sus propios hijos
ası́. Tengo amigos altamente educados y técnicamente soﬁsticados que se han mudado a pequeñas ciudades de Iowa para vivir
y criar a sus hijos, y hay enclaves hası́dicos en Nueva York donde muchos niños se crı́an según creencias tradicionales. Cualquier comunidad suburbana puede considerarse un lugar donde personas que tienen ciertas creencias (básicamente implı́citas) van a vivir entre otros que piensan de igual manera.
Y esta gente no sólo se siente responsable respecto a sus pro59

La cultura del interfaz

pios hijos, sino con el paı́s en general. Algunos miembros de la
clase alta son viles y cı́nicos, por supuesto, pero muchos pasan
al menos parte de su tiempo preocupándose por la dirección en
que va el paı́s, y sus propias responsabilidades. Y ası́, cuestiones
que son importantes para los intelectuales lectores de libros, como el colapso ambiental global, acaban por ﬁltrarse a través de
la cultura de masas y aparecen como antiguas ruinas hindúes
en Orlando.
Puede que se estén preguntando: ¿qué narices tiene que ver
todo esto con los sistemas operativos? Como ya he dicho, no
hay modo de explicar la dominación del mercado de los sistemas operativos por Apple/Microsoft sin explicaciones culturales, ası́ que no puedo llegar a ninguna parte, en este ensayo, sin
hacerles saber antes de dónde vengo en lo que concierne a la
cultura contemporánea.
La cultura contemporánea es un sistema de dos niveles, como los morlocks y los eloi de La máquina del tiempo, de H.G.
Wells, salvo que está del revés. En La máquina del tiempo, los eloi
eran la amanerada clase alta, mantenida por montones de morlocks subterráneos que hacı́an que los engranajes tecnológicos
se movieran. Pero en nuestro mundo es al revés. Los morlocks
son minorı́a, y hacen que las cosas se muevan porque comprenden cómo funciona todo. Los mucho más numerosos eloi aprenden todo lo que saben por verse inmersos desde su nacimiento
en medios electrónicos dirigidos y controlados por los morlocks
lectores de libros. Ası́ que muchas personas ignorantes serı́an
peligrosas si se las apuntara en la dirección equivocada, con
lo cual hemos desarrollado una cultura popular que a) es increı́blemente infecciosa y b) neutraliza a toda persona que se ve
infectada, haciéndolos reticentes a emitir juicios e incapaces de
tomar posiciones.
Los morlocks, que tienen la energı́a e inteligencia como para
aprehender los detalles, van y dominan temas complejos y producen Interfaces Sensoriales tipo Disney de tal modo que los
eloi puedan entender el meollo sin tener que forzar la mente
60

En el principio fue la lı́nea de comandos

o soportar el aburrimiento. Esos morlocks van a la India y tediosamente exploran cientos de ruinas, luego vuelven a casa y
construyen versiones higiénicas y sin bichos: el Selecciones del
Reader’s Digest, por ası́ decir. Esto cuesta un montón, porque
los morlocks insisten en que les den buen café y billetes de avión
en primera, pero no es problema porque a los eloi les gusta que
los deslumbren y pagarán gustosos.
Me doy cuenta de que la mayor parte de esto probablemente
suena desdeñoso y amargado hasta el absurdo: el tı́pico intelectual pijo con un berrinche por esos ﬁlisteos analfabetos. Como
si yo fuera una especie de Moisés bajando solo de la montaña,
con las tablas de los Diez Mandamientos grabadas en piedra
inmutable —la interfaz de lı́nea de comandos original— y cabreándose con los débiles hebreos no iluminados que adoran
imágenes. No sólo eso, sino que parece que creo que hay una
especie de teorı́a de la conspiración.
Pero eso no es lo que quiero decir con todo esto. La situación
que describo aquı́ podrı́a ser mala, pero no tiene por qué ser
mala, y no es necesariamente mala ahora:
Simplemente, la cuestión es que estamos demasiado ocupados hoy en dı́a como para comprenderlo todo con detalle. Y
es mejor comprenderlo por una interfaz, oscuramente, que no
comprenderlo en absoluto. Mejor que diez millones de eloi vayan al Safari por el Kilimanjaro en Disney World que no que mil
cirujanos cardiovasulares y directores de aseguradoras vayan
de safari auténtico por Kenia. La frontera entre ambas clases es
más porosa de lo que he dado a entender. Constantemente me
encuentro con tipos normales —albañiles, mecánicos, taxistas,
gente de a pie en general— que básicamente carecı́an de cultura hasta que algo hizo necesario que se convirtieran en lectores
y empezaran a pensar en serio acerca de las cosas. Tal vez tuvieron que vérselas con el alcoholismo, tal vez fueron a la cárcel, o
enfermaron, o sufrieron una crisis de fe, o simplemente se aburrieron. Tales personas pueden aprender acerca de temas particulares a toda prisa. A veces su falta de una educación amplia
61

La cultura del interfaz

les lleva a emprender empresas intelectuales desquiciadas pero
bueno, al menos la empresa intelectual desquiciada es un buen
ejercicio. El fantasma de una polı́tica controlada por los caprichos y veleidades de los votantes que creen realmente que hay
diferencias signiﬁcativas entre las cerveza Bud Lite y Miller Lite,
y que creen que la lucha libre es real, es naturalmente alarmante
para aquellos que no lo creen. Pero los paı́ses controlados mediante la interfaz de la lı́nea de comandos, por ası́ decirlo, por
sesudos intelectuales, ya sean religiosos o seculares, son por lo
general tristes lugares donde vivir. La gente soﬁsticada se burla
de los entretenimientos disneyescos por facilones y asacarinados, pero si el resultado es provocar reﬂejos básicamente cálidos
y simpatéticos a nivel preverbal en cientos de millones de iletrados inmersos en los medios, no pueden ser tan malos. Anoche
matamos una langosta en nuestra cocina y mi hija lloró durante
una hora. Los japoneses, que solı́an ser el pueblo más feroz del
mundo, están obsesionados con adorables personajes de dibujos animados. Mi propia familia —la gente que mejor conozco—
está dividida de modo más o menos equitativo entre personas
que probablemente lean este ensayo y personas que casi con toda certeza no lo hará, y no puedo decir a ciencia cierta que un
grupo sea necesariamente más cálido, feliz o mejor adaptado
que el otro.

62

Morlocks y Eloi al teclado
E N LOS TIEMPOS DE LA INTERFAZ DE L ÍNEA DE COMANDOS , los
usuarios eran todos morlocks que tenı́an que convertir sus pensamientos en sı́mbolos alfanuméricos e introducirlos a mano,
un proceso insufriblemente tediosos que eliminaba toda ambigüedad, revelaba todas las asunciones ocultas, y castigaba
cruelmente la pereza y la imprecisión. Entonces los hacedores
de interfaces se pusieron a trabajar en sus GUI, e introdujeron
una nueva capa semiótica entre la gente y las máquinas. Las personas que usan tales sistemas han renunciado a la responsabilidad, y al poder, de enviar bits directamente al chip que lleva a
cabo la aritmética, y le han pasado esa responsabilidad y poder
al sistema operativo. Esto resulta tentador porque dar instrucciones claras, a alguien o a algo, es difı́cil. No podemos hacerlo
sin pensar y, dependiendo de la complejidad de la situación,
debemos pensar intensamente en cosas abstractas y considerar
cualquier número de ramiﬁcaciones para hacerlo bien. Para la
mayorı́a de nosotros, esto es una ardua tarea. Queremos que las
cosas sean más fáciles. La medida de cuánto lo queremos viene
dada por el grueso de la fortuna de Bill Gates.
El sistema operativo (por tanto) se ha convertido en una especie de instrumento para ahorrarse trabajo intelectual que traduce las intenciones vagamente expresadas de los humanos a
bits. De hecho, les pedimos a nuestros ordenadores que tomen
63

Morlocks y Eloi al teclado

responsabilidades que siempre se han considerado propias de
seres humanos —queremos que comprendan nuestros deseos,
que prevean nuestras necesidades, que establezcan conexiones,
que desempeñen tareas rutinarias sin necesidad de pedı́rselo,
que nos recuerden lo que tendrı́a que recordársenos a la vez que
ﬁltran el ruido. En los niveles más elevados (es decir, más próximos al usuario) esto tiene lugar mediante una serie de convenciones —menús, botones, etc—. Estas funcionan en el sentido
en que funcionan las analogı́as: ayudan a los eloi a comprender
conceptos abstractos o poco familiares comparándolos con algo
conocido. Pero se usa el término más pretencioso de metáfora.
El concepto que lo englobaba todo en MacOS era la metáfora
del escritorio, que subsumı́a cierto número de metáforas menores (y a menudo contradictorias, o al menos mezcladas). Con
un GUI, un archivo (frecuentemente llamado ((documento))) se
metafrasea como una ventana en pantalla (al que se denomina
((escritorio))). La ventana siempre es demasiado pequeña para
contener el documento, ası́ que uno ((se mueve)) o, más pretenciosamente, ((navega)) por el documento ((pinchando y arrastrando)) el ((dedo)) en la ((barra de desplazamoento)). Cuando
se ((teclea)) (usando un teclado) o ((dibuja)) (usando un ((ratón)))
en la ((ventana)) o se usan ((menús)) desplegables y ((cuadros de
diálogo)) para manipular sus contenidos, los resultados del trabajo de uno se almacenan (al menos en teorı́a) en un archivo, y
luego la misma información se recupera en otra ventana. Cuando ya no se necesita, se ((arrastra)) a la ((papelera)).
Hay una mezcla de metáforas pasmosamente promiscua
aquı́ y podrı́a deconstruirla hasta que las ranas criaran pelo,
pero no lo haré. Consideren sólo una palabra: ((documento)).
Cuando documentamos algo en el mundo real, creamos registros ﬁjos, permanentes e inmutables de ello. Pero los documentos de un ordenador son volátiles, efı́meras constelaciones de
datos. A veces (como cuando se abren o guardan), el documento que aparece en la ventana es idéntico al que está almacenado, bajo el mismo nombre, en un archivo de disco, pero otras
64

En el principio fue la lı́nea de comandos

veces (como cuando se hacen cambios sin guardarlos), es completamente diferente. En cualquier caso, cada vez que se pulsa Guardar, se aniquila la versión previa del documento, reemplazándola por loquequiera que aparezca en la ventana en ese
momento. Ası́ que incluso la palabra guardar se usa en un sentido que es grotescamente engañoso —((destruir una versión,
guardar otra)), serı́a más exacto.
Cualquiera que use un procesador de textos durante mucho tiempo inevitablemente sufrirá la experiencia de echar horas de trabajo en un documento largo y luego perderlo porque
el ordenador falla o se corta la luz. Hasta el momento en que
desaparece de pantalla, el documento parece tan sólido y real
como si estuviera impreso en papel y tinta. Pero un momento
después, sin avisar, se ha esfumado, completa e irremediablemente, como si nunca hubiera existido. El usuario queda con
una sensación de desorientación (por no hablar del cabreo) proveniente de un trasquilón metafórico —uno se da cuenta de que
ha estado viviendo y pensando dentro de una metáfora que es
esencialmente falsa.
Ası́ que los GUI usan metáforas para hacer que la informática resulte más fácil, pero son malas metáforas. Aprender a
usarlas es esencialmente un juego de palabras, el proceso de
aprender nuevas deﬁniciones de palabras como ((ventana)) y
((documento)) y ((guardar)), que son diferentes, y en muchos casos diametralmente opuestas a las antiguas. Por muy improbable que parezca, esto ha salido muy bien, al menos desde el
punto de vista comercial, lo cual signiﬁca que Apple/Microsoft
han hecho mucho dinero con ello. Todos los otros sistemas operativos modernos han aprendido que para ser aceptados por
los usuarios han de ocultar sus entrañas bajo el mismo tipo de
adornos. Esto tiene ciertas ventajas: si se sabe usar un sistema
operativo de GUI, probablemente se puede deducir cómo usar
cualquier otro en pocos minutos. Todo funciona de modo algo
distinto, como las cañerı́as europeas —pero enredando un poco,
se puede escribir una nota y navegar por la red.
65

Morlocks y Eloi al teclado

La mayor parte de la gente que compra sistemas operativos (si se molestan en comprarlo en absoluto) no comparan las
funciones subyacentes sino el aspecto y sensación superﬁciales. El comprador medio de un sistema operativo no paga realmente, y no le interesa especialmente, el código de bajo nivel
que asigna memoria y escribe bytes en el disco. Lo que compramos realmente es un sistema de metáforas. Y —mucho más
importante— a lo que nos vendemos es al presupuesto implı́cito
de que las metáforas son un buen modo de tratar con el mundo.
Desde hace poco se ha vuelto disponible un montón de nuevo hardware que les proporciona a los ordenadores numerosos modos interesantes de afectar al mundo real: hacer que las
impresoras escupan papel, dirigir rayos de radiación hacia enfermos de cáncer, crear pelı́culas realistas sobre el Titánic. Windows se usa ahora como sistema operativo para cajas registradoras y cajeros automáticos. El sistema de mi televisión por
satélite emplea una especie de GUI para cambiar de canas y
mostrar guı́as de programas. Los modernos teléfonos móviles
llevan un crudo GUI metido en una diminuta pantalla. Incluso
Lego tiene un GUI: se puede comprar un juego de Lego llamado Mindstorms que permite construir pequeños robots Lego y
programarlos mediante un GUI en el ordenador.
Ası́ que ahora le pedimos al GUI que haga mucho más que
servir de máquina escribir gloriﬁcada. Ahora queremos que se
convierta en una herramienta general para tratar con la realidad. Esto ha hecho que las compañı́as que viven de sacar nueva
tecnologı́a al mercado de masas vivan una bonanza económica.
Obviamente, no se puede vender un complicado sistema tecnológica a la gente sin algún tipo de interfaz que les permita
usarlo. La dinamo de combustión interna fue una maravilla tecnológica en su época, pero era inútil como bien de consumo
hasta que le conectaron una palanca de cambios, transmisión,
volante y frenos. Esa extraña colección de cacharros, que sobrevive hasta nuestros dı́as en cada coche que surca las carreteras,
constituye lo que hoy llamarı́amos una interfaz de usuario. Pero
66

En el principio fue la lı́nea de comandos

si los coches se hubieran inventado después que los Macintosh,
los fabricantes de coches no se habrı́an molestado en diseñar todos esos complicados dispositivos. Tendrı́amos una pantalla de
ordenador por salpicadero, y un ratón (o como mucho un joystick) por volantes, y cambiarı́amos de marchas desplegando un
menú: APARCAR — MARCHA ATRÁS — PUNTO MUERTO
—- 3 2 1 — Ayuda...
Ası́, unas pocas lı́neas de código pueden sustituir cualquier
interfaz mecánica imaginable. El problema es que en muchos
casos el sustituto es defectuoso. Conducir un coche mediante
un GUI serı́a una experiencia horrible. Incluso si el GUI estuviera totalmente libre de fallos, serı́a increı́blemente peligroso,
porque los menús y botones sencillamente no pueden responder tan bien como los controles mecánicos directos. El padre
de mi amigo, el señor que restauraba el descapotable, nunca se
habrı́a tomado la molestia si hubiera ido equipado con un GUI.
No habrı́a sido divertido.
El volante y la palanca de cambios se inventaron en una era
en la que la tecnologı́a más complicada en la mayor parte de
las casas era la batidora de mantequilla. Aquellos primeros fabricantes de coches tenı́an mucha suerte, ya que podı́an diseñar
la interfaz que resultara más adecuada para la tarea de conducir un automóvil, y la gente la aprendı́a. Lo mismo sucedió con
el teléfono de marcado y la radio AM. Ya en la Segunda Guerra Mundial, la mayor parte de la gente conocı́a varias interfaces: no sólo podı́an batir mantequillas, sino también conducir
un coche, marcar en el teléfono, encender la radio, prender un
mechero, y cambiar una bombilla.
Pero ahora cualquier cosita —relojes de pulsera, vı́deos,
hornillos— está lleno de propiedades, y cada propiedad es
inútil sin interfaz. Si usted es como yo y como la mayorı́a de
consumidores, nunca ha usado el noventa por ciento de las propiedades de su microondas, vı́deo o teléfono móvil. Ni siquiera
sabe que estas propiedades existen. El pequeño beneﬁcio que
podrı́an aportarle queda anulado por la pura molestia de tener
67

Morlocks y Eloi al teclado

que aprenderlas. Esto debe de ser un gran problema para los
fabricantes de bienes de consumo, porque no pueden competir
sin ofrecer caracterı́sticas.
Ya no es aceptable que los ingenieros inventen toda una nueva interfaz de usuario para cada nuevo producto, como hicieron
en el caso del automóvil, en parte porque resulta demasiado caro y en parte porque hay un lı́mite en lo que puede aprender la
gente normal. Si el vı́deo se hubiera inventado hace cien años,
tendrı́a una ruedecita para la sintonización y una palanca para avanzar y rebobinar, y una gran asa de hierro forjado para
cargar o expulsar los cassettes. Llevarı́a un gran reloj analógico delante, y habrı́a que ajustar la hora moviendo las manillas
en la esfera. Pero debido a que el vı́deo se inventó cuando se
inventó —durante una especie de incómodo periodo de transición entre la era de las interfaces mecánicas y los GUIs— tiene sólo unos cuantos botones delante, y para ﬁjar la hora hay
que pulsar los botones de modo correcto. Esto le debe de haber
parecido bastante razonable a los ingenieros responsables, pero para muchos usuarios es sencillamente imposible. De ahı́ el
famoso 12:00 que parpadea en tantos vı́deos. Los informáticos
lo llaman el problema del doce parpadeante. Cuando hablan de
ello, empero, no suelen estar hablando de vı́deos.
Los vı́deos modernos habitualmente tienen algún tipo de
programación en pantalla, lo cual signiﬁca que se puede ﬁjar
la hora y controlar las demás propiedades mediante una especie de GUI primitivo. Los GUIs también tienen botones virtuales,
claro, pero también tienen otros tipos de controles virtuales, como botones de radio, casillas que tachar, espacios para introducir textos, esferas, y barras. Las interfaces compuestas de estos
elementos parecen ser mucho más fáciles para muchas personas
que pulsar esos botoncitos en la máquina, y ası́ el propio 12:00
parpadeante está desapareciendo lentamente de los salones de
Estados Unidos. El problema del doce parpadeante ha pasado a
otras tecnologı́as.
Ası́ que el
68

GUI

ha pasado de ser una interfaz para ordena-

En el principio fue la lı́nea de comandos

dores personales a convertirse en una especie de metainterfaz
que se emplea en cualquier nueva tecnologı́a de consumo. Raramente es ideal, pero tener una interfaz ideal o incluso buena
ya no es la prioridad; lo importante ahora es tener algún tipo de
interfaz que los clientes usen realmente, de tal modo que los fabricantes puedan aﬁrmar con toda seriedad que ofrecen nuevas
posibilidades.
Queremos GUIs básicamente porque son convenientes y porque son fáciles —o al menos el GUI hace que ası́ parezca—. Por
supuesto, nada es realmente fácil y simple, y poner una bonita interfaz no cambia ese hecho. Un coche controlado a través
de un GUI serı́a más fácil de conducir que uno controlado por
los pedales y el volante, pero serı́a increı́blemente peligroso. Al
usar GUIs todo el tiempo hemos aceptado sin darnos cuenta
la premisa de que pocas personas aceptarı́an si se les planteara directamente: a saber, que las cosas difı́ciles pueden hacerse
fáciles, y las complicadas pueden volverse simples, acoplándoles la interfaz adecuada. Para comprender lo raro que es todo
esto, imagı́nense que las crı́ticas de libros se escribieran según
el mismo sistema de valores que aplicamos a las interfaces de
usuario: la escritura de este libro es maravillosamente simple;
el autor pasa por encima de temas complicados y emplea generalizaciones ramplonas casi en cada oración. Los lectores rara
vez tendrán que pensar, y se les ahorrará toda la diﬁcultad y el
tedio generalmente asociada con la lectura de libros anticuados.
Mientras nos limitemos a operaciones sencillas como ﬁjar la hora en nuestro vı́deo, no es para tanto. Pero cuando tratamos de
hacer cosas más ambiciosas con nuestra tecnologı́a, inevitablemente nos topamos con el problema de:

69

Morlocks y Eloi al teclado

70

El trasquilón metafórico
E MPEC É A USAR M ICROSOFT W ORD en cuanto sacaron la primera versión en torno a 1985. Tras algunos problemas iniciales descubrı́ que era mejor herramienta que MacWrite, que era
su único competidor en aquel momento. Escribı́ un montón de
cosas en versiones tempranas de Word, guardándolo todo en
diskettes, y transferı́ los contenidos de todos mis diskettes a mi
primer disco duro, que adquirı́ en torno a 1987. A medida que
salı́an nuevas versiones de Word yo actualizaba ﬁelmente, razonando que como escritor tenı́a sentido que me gastara una
cierta cantidad de dinero en herramientas.
En algún momento a mediados de los ochenta traté de abrir
uno de mis antiguos documentos Word que databa más o menos de 1985 usando la versión entonces vigente de Word: 6.0.
No funcionó. Word 6.0 no reconocı́a un documento creado por
una versión anterior de sı́ mismo. Abriéndolo como archivo de
texto, pude recuperar las secuencias de letras que constituı́an
el texto del documento. Mis palabras seguı́an allı́. Pero el formato parecı́a pasado por un colador - las palabras que yo habı́a
escrito iban interrumpidas por cuadros rectangulares vacı́os y
basura.
Ahora bien, en el contexto de una empresa (el principal mercado de Word) este tipo de cosa sólo es una molestia —uno
de los problemas rutinarios que comporta usar ordenadores—
71

El trasquilón metafórico

. Es fácil comprar programitas de conversión de archivos que
se ocupan de este problemas. Pero si eres un escritor, cuyo oﬁcio son las palabras, cuya identidad profesional es un corpus de
documentos escritos, este tipo de cosa resulta extremadamente
desasosegante. En mi tipo de trabajo hay muy pocos presupuestos establecidos, pero uno de ellos es que una vez escribes una
palabra, queda escrita y no puede desescribirse. La tinta mancha el papel, el escoplo corta la piedra, el estilo marca la arcilla,
y algo ha sucedido irrevocablemente (mi cuñado es un teólogo que lee tablillas en cuneiforme de hace 3250 años —puede
reconocer la escritura de algunos escribas individuales, e identiﬁcarlos por su nombre—). Pero el software de procesamiento
de textos —particularmente el tipo que emplea formatos de archivo especiales y complejos— tiene el sobrenatural poder de
desescribir las cosas. Un pequeño cambio en los formatos de archivo, o unos pocos bits revueltos, y la producción literaria de
meses o años puede dejar de existir.
Esto era técnicamente un fallo de la aplicación (Word 6.0 para Macintosh), no del sistema operativo (MacOS 7 punto algo),
ası́ que el blanco inicial de mi enfado fueron los responsables de
Word. Por otro lado, yo podı́a haber elegido la opción guardar
como texto en Word y haber guardado todos mis documentos
como simples telegramas, y este problema no habrı́a surgido.
Por el contrario, me habı́a dejado seducir por todas esas vistosas opciones de formateo que ni siquiera existı́an hasta que los
GUI s aparecieron y las hicieron practicables. Habı́a caı́do en el
hábito de usarlas para que mis documentos tuvieran un bonito
aspecto (tal vez más bonito del que merecı́an; todos esos viejos documentos en los diskettes resultaron ser más o menos una
porquerı́a). Ahora estaba pagando el precio de mi autoindulgencia. La tecnologı́a habı́a avanzado y hallado maneras de que
mis documentos parecieran aún más bonitos, y la consecuencia
de ello era que todos los viejos y feos documentos habı́an dejado
de existir.
Era —si me disculpan una pequeña y extraña fantası́a du72

En el principio fue la lı́nea de comandos

rante un momento— como si hubiera ido a alojarme en un hotel exquisitamente diseñado, poniéndome en manos de los antiguos maestros de la Interfaz Sensorial, me hubiera sentado en
mi habitación y hubiese escrito una historia con un bolı́grafo
en papel amarillo, y al volver de la cena me hubiese encontrado con que la doncella se habı́a llevado mi trabajo y en su
lugar habı́a dejado una pluma y una resma de pergamino —
explicando que la habitación tenı́a mucho mejor aspecto ası́, y
era todo parte de una actualización rutinaria—. Pero escritas en
aquellas hojas de papel, en impecable ortografı́a, habrı́a largas
secuencias de palabras escogidas al azar del diccionario. Espantoso, cierto, pero legalmente no podrı́a demandar a la dirección,
porque al alojarme en ese hotel habı́a dado mi consentimiento
para ello. Habı́a entregado mis credenciales de morlock y me
habı́a convertido en un eloi.

73

El trasquilón metafórico

74

Linux
A FINALES DE LOS A ÑOS OCHENTA y principios de los noventa pasé un montón de tiempo programando para Macintosh, y
al ﬁnal decidı́ pagar varios cientos de dólares por un producto
de la Apple llamado el Macintosh Programmer’s Workshop, o
MPW. MPW tenı́a competidores, pero era incuestionablemente el mejor sistema de desarrollo de software para el Mac. Los
propios ingenieros de la Apple solı́an escribir código Macintosh
con él. Puesto que MacOS era con mucho el sistema operativo
más desarrollado tecnológicamente en aquel momento, y puesto que Linux ni siquiera existı́a todavı́a, y puesto que éste era
el programa que usaba de hecho el equipo de ingenieros creativos de élite de la Apple, tenı́a grandes expectativas. Venı́a en
un taco de diskettes de un pie de lato, ası́ que tuve tiempo para que mi emoción creciera durante el interminable proceso de
instalación. La primera vez que inicié MPW, probablemente me
esperaba algún tipo de quisquilloso muestrario multimedia. Por
el contrario, era austero, casi hasta el punto de resultar intimidatorio. Era una ventana corrediza en la que se podı́a escribir
texto simple, sin formato. El sistema interpretaba entonces esas
lı́neas de texto como comandos, y trataba de ejecutarlos.
Era, en otras palabras, un teletipo de vidrio ejecutando una
interfaz de lı́nea de comandos. Venı́a con todo tipo de comandos crı́pticos pero potentes, que podı́an invocarse tecleando sus
75

Linux

nombres, y que sólo gradualmente aprendı́ a usar. Sólo unos
pocos años después, cuando empecé a enredar con Unix, comprendı́ que la interfaz de lı́nea de comandos encarnada en MPW
era una recreación de Unix.
En otras palabras, lo primero que habı́an hecho los hackers
de Apple cuando habı́an montado MacOS - posiblemente antes
de haberlo montado - habı́a sido recrear la interfaz de Unix, para poder hacer algún trabajo útil. En aquel momento, mi mente
no daba para entender esto, pero en lo que concernı́a a los hackers de Apple, la muy pregonada Interfaz Gráﬁca de Usuario
del Mac era un impedimento, algo a evitar incluso antes de que
el aparatito saliera siquiera al mercado.
Incluso antes de que mi Powerbook fallara y destruyera miy
gran archivo en julio de 1995, habı́a habido señales de peligro.
Un viejo amigo mı́o, que crea y lleva compañı́as de alta tecnologı́a en Boston, habı́a desarrollado un producto comercial
usando el Macintosh. Básicamente el Mac funcionaba como terminal gráﬁco de alto rendimiento, escogido por su bonita interfaz de usuario, dando al usuario acceso a una gran base de
datos de informacion gráﬁca almacenada en una red de ordenadores mucho más potentes, pero menos enfocados hacia el
usuario. Este tipo era la segunda persona que llamó mi atención sobre el Macintosh, por cierto, y a mediados de los ochenta compartı́amos la emoción de ser expertos en alta tecnologı́a,
usar la tecnologı́a Apple en un mundo de tontainas usuarios
de DOS. Las primeras versiones del sistema de amigo funcionaros bien, pero cuando se unieron varias máquinas a la red,
empezaron a producirse misteriosos fallos; a veces todo el sistema sencillamente se detenı́a. E! ra uno de esos errores que no
podı́an reproducirse fácilmente. Finalmente se dieron cuenta de
que estos fallos del sistema se producı́an cada vez que un usuario, buscando algo en los menús, mantenı́a el botón del ratón
pulsado durante más de dos segundos.
Básicamente, el MacOS sólo podı́a hacer una cosa por vez.
Desplegar un menú en la pantalla es una cosa. Ası́ que cuando
76

En el principio fue la lı́nea de comandos

de desplegaba un menú, el Macintosh no era capaz de hacer
nada más hasta que el usuario indeciso soltaba el botón.
Esto no es algo tan terrible en una máquina de un solo usuario y un solo proceso (aunque es una cosa bastante mala), pero
es un desastre en una máquina que forma parte de una red, porque formar parte de una red conlleva algún tipo de interacción
continua de bajo nivel con otras máquinas. Al no responder a la
red, el Mac provocó un fallo en todo el sistema.
Para trabajar con otros ordenadores, y con diferentes tipos
de hardware, un sistema operativo ha de ser incomparablemente más potente que MS - DOS y que el MacOS original. El único
modo de conectarse con Internet que merece la pena tomarse
en serio es PPP, el Protocolo Punto-a-Punto, que (no importan
los detalles) convierte a su ordenador —temporalmente— en un
miembro de pleno derecho de la Internet Global, con su propia
dirección única, y diversos privilegios, poderes, y responsabilidades. Técnicamente, signiﬁca que su máquina ejecuta el protocolo TCP / IP, que, brevemente, se basa en el envı́o de paquetes
de datos, en ningún orden en particular, y en momentos impredecibles, siguiendo un inteligente y elegante conjunto de reglas.
Pero enviar un paquete de datos es una cosa, ası́ que un sistema operativo que sólo pueda hacer una cosa por vez no puede formar parte de Internet y hacer otra cosa simultáneamente.
Cuando se inventó TCP / IP, ejecutarlo era un honor reservado a
los Ordenadores Serios —mainframes y miniordenadores de alta
potencia usados en contextos técnicos y comerciales—, ası́ que
el protocolo está diseñado con el presupuesto de que cada ordenador que lo usa es una máquina seria, capaz de hacer muchas
cosas a la vez. Hablando pronto y mal, una máquina Unix. Ni
MacOS ni MS - DOS se construyeron originalmente pensando en
eso, ası́ que cuando Internet se puso caliente, hubo que llevar a
cabo cambios radicales.
Cuando mi PowerBook me partió el corazón, y cuando
Word dejó de reconocer mis antiguos archivos, me pasé a Unix.
La alternativa obvia a MacOS habrı́a sido Windows. En realidad
77

Linux

yo no tenı́a nada contra Microsoft, ni contra Windows. Pero ya
resultaba bastante obvio que los antiguos sistemas operativos
de PC estaban funcionando más allá de sus posibilidades y lo
mostraban, ası́ que tal vez era mejor evitarlos hasta que hubieran aprendido a caminar y mascar chicle al mismo tiempo.
El cambio tuvo lugar un dı́a particular en el verano de 1995.
Llevaba un par de semanas en San Francisco, usando mi PowerBook para trabajar en un documento. El documento era demasiado grande para caber en un solo diskette, ası́ que no habı́a
realizado ninguna copia desde que salı́ de casa. El PowerBook
falló y borró todo el archivo.
Sucedió justo cuando salı́a a visitar una compañı́a llamada
Electric Communities, que en aquella época estaba en Los Altos.
Me llevé mi PowerBook conmigo. Mis amigos en Electric Communities eran usuarios de Mac que tenı́an todo tipo de software
para desborrar archivos y recuperar datos perdidos en fallos de
disco, y estaba seguro de que podrı́a recobrar la mayor parte del
archivo.
Resultó que dos utilidades diferentes para la recuperación
de datos por fallo del Mac fueron incapaces de hallar rastro alguno de que mi archivo habı́a existido alguna vez. Estaba completa y sistemáticamente borrado. Peinamos el disco duro bloque por bloque, y encontramos fragmentos disjuntos de incontables archivos antiguos, descartados y olvidados, pero nada
de lo que yo querı́a. El trasquilón metafórico fue especialmente
brutal ese dı́a. Fue algo ası́ como ver cómo la chica de la que
llevas diez años enamorado se mata en un accidente de tráﬁco,
y luego estar presente en su autopsia, para darte cuenta de que
bajo la ropa y el maquillaje era sólo carne y hueso.
Debı́ de vagar por los pasillos de la Electric Communities
en una especie de fuga jungiana primaria, porque en aquel momento sucedieron tres cosas extrañamente sincrónicas.
1.

78

Randy Farmer, cofundador de la compañı́a, llegó en una
visita rápida con su familia - estaba recuperándose de una
operación en la espalda en aquel momento. Traı́a noticias

En el principio fue la lı́nea de comandos

candentes: Hoy han masterizado Windows 95. Lo que esto
querı́a decir era que el nuevo sistema operativo de Microsoft habı́a sido colocado hoy en un disco compacto especial conocido como el master dorado, que se usarı́a para
sacar trillones de copias, preparando su estruendoso lanzamiento unas pocas semanas después. Esta noticia fue
recibida con fastidio por los empleados de Electric Communities, incluyendo uno que tenı́a la puerta del despacho llena de las viñetas y novedades habituales, e.g.
2.

Un cómic de Dilbert en el que Dilbert, el sufridor ingeniero de software en una compañı́a, se encuentra con un
hombre barbudo y peludo de cierta edad - algo parecido
a Santa Claus, pero más siniestro, y con cierta sorna. Dilbert reconoce a este hombre, por su apariencia y efecto,
como un hacker de Unix, y reacciona con una cierta mezcla de nerviosismo, respeto, y hostilidad. Dilbert realiza
endebles intentos por meterse con el perturbador extraño
durante un par de viñetas; el hacker de Unix le escucha
con una especie de irritante calma beatı́ﬁca, y luego, en la
última viñeta, mete la mano en el bolsillo. Ten una moneda, chico, dice, y ve a comprarte un ordenador de verdad.

3.

El dueño de la puerta y el cómic era un tal Doug Barnes.
Era sabido que Barnes tenı́a ciertas opiniones heréticas sobre el tema de los sistemas operativos. A diferencia de la
mayorı́a de los techies del Área de la Bahı́a, que adoraban el Macintosh, considerando que era la máquina del
verdadero hacker, a Barnes le gustaba señalar que el Mac,
con su arquitectura herméticamente sellada, era de hecho
hostil a los hackers, a quienes les gusta enredar y y para
los que la apertura es un dogma. En cambio, las máquinas
compatibles con IBM, que pueden montarse y desmontarse fácilmente, eran mucho más hackeables.

Ası́ que cuando volvı́ a casa empecé a enredar con Linux,
que es una de las muchı́simas distintas implementaciones con79

Linux

cretas del ideal abstracto y platónico llamado Unix. No me apetecı́a cambiarme a un nuevo sistema operativo, porque mis tarjetas de crédito todavı́a echaban humo después de todo el dinero que me habı́a gastado en hardware para el Mac en el curso
de los años. Pero la gran virtud de Linux era, y es, que podı́a
ejecutarse en exactamente el mismo tipo de hardware que el sistema operativo de Microsoft —es decir, el hardware más barato
que existe—. Como para demostrar que esto era una gran idea,
una o dos semanas después de volver a casa pude hacerme con
un ordenador entonces bastante bueno (un 486 a 33 MHz) gratis, porque conocı́a a un tipo que trabajaba en una oﬁcina en la
que estaban tirándolos. Una vez llegué a casa, le quité la funda, metı́ las manos, y empecé a cambiar las tarjetas. Si algo no
funcionaba, iba a una tienda de ordenadores de segunda mano, buscaba en una cesta llena de componentes y compraba una
nueva tarjeta por unos pocos dólares.
La disponibilidad de todo este hardware barato pero efectivo fue una consecuencia involuntaria de decisiones que se
habı́an tomado hacı́a más de una década en IBM y Microsoft.
Cuando salió Windows y llevó el GUI a un mercado mucho más
amplio, el régimen del hardware cambió: el precio de las tarjetas
de vı́deo en color y los monitores de alta resolución empezó a
caer, y sigue cayendo. Este enfoque del hardware gratis-paratodos signiﬁcó que Windows era inevitablemente torparrón
comparado con MacOS. Pero el GUI llevó la informática a un
público tan vasto que el volumen aumentó muchı́simo y los precios se vinieron abajo. Mientras tanto Apple, que tanto querı́a
un sistema operativo limpio e integrado, con el vı́deo limpiamente integrado en el hardware de procesamiento, habı́a quedado muy por detrás en la cuota de mercado, en parte al menos
porque su precioso hardware costaba tanto.
Pero el precio que tuvimos que pagar los dueños de un Mac
por una estética y un diseño superiores no fue meramente ﬁnanciero. Habı́a un precio cultural también, debido al hecho de
que no podı́amos abrir el ordenador y enredar con él. Doug
80

En el principio fue la lı́nea de comandos

Barnes tenı́a razón. Apple, pese a su reputación de ser la opción de los hackers creativos y contestatarios, habı́a creado de
hecho una máquina que desalentaba el hackeo, mientras que
Microsoft, considerada una perezosa tecnológica y una plagiaria, habı́a creado un vasto bazar de componentes sin orden ni
concierto —una sopa primordial que habı́a acabado autoorganizándose en Linux.

81

Linux

82

La broca de agujero de los
sistemas operativos
U NIX SIEMPRE HA ESTADO PULULANDO PROVOCATIVAMENTE
en el trasfondo de las guerras de los sistemas operativos, como
el Ejército Ruso. La mayor parte de la gente sólo conoce su reputación, y su reputación, como sugiere el cómic de Dilbert, es
mixta. Pero todo el mundo parece estar de acuerdo en que si tan
sólo se planteara su actuación en serio y dejara de cederle enormes extensiones de ricos terrenos agrı́colas y cientos de miles
de prisioneros de guerra a los invasores, los aplastarı́a , a ellos
y a cualquier otra oposición.
Resulta difı́cil explicar cómo se ha ganado Unix este respeto
sin meterse en horrorosos detalles técnicos. Tal vez el meollo
pueda explicarse contando una historia sobre brocas.
La broca de agujero es una broca fabricada por la Compañı́a
de Herramientas de Milwaukee. Si miran el escaparate de una
tı́pica ferreterı́a, pueden encontrar brocas de Milwaukee más
pequeñas, pero no la broca de agujero, que es demasiado potente y cara para usuarios domésticos. La broca de agujero no
tiene el diseño en forma de pistola de la barata broca doméstica.
Es un cubo de metal sólido con un mango que sale por un lado
y una protuberancia en otro. El cubo contiene un motor eléctrico desconcertantemente potente. Se puede sostener el mango
83

La broca de agujero de los sistemas operativos

y apretar el gatillo con el ı́ndice, pero a menos que se sea excepcionalmente fuerte no se puede controlar el peso de la broca
de agujero con una mano: hay que sujetarla con ambas manos.
Para compensar el contra-torque de la broca de agujero, se usa
un mango adicional (que viene dado), que se atornilla en uno
u otro lado del cubo de hierro, dependiendo de si se usa la mano izquierda o derecha para apretar el gatillo. Este mango no es
esbelto y ergonómico como lo serı́a en una broca doméstica. Es
simplemente un pedazo de cañerı́a galvanizada normal de un
pie de largo, con un agujero en un extremo, con un mango de
goma negra en el otro. Si lo pierdes, simplemente vas a la tienda
de fontanerı́a local y compras otro pedazo de cañerı́a.
Durante los ochenta hice algo de albañilerı́a. Un dı́a, otro
obrero apoyó una escalera contra la fachada del ediﬁcio que
estábamos construyendo, subió al segundo piso, y uso la broca
de agujero para hacer un agujero en el muro exterior. En algún
momento, la broca se atascó en el muro. La broca de agujero, siguiendo su único imperativo, siguió funcionando. Giró el cuerpo del obrero como una muñeca de trapo, haciendo que tirara la
escalera. Por suerte, se mantuvo agarrado a la broca de agujero,
que permaneció encajada en el muro, y simplemente colgó de
ella y pidió ayuda hasta que vino alguien y puso de nuevo la
escalera.
Yo mismo usé una broca de agujero para hacer muchos agujeros a través de remaches, lo cual hice como una picadora pica
coliﬂor. También la usé para hacer unos pocos agujeros de seis
pulgadas de diámetro en un viejo techo de escayola. Introduje
una nueva sierra, subı́ al segundo piso, metı́ la mano por entre las recientes juntas del suelo, y empecé a cortar el techo del
primer piso. Allı́ donde mi broca doméstica las habı́a pasado
canutas para hacer girar el enorme hierro, y se habı́a detenido a
la menor obstrucción, la broca de agujero rotaba con la estúpida
consistencia de un planeta giratorio. Cuando la sierra ganó velocidad, la broca de agujero giró sobre sı́ misma y me hizo girar
a mı́ también, aplastando una de mis manos entre el mango de
84

En el principio fue la lı́nea de comandos

acero y una junta, produciendo unas pocas laceraciones, cada
una rodeada por una amplia corona de carne magullada. También dobló la propia sierra, aunque no tanto como para que no
pudiera volver a usarla. Tras unos pocos encontronazos parecidos, cada vez que tenı́a que usar la broca de agujero mi corazón
empezaba a latir con terror atávico.
Pero nunca le eché la culpa a la broca de agujero; me eché la
culpa a mı́ mismo. La broca de agujero es peligrosa porque hace
exactamente lo que se le pide que haga. No se ve constreñida
por las limitaciones fı́sicas inherentes a una broca barata, ni por
los cierres de seguridad que puede incluir un fabricante temeroso de las responsabilidades penales en un producto doméstico.
El peligro no está en la máquina misma, sino en la incapacidad
del usuario de contemplar todas las consecuencias de las instrucciones que le da.
Una herramienta más pequeña también es peligrosa, pero
por razones completamente distintas: trata de dar lo que se le
pide, y falla de un modo que resulta impredecible y casi siempre indeseable. Pero la broca de agujero es como el genio de las
antiguos cuentos de hadas, que lleva a cabo las instrucciones
de su amo literalmente, con precisión y un poder ilimitado, a
menudo con desastrosas consecuencias imprevistas.
Antes de la broca de agujero, solı́a examinar el surtido de
brocas en las ferreterı́as de un modo que consideraba sensato,
desechando los modelos más pequeños y levantando los grandes y caros apreciativamente, deseando poder permitirme una
de aquellas bellezas. Ahora las miro a todas con tal desdén que
ni siquiera considero que sean brocas de verdad —meramente
juguetes diseñados para explotar las tendencias delirantes de
urbanitas que quieren creer que han comprado una herramienta
de verdad. Sus estuches de plástico, cuidadosamente diseñados
y testados en grupos diana para transmitir una sensación de solidez y potencia, me parecen asquerosamente frágiles y baratos,
y me avergüenzo de haber picado alguno vez y comprado tales
menudencias.
85

La broca de agujero de los sistemas operativos

No resulta difı́cil imaginar qué aspecto tendrı́a el mundo
para alguien que hubiese sido criado por constructores y que
nunca hubiese usado más broca que la broca de agujero. Tal
persona, al ver la mejor y más cara broca de una ferreterı́a, ni
siquiera la reconocerı́a como tal. Por el contrario, puede que
la confundiera con un juguete de niños, o con una especie de
destornillador motorizado. Si el vendedor o confuso urbanita
se reﬁriera a ello como una broca, se reirı́a y les dirı́a que estaban equivocados —sencillamente, se habı́an confundido con la
terminologı́a—. Su interlocutor se marcharı́a irritado, y probablemente bastante a la defensiva en lo tocante a su sótano lleno
de vistosas herramientas baratas, peligrosas y coloridas.
Unix es la broca de agujero de los sistemas operativos, y los
hackers de Unix, como Doug Barnes y el tipo del cómic de Dilbert y muchas otras personas que pueblan Silicon Valley, son
como hijos de constructores que se criaron usando sólo brocas de agujero. Podrı́an usar los sistemas operativos de Apple/Microsoft para escribir cartas, jugar a videojuegos o llevar
las cuentas, pero no consiguen tomarse esos sistemas operativos
en serio.

86

La tradición oral
U NIX ES DIF ÍCIL DE APRENDER . El proceso de aprenderlo tiene múltiples pequeñas epifanı́as. Lo tı́pico es estar a punto de
inventar una herramienta o utilidad necesaria cuando te das
cuenta de que alguien ya la inventó, y la incorporó, y eso explica algún extraño archivo o directorio que viste pero que nunca
comprendiste realmente antes.
Por ejemplo, hay un comando (un pequeño programa, parte del sistema operativo) llamado whoami, que permite preguntarle al ordenador quién cree que eres —en una máquina
Unix, siempre entras bajo un nombre, ¡posiblemente, incluso el
tuyo!—, con qué archivos puedes trabajar, o qué software puedes usar, depende de tu identidad. Cuando empecé a usar Linux, tenı́a una máquina no de red en mi sótano, con sólo una
cuenta de usuario, ası́ que cuando me apercibı́ del comando
whoami me pareció ridı́culo. Pero cuando entras como una persona, puedes usar temporalmente un pseudónimo para acceder
a diferentes archivos. Si tu ordenador está conectado a Internet, puedes entrar en otros ordenadores siempre que tengas un
nombre de usuario y una contraseña. En ese momento la máquina distante no diﬁere en nada de la que tienes justo delante de
ti. Estos cambios de identidad y localización pueden anidarse
unos dentro de otros, con muchas capas, incluso si no se está haciendo nada criminal. Cuando t! e olvida de quién eres y dónde
87

La tradición oral

estás, el comando whoami es indispensable. Yo lo uso todo el
tiempo.
Los sistemas de archivos de las máquinas Unix tienen todos
la misma estructura general. En los sistemas operativos endebles, se pueden crear directorios (carpetas) y ponerles nombres
como Frodo o Mis Cosas y ponerlos más o menos donde a uno
le dé la gana. Pero en Unix el nivel más alto - la raı́z - del sistema
de archivos siempre es designado por el carácter único / y siempre contiene el mismo conjunto de directorios de nivel superior: /usr /etc /var /bin /proc /boot /home /root
/sbin /dev /lib /tmp y cada uno de estos directorios tı́picamente tiene su propia estructura distintiva de subdirectorios.
Fı́jense en el uso obsesivo de abreviaturas y en cómo se evitan
las mayúsculas; se trata de un sistema inventado por gente a la
que el desorden repetitivo por stress es lo que la silicosis a los
mineros. Los nombres largos se desgastan hasta convertirse en
colillas de tres letras, como guijarros pulidos por el rı́o.
Este no es el lugar para tratar de explicar por qué existe
cada uno de los anteriores directorios, y qué contiene. Al primero todo parece obscuro; pero, parece deliberadamente obscuro. Cuando empecé a usar Linuz, estaba acostumbrado a poder crear directorios donde quisiera y a darles los nombres que
me apeteciera. Con Unix se puede hacer eso, por supuesto (eres
libre de hacer lo que quieras), pero a medida que se adquiere
experiencia con el sistema se llega a comprender que los directorios listados antes se crearon por las mejores razones y que la
vida de uno será mucho más fácil si se sigue el juego (dentro de
/home, por cierto, uno tiene mucha libertad ilimitada).
Cuando este tipo de cosa ha sucedido varios cientos o miles de veces, el hacker comprende por qué Unix es como es, y
está de acuerdo en que no podrı́a ser lo mismo de ningún otro
modo. Es este tipo de aculturación lo que les da a los hackers
de Unix su conﬁanza en el sistema, y la actitud de reposada,
inamovible, irritante superioridad que reﬂejaba el cómic de Dilbert. Windows 95 y MacOS son productos, diseñados por inge88

En el principio fue la lı́nea de comandos

nieros al servicio de compañı́as especı́ﬁcas. Unix, en cambio, no
es tanto un producto como una historia oral escrupulosamente
compilada de la subcultura hacker. Es nuestra épica de Gilgamesh.
Lo que hacı́a que las antiguas épicas como la de Gilgamesh
resultaran tan potentes y tan logevas era que eran cuerpos vivientes de narrativa que mucha gente se sabı́a de memoria, y
contaban una y otra vez - añadiendo sus propios adornos cuando les apetecı́a. Los malos adornos no gustaban, los buenos
eran retomados por otras personas, pulidos, mejorados, y con
el tiempo se incorporaban a la historia. De igual modo, Unix es
conocido, amado y comprendido por tanto hackers que puede
recrearse a partir de cero cuando alguien lo necesita. Esto resulta muy difı́cil de entender para la gente acostumbrada a pensar
en los sistemas operativos como cosas que tienen que ser compradas.
Muchos hackers han lanzado reimplementaciones más o
menos exitosas del ideal de Unix. Cada una lleva nuevos adornos. Algunos mueren rápidamente, otros se funden con innovaciones semejantes y paralelas creadas por diferentes hackers
que atacaban el mismo problema, otros se adoptan e incorporan a la épica. Ası́, Unix ha crecido lentamente alrededor de un
meollo simple y ha adquirido un complejidad y asimetrı́a a su
alrededor que es orgánica, como las raı́ces de un árbol, o las ramiﬁcaciones de una arteria coronaria. Comprenderlo se parece
más a la anatomı́a que a la fı́sica.
Durante al menos un año, antes de mi adopción de Linux,
habı́a oı́do hablar de él. Personas creı́bles y bien informadas me
decı́an que unos cuantos hackers habı́an construido una implementación de Unix que podı́a descargarse gratuitamente de Internet. Durante mucho tiempo no pude tomarme la idea en serio. Era como oı́r rumores de que uno grupo de entusiastas de
las maquetas de cohetes habı́an creado un Saturno V completamente funcional intercambiando planos por la Red y enviándose mutuamente válvulas y alerones.
89

La tradición oral

Pero es cierto. Normalmente el mérito de Linux se atribuye a
su tocayo humano, un tal Linus Torvalds, un ﬁnlandés que inició el asunto en 1991, cuando usó algunas de las herramientas
de GNU para escribir el principio de un núcleo Linux que pudiera ejecutarse en hardware compatible con PC. Y ciertamente Torvalds merece todo el crédito que se le ha dado, y mucho
más. Pero no podrı́a haberlo conseguido él solo, como tampoco
habrı́a podido Richard Stallman. Para escribir el código, Torvalds tuvo que tener herramientas de desarrollo baratas pero
potentes, y obtuvo éstas del proyecto GNU de Stallman.
Y tenı́a un hardware barato en que escribir ese código. El
hardware barato es algo mucho más difı́cil de lograr que el software barato; una sola persona (Stallman) puede escribir software y colgarlo en la Red de modo gratuito, pero para fabricar
hardware que hay que tener toda una infrastructura industrial,
lo cual no es barato ni de lejos. Realmente, el único modo de hacer que el hardware resulte barato es sacar un número increı́ble
de copias, de tal modo que el precio por unidad acabe cayendo.
Por las razones ya explicadas, Apple no tiene ninguna gana de
ver cómo cae el precio del hardware. La única razón por la que
Torvalds tenı́a hardware barato era Microsoft.
Microsoft se negó a entrar en el negocio del hardware, insistiendo en hacer que su software pudiera ejecutarse en hardware
que cualquiera podı́a fabricar, y creó ası́ las condiciones de mercado que permitieron que los precios del hardware cayeran en
picado. Al tratar de comprender el fenómeno Linux, pues, tenemos que contemplar no a un único innovador, sino una especie
de extraña Trinidad: Linus Torvalds, Richard Stallman, y Bill
Gates. Elimı́nese cualquiera de estos tres y Linux no existirı́a.

90

Shock de Sistema Operativo
L OS J ÓVENES ESTADOUNIDENSES QUE DEJAN SU GRAN PA ÍS
HOMOG ÉNEO y visitan otra parte del mundo tı́picamente sufren varios grados de shock cultural: primero, inmenso asombro. Luego un acercamiento tentativo a las costumbres, cocina,
sistemas públicos de circulación y retretes del nuevo paı́s, lo
cual lleva a un breve periodo de conﬁanza fatua en que son expertos instantáneos en el nuevo paı́s. A medida que continua
la visita, empieza la morriña, y el viajero empieza a apreciar,
por primera vez, cuánto daba por sentado en casa. Al mismo
tiempo, empieza a resultar obvio que las propias culturas y tradiciones son esencialmente arbitrarias; conducir por la derecha,
por ejemplo. Cuando el viajero vuelve a casa y hace de la experiencia, puede haber aprendido bastante más sobre los Estados
Unidos que sobre el paı́s que fueron a visitar.
Por los mismos motivos, merece la pena probar Linux. Ciertamente, es un paı́s extraño, pero no hay por qué vivir ahı́; una
breve estancia basta para experimentar el gusto del lugar y - lo
cual es más importante - revelar todo lo que se da por sentado, y todo lo que se podrı́a haber hecho de modo distinto, en
Windows o MacOS.
No se puede probar sin instalarlo. Con cualquier otro sistema operativo, instalarlo serı́a una transacción sencilla: a cambio
de dinero, una compañı́a te darı́a un CD-ROM, y ya está. Pero
91

Shock de Sistema Operativo

hay un montón de cosas subsumidas bajo ese tipo de transacción, y hay que verlas y diferenciarlas.
En Estados Unidos nos gustan los tratos simples y las transacciones sin complicaciones. Si vas a Egipto y, pongamos, tomas un taxi en algún sitio, te conviertes en parte de la vida del
taxista; se niega a aceptar tu dinero porque rebajarı́a vuestra
amistad, te sigue por la ciudad, y llora como un crı́o cuando te
metes en el taxi de otro. Acabas por conocer a sus hijos en algún
momento, y tienes que ingeniártelas para hallar algún modo de
compensarle sin insultar su honor. Es agotador. A veces simplemente quieres tomar un taxi como en Manhattan.
Pero para tener un sistema de estilo estadounidense, en el
que puedes salir, parar un taxi, y ya está, tiene que haber todo
un aparato de licencias, inspectores, comisiones, etc. - lo cual
está muy bien siempre que los taxis sean baratos y siempre
puedas llamar a uno. Cuando el sistema no funciona de alguna
manera, resulta misterioso y enervantes y convierte a personas
habitualmente razonables en teóricos de la conspiración. Pero
cuando el sistema egipcio se viene abajo, se viene abajo de forma transparente. No puedes tomar un taxi, pero aparecerá el
sobrino del taxista, a pie, para explicarte el problema y disculparse.
Microsoft y Apple hacen las cosas al estilo de Manhattan,
con una vasta complejidad oculta tras el muro de la interfaz.
Linux hace las cosas al estilo de Egipto, con una vasta complejidad desperdigada por todo el paisaje. Si acabas de llegar de
Manhattan, tu primer impulso será llevarte las manos a la cabeza diciendo ¡Esto es de locos! ¿Por qué narices no os comportáis
como es debido? Pero esto no te granjeará más amigos en Linuxlandia de lo que lo harı́a en Egipto.
Se puede extraer Linux del aire mismo, por ası́ decir, descargando los archivos adecuados y poniéndolos en los lugares
adecuados, pero posiblemente no más de unos pocos cientos de
personas en el mundo podrı́an crean un sistema Linux funcional de ese modo. Lo que realmente se necesita es una distribu92

En el principio fue la lı́nea de comandos

ción de Linux, lo cual quiere decir un conjunto preempaquetado
de archivos. Pero las distribuciones son una cosa distinta de Linux per se.
Linux per se no es un conjunto especı́ﬁco de unos y ceros, sino una subcultura autoorganizada de la Red. El resultado ﬁnal
de sus elucubraciones colectivas es un vasto cuerpo de código fuente, casi todo escrito en C (el lenguaje de programación
dominante). El código fuente es sencillamente un programa de
ordenador escrito y editado por algún hacker. Si está en C, el
nombre del archivo probablemente llevará .c o .cpp al ﬁnal,
dependiendo del dialecto empleado; si está en otro lenguaje llevará otro suﬁjo. A menudo, este tipo de archivos pueden encontrarse en un directorio con el nombre /src, que es la abreviatura
hebraica del hacker para source, fuente.
Los archivos fuente son inútiles para el ordenador, y de poco interés para la mayorı́a de usuarios, pero tienen una enorme signiﬁcación cultural y polı́tica, porque Microsoft y Apple
los mantienen en secreto, mientras que Linux los hace públicos. Son las joyas de la familia. Son el tipo de cosa que en los
thrillers de Hollywood se usa como McGufﬁn: el núcleo de la
bomba de plutonio, los planos de alto secreto, el maletı́n lleno
de documentos ﬁnancieros, el microﬁlm. Si los archivos fuente
de Windows o MacOS se hicieran públicos en la Red, esos sistemas operativos se volverı́an gratuitos, como Linux —sólo que
no tan buenos, porque no habrı́a nadie para arreglar los fallos y
responder a las preguntas—. Linux es software de fuente abierta
(open source), lo cual sencillamente quiere decir que cualquiera
puede obtener copias de sus archivos de código fuente.
Un ordenador no necesita código fuente más de lo que lo
necesita usted; necesita código objeto. Los archivos de código
objeto tı́picamente llevan el suﬁjo .o y son ilegibles para todo el
mundo salvo unos pocos humanos altamente extraños, porque
consisten en unos y ceros. En consecuencia, este tipo de archivo
normalmente aparece en un directorio con el nombre /bin, por
binario.
93

Shock de Sistema Operativo

Los archivos fuente son sencillamente archivos de texto AS denota un modo particular de codiﬁcar las letras en
patrones de bits. En un archivo ASCII , cada carácter tiene ocho
bits para él solito. Esto crea un alfabeto potencial de 256 caracteres distintos, dado que ocho dı́gitos binarios pueden formar ese
número de patrones únicos. En la práctica, por supuesto, nos
limitamos a las letras y dı́gitos familiares. Los patrones de bits
empleados para representar esas letras y dı́gitos son los mismos
que se introducı́an fı́sicamente agujereando la cinta de papel de
mi teletipo del instituto, que a su vez eran los mismos que habı́a
usado antes la industria telegráﬁca durante décadas. Los archivos de texto ASCII, en otras palabras, son telegramas, y como
tales no tienen adornos tipográﬁcos. Pero por eso mismo son
eternos, porque el código nunca cambia, y universales, porque
todo software de edición y procesamiento de textos jamás escrito conoce este código.
CII . ASCII

Por tanto, se puede usar cualquier software para crear, editar
o leer archivos de código fuente. Los archivos de código objeto,
entonces, son creados a partir de estos archivos fuente por un
software llamado compilador, y son convertidos en una aplicación funcional por otro software llamado enlazador.
La trı́ada de editor, compilador, y enlazador, tomados juntos, constituye el núcleo de un sistema de desarrollo de software. Ahora es posible gastarse un montón de dinero en sistemas de desarrollo envueltos en plástico, con preciosas interfaces
gráﬁcas de usuario y diversas mejoras ergonómicas. En algunos
casos puede que hasta resulte un modo bueno y razonable de
gastar el dinero. Pero en este lado de la carretera, por ası́ decir,
el mejor software es a menudo el gratuito. Editor, compilador
y enlazador son a los hackers lo que ponies, estribos, y arcos
y ﬂechas eran a los mongoles. Los hackers viven a caballo, y
hackean sus propias herramientas incluso mientras las usan para crear nuevas aplicaciones. Resulta bastante inconcebible que
herramientas superiores de hacking pudieran haber sido creadas en una hoja en blanco por ingenieros informáticos. Incluso
94

En el principio fue la lı́nea de comandos

aunque fueran los ingenieros más inteligentes del mundo, se
verı́an sencillamente superados.
En el mundo de GNU/Linux hay dos grandes programas de
edición de textos: el minimalista vi (conocido en algunas implementaciones como elvis) y el maximalista emacs. Yo uso
emacs, que puede considerarse un procesador de textos termonuclear. Fue creado por Richard Stallman; y con esto ya está todo dicho. Está escrito en LISP, que es el único lenguaje de ordenador que es hermoso. Es colosal, y sin embargo sólo edita
archivos de texto ASCII, lo cual signiﬁca: nada de fuentes, nada
de negrita, nada de subrayado. En otras palabras, las horas que
dedicaron los ingenieros, en el caso de Windows, a cosas como la fusión de correo, y la capacidad de incrustar pelı́culas de
dos horas en memorándums de empresa, se dedicaron, en el caso de emacs, con intensidad manı́aca al engañosamente simple
problema de editar texto. Si eres un escritor profesional - AS CII (/src) y a compilarlos en archivos de código objeto binario
(/bin) ejecutables por el ordenador. Pero para llegar siquiera a
este punto —para ejecutar emacs, por ejemplo— hay que tener
Linux instalado y funcionando en el ordenador. E incluso un
sistema operativo mı́nimo de Linux requiere miles de archivos
binarios actuando en concierto, dispuestos y vinculados para
que lo hagan.
Por tanto, diversas entidades se han ocupado de crear distribuciones de Linux. Por extender algo más la analogı́a con Egipto, estas entidades se parecen algo a los guı́as turı́sticos que te
reciben en el aeropuerto, hablan tu idioma y te ayudan con el
shock cultural inicial. Si uno es egipcio, claro, se puede ver del
otro modo; los guı́as turı́sticos existen para evitar que los brutos extranjeros se metan en las mezquitas haciendo las mismas
preguntas una y otra y otra vez.
Algunos de estos guı́as turı́sticos son organizaciones comerciales, como Red Hat Software, que fabrica una distribución llamada Red Hat, que tiene un cierto aire comercial. En la mayorı́a
de casos metes un CD-ROM de Red Hat en el PC, lo inicias y él
95

Shock de Sistema Operativo

solito maneja todo lo demás. Ası́ como el guı́a turı́stico egipcio
esperará algún tipo de compensación por sus servicios, hay que
pagar por las distribuciones comerciales. En la mayorı́a de los
casos no cuestan casi nada y merece la pena.
Yo uso una distribución llamada Debian (la palabra es una
contracción de Deborah e Ian), que es no-comercial. Está organizada (o más bien debiera decir se ha organizado) siguiendo las
mismas lı́neas que Linux en general, esto es, consiste en voluntarios que colaboran en la Red, cada uno responsable de cuidar
de un pedazo distinto del sistema. Estas personas han dividido
Linux en diversos paquetes, que son archivos comprimidos que
pueden descargarse a un sistema Linux de Debian ya en funcionamiento, luego se abren y descomprimen usando una aplicación gratuita de instalación. Por supuesto, como tal, Debian no
tiene rama comercial —no tiene mecanismo de distribución—.
Se pueden descargar todos los paquetes de Debian por Internet, pero la mayorı́a de la gente preﬁere tenerlos en CD-ROM.
Diversas compañı́as se han ocupado de meter todos los actuales paquetes de Debian en CD-ROMs y venderlos. Yo compré el
mı́o de Linux Systems Labs. Un conjunto de tres discos, que
contenı́a Debian completo, me costó menos de tres dolares. Pero (y ésta es una distinción importante) ni un centavo de esos
tres dólares va a parar a ninguno de los programadores que codiﬁcaron Linux, ni a los empaquetadores de Debian. Va a parar
a Linux Systems Labs y no paga el software ni los paquetes, sino
el coste de imprimir los CD-ROMs.
Toda distribución de Linux encarna algún truco más o menos astuto para evitar el proceso normal de encendido y hacer
que cuando el ordenador arranque se organice no como un PC
ejecutando Windows, sino como un huésped que ejecuta Unix.
Esto resulta algo alarmante la primera vez que se ve, pero es
completamente inofensivo. Cuando se inicia un PC, lleva a cabo una pequeña autocomprobación de rutina, realizando un inventario de los discos y memoria disponibles, y luego empieza
a buscar un disco desde el que arrancar. En cualquier ordenador
96

En el principio fue la lı́nea de comandos

Windows normal, ese disco será el disco duro. Pero si el sistema
está bien conﬁgurado, primero buscará un diskette o un disco
de CD-ROM, y arrancará a partir de ése si está disponible.
Linux explota esta rendija en las defensas. El ordenador percibe un disco de inicio en la disquetera o el drive del CD-ROM,
carga el código objeto de ese disco, y ciegamente empieza a ejecutarlo. Pero no es código de Microsoft o Apple, es código Linux, ası́ que en este punto el ordenador se empieza a comportar
de un modo muy distinto al acostumbrado. Empiezan a aparecer mensajes crı́pticos en pantalla. Si se hubiera iniciado desde
un sistema operativo comercial, en este momento se verı́a un
dibujito de Bienvenido a MacOS, o una pantalla llena de nubes
en el cielo azul, y el logo de Windows. Pero con Linux aparece un largo telegrama impreso en crudas letras blancas en una
pantalla negra. No hay ningún mensaje de bienvenida. La mayor parte del telegrama tiene el semiescrutable aire amenazante
de los grafﬁtis.
Dec 14 15:04:15 theRev syslogd 1.3-3#17: restart. Dec 14 15:04:15 theRev
kernel: klogd 1.3-3, log source = /proc/kmsg started. Dec 14 15:04:15
theRev kernel: Loaded 3535 symbols from /System.map. Dec 14 15:04:15
theRev kernel: Symbols match kernel version 2.0.30. Dec 14 15:04:15
theRev kernel: No module symbols loaded. Dec 14 15:04:15 theRev kernel:
Intel MultiProcessor Specification v1.4 Dec 14 15:04:15 theRev kernel:
Virtual Wire compatibility mode. Dec 14 15:04:15 theRev kernel: OEM ID:
INTEL Product ID: 440FX APIC at: 0xFEE00000 Dec 14 15:04:15 theRev
kernel: Processor #0 Pentium(tm) Pro APIC version 17 Dec 14 15:04:15
theRev kernel: Processor #1 Pentium(tm) Pro APIC version 17 Dec 14
15:04:15 theRev kernel: I/O APIC #2 Version 17 at 0xFEC00000. Dec 14
15:04:15 theRev kernel: Processors: 2 Dec 14 15:04:15 theRev kernel:
Console: 16 point font, 400 scans Dec 14 15:04:15 theRev kernel:
Console: colour VGA+ 80x25, 1 virtual console (max 63) Dec 14 15:04:15
theRev kern! el: pcibios_init : BIOS32 Service Directory structure at
0x000fdb70 Dec 14 15:04:15 theRev kernel: pcibios_init : BIOS32 Service
Directory entry at 0xfdb80 Dec 14 15:04:15 theRev kernel: pcibios_init :
PCI BIOS revision 2.10 entry at 0xfdba1 Dec 14 15:04:15 theRev kernel:
Probing PCI hardware. Dec 14 15:04:15 theRev kernel: Warning : Unknown
PCI device (10b7:9001). Please read include/linux/pci.h Dec 14 15:04:15
theRev kernel: Calibrating delay loop.. ok - 179.40 BogoMIPS Dec 14
15:04:15 theRev kernel: Memory: 64268k/66556k available (700k kernel
code, 384k reserved, 1204k data) Dec 14 15:04:15 theRev kernel: Swansea
University Computer Society NET3.035 for Linux 2.0 Dec 14 15:04:15
theRev kernel: NET3: Unix domain sockets 0.13 for Linux NET3.035. Dec 14
15:04:15 theRev kernel: Swansea University Computer Society TCP/IP for

97

Shock de Sistema Operativo

NET3.034 Dec 14 15:04:15 theRev kernel: IP Protocols: ICMP, UDP, TCP Dec
14 15:04:15 theRev kernel: Checking 386/387 coupling... Ok, fpu using
exception ! 16 error reporting. Dec 14 15:04:15 theRev kernel: Checking
’hlt’ instruction... Ok. Dec 14 15:04:15 theRev kernel: Linux version
2.0.30 (root@theRev) (gcc version 2.7.2.1) #15 Fri Mar 27 16:37:24 PST
1998 Dec 14 15:04:15 theRev kernel: Booting processor 1 stack 00002000:
Calibrating delay loop.. ok - 179.40 BogoMIPS Dec 14 15:04:15 theRev
kernel: Total of 2 processors activated (358.81 BogoMIPS). Dec 14
15:04:15 theRev kernel: Serial driver version 4.13 with no serial
options enabled Dec 14 15:04:15 theRev kernel: tty00 at 0x03f8 (irq = 4
is a 16550A Dec 14 15:04:15 theRev kernel: tty01 at 0x02f8 (irq = 3) is
a 16550A Dec 14 15:04:15 theRev kernel: lp1 at 0x0378, (polling) Dec 14
15:04:15 theRev kernel: PS/2 auxiliary pointing device detected -driver installed. Dec 14 15:04:15 theRev kernel: Real Time Clock Driver
v1.07 Dec 14 15:04:15 theRev kernel: loop: registered device at major 7
Dec 14 15:04:15 theRev kernel: ide: i82371 PIIX (Triton) on PCI bus 0
function 57 Dec 1! 4 15:04:15 theRev kernel: ide0: BM-DMA at
0xffa0-0xffa7 Dec 14 15:04:15 theRev kernel: ide1: BM-DMA at
0xffa8-0xffaf Dec 14 15:04:15 theRev kernel: hda: Conner Peripherals
1275MB - CFS1275A, 1219MB w/64kB Cache, LBA, CHS=619/64/63 Dec 14
15:04:15 theRev kernel: hdb: Maxtor 84320A5, 4119MB w/256kB Cache, LBA,
CHS=8928/15/63, DMA Dec 14 15:04:15 theRev kernel: hdc: , ATAPI CDROM
drive Dec 15 11:58:06 theRev kernel: ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
Dec 15 11:58:06 theRev kernel: ide1 at 0x170-0x177,0x376 on irq 15 Dec
15 11:58:06 theRev kernel: Floppy drive(s): fd0 is 1.44M Dec 15 11:58:0
theRev kernel: Started kswapd v 1.4.2.2 Dec 15 11:58:06 theRev kernel:
FDC 0 is a National Semiconductor PC87306 Dec 15 11:58:06 theRev kernel
md driver 0.35 MAX_MD_DEV=4, MAX_REAL=8 Dec 15 11:58:06 theRev kernel:
PPP: version 2.2.0 (dynamic channel allocation) Dec 15 11:58:06 theRev
kernel: TCP compression code copyright 1989 Regents of the University o
California Dec 15 11:58:06 theRev! kernel: PPP Dynamic channel
allocation code copyright 1995 Caldera, Inc. Dec 15 11:58:06 theRev
kernel: PPP line discipline registered. Dec 15 11:58:06 theRev kernel:
SLIP: version 0.8.4-NET3.019-NEWTTY (dynamic channels, max=256). Dec 15
11:58:06 theRev kernel: eth0: 3Com 3c900 Boomerang 10Mbps/Combo at
0xef00, 00:60:08:a4:3c:db, IRQ 10 Dec 15 11:58:06 theRev kernel: 8K
word-wide RAM 3:5 Rx:Tx split, 10base2 interface. Dec 15 11:58:06 theRev
kernel: Enabling bus-master transmits and whole-frame receives. Dec 15
11:58:06 theRev kernel: 3c59x.c:v0.49 1/2/98 Donald Becker
http://cesdis.gsfc.nasa.gov/linux/drivers/vortex.html Dec 15 11:58:06
theRev kernel: Partition check: Dec 15 11:58:06 theRev kernel: hda: hda
hda2 hda3 Dec 15 11:58:06 theRev kernel: hdb: hdb1 hdb2 Dec 15 11:58:06
theRev kernel: VFS: Mounted root (ext2 filesystem) readonly. Dec 15
11:58:06 theRev kernel: Adding Swap: 16124k swap-space (priority -1) Dec
15 11:58:06 theRev kernel: EXT2-fs warning: maximal mou! nt count
reached, running e2fsck is recommended Dec 15 11:58:06 theRev kernel:
hdc: media changed Dec 15 11:58:06 theRev kernel: ISO9660 Extensions:
RRIP_1991A Dec 15 11:58:07 theRev syslogd 1.3-3#17: restart. Dec 15
11:58:09 theRev diald[87]: Unable to open options file
/etc/diald/diald.options: No such file or directory Dec 15 11:58:09
theRev diald[87]: No device specified. You must have at least one
device! Dec 15 11:58:09 theRev diald[87]: You must define a connector
script (option ’connect’). Dec 15 11:58:09 theRev diald[87]: You must

98

En el principio fue la lı́nea de comandos

define the remote ip address. Dec 15 11:58:09 theRev diald[87]: You must
define the local ip address. Dec 15 11:58:09 theRev diald[87]:
Terminating due to damaged reconfigure.

Las únicas partes de esto que resultan legibles para las personas normales son los mensajes de error y las advertencias. Y
sin embargo, es notable que Linux no se detiene, o se viene abajo, cuando encuentra un error; escupe un gemido quejumbroso, abandona los procesos dañados, y sigue adelante. Decididamente, esto no era ası́ en las primeras versiones de los sistemas
operativos de Apple y Microsoft, por el sencillo motivo de que
un sistema operativo que no es capaz de andar y mascar chicle
a la vez no puede recobrarse de los errores. Buscar y solucionar errores requiere un proceso aparte que corra en paralelo al
que ha fallado. Una especie de superego, si lo preﬁeren, que
mantiene vigilados a los demás y entra en acción cuando uno
se desvı́a. Ahora que MacOS y Windows pueden hacer más de
una cosa a la vez se les da mucho mejor tratar con los errores
que antes, pero no se aproximan siquiera a Linux o los demás
sistemas Unix en este aspecto; y su mayor complejidad les ha
hecho vulnerables a nuevos tipos de error.

99

Shock de Sistema Operativo

100

Falibilidad, enmienda,
redención, conﬁanza, y otros
arcanos conceptos técnicos
L INUX NO ES CAPAZ DE TENER POL ÍTICAS CENTRALMENTE OR GANIZADAS que dicten cómo escribir mensajes de error y documentación, ası́ que cada programador escribe los suyos propios.
Habitualmente están en inglés, aunque montones de programadores Linux son europeos. Frecuentemente son graciosos. Siempre son honestos. Si ha ocurrido algo malo porque el software
sencillamente todavı́a no está acabado, o porque el usuario fastidió algo, lo dirán con todas las letras. La interfaz de lı́nea de
comandos facilita que los programas escupan pequeños comentarios, advertencias, y mensajes aquı́ y allı́. Incluso si una aplicación está implosionando como un submarino dañado, habitualmente puede seguir lanzando un pequeño mensaje de SOS.
A veces, cuando se deja de trabajar con un programa y se cierra,
uno se encuentra con que ha dejado detrás una serie de advertencias y mensajes de error no muy graves en la ventas de la
interfaz de lı́nea de comandos desde la que se ejecutó. Como si
el software te contara cómo le iba mientras trabajabas con él.
La documentación, en Linux, viene en la forma de páginas
man (abreviatura de manual. Se puede acceder a ellas bien me101

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

diante un GUI (xman) o desde la lı́nea de comandos (man). Esta
es una muestra de la página man de un programa llamado rsh:
Detener señales detener sólo el proceso rsh local; esto es posiblemente
erróneo, pero actualmente bastante difı́cil de solucionar por razones
demasiado complicadas para explicarlas aquı́.

Las páginas man contienen un montón de material parecido,
que suena como las murmuraciones de pilotos pugnando con
los mandos de aviones averiados. La sensación general es la de
miles de monumentales pero oscuras pugnas vistas a la luz paralizante de un estroboscopio. Cada programador está tratando
con sus propios obstáculos y fallos; está demasiado ocupado solucionándolos, y mejorando el software, para explicar las cosas
en detalle o tener elaboradas pretensiones.
En la práctica casi nunca se encuentra un fallo serio en Linux. Cuando se encuentra, es casi siempre en el software comercial (varios vendedores comercializan software que funciona en
Linux). El sistema operativo y sus programas fundamentales de
utilidad son demasiado importantes para contener fallos serios.
Llevo ejecutando Linux cada dı́a desde ﬁnales de 1995 y he visto cómo muchos programas de aplicaciones caı́an pasto de las
llamas, pero nunca he visto que el sistema operativo se venga
abajo. Nunca. Ni una sola vez. Hay unos cuanto sistemas Linux
que llevan meses o años funcionando continuamente y trabajando duro sin necesidad de reiniciarlos.
Los sistemas operativos comerciales tienen que adoptar la
misma postura oﬁcial hacia los errores que tenı́an los paı́ses comunistas frente a la pobreza. Por razones de doctrina, no resultaba posible admitir que la pobreza era un serio problema
en los paı́ses comunistas, porque la idea misma del comunismo
era erradicar la pobreza. Igualmente, las compañı́as de sistemas
operativos comerciales como Apple o Microsoft no pueden ir
por ahı́ admitiendo que su software tiene errores y se cae todo
el rato, no más de lo que Disney puede emitir comunicados de
prensa ﬁrmando que el ratón Mickey es un actor disfrazado.
102

En el principio fue la lı́nea de comandos

Esto es un problema, porque los errores existen y suceden.
Cada pocos meses Bill Gates trata de hacer una demostración
de un nuevo producto de Microsoft ante un gran público sólo
para que le reviente en las narices. Los distribuidores de sistemas operativos comerciales, como consecuencia directa de ser
comerciales, se ven forzados a adoptar la posición groseramente tosca de que los errores son raras aberraciones, habitualmente la culpa de otro, y por tanto no merece la pena hablar de ello
en detalle. Esta postura, que todo el mundo sabe que es absurda, no se limita a comunicados de prensa y campañas publicitarias. Constituye el modo mismo en que estas compañı́as hacen
negocios y se relacionan con sus clientes. Si la documentación
estuviera bien escrita, mencionarı́a fallos, errores y caı́das del
sistema en cada página. Si los sistemas de ayuda en lı́nea que
vienen con estos sistemas operativos reﬂejaran la experiencia y
preocupaciones de sus usuarios, estarı́an dedicados básicamente a instrucciones acerca de cómo tratar con los fallos y errores
del sistema.
Pero esto no sucede. Las compañı́as de accionistas son maravillosos inventos que nos han dado muchos excelentes bienes
y servicios. Se les dan bien muchas cosas. Admitir el fracaso no
es una de ellas. Diablos, ni siquiera admiten fallos menores.
Por supuesto, este comportamiento no es tan patológico en
una compañı́a como lo serı́a en un ser humano. La mayorı́a de
la gente hoy en dı́a entiende que los comunicados de prensa
de las empresas se lanzan para quedar bien con los accionistas
de la compañı́a, no para ilustrar al público. A veces los resultados de esta deshonestidad institucional pueden ser espantosos,
como en el caso del tabaco y del amianto. En el caso de los distribuidores de sistemas operativos comerciales no es nada ası́,
por supuesto; solamente es irritante.
Algunos podrı́an argüir que la irritación de los consumidores, con el tiempo, se convierte en una especie de placa endurecida que puede ocultar un serio deterioro, y que la honestidad
podrı́a ser ası́ la mejor polı́tica a largo plazo; el jurado aún tiene
103

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

que decidir acerca de esto en el mercado de los sistemas operativos. El negocio se está expandiendo lo bastante rápido como
para que siga siendo mucho mejor tener miles de millones de
clientes crónicamente irritados que millones de clientes contentos.
La mayorı́a de administradores de sistemas que conozco que
trabajan siempre con Windows NT están de acuerdo en que
cuando tiene un fallo hay que reiniciarlo, y cuando se fastidia
en serio el único modo de arreglarlo es reinstalar el sistema operativo desde el principio. O al menos éste es el único modo que
conocen de arreglarlo, lo cual viene a ser lo mismo. Es muy posible que los ingenieros de Microsoft tengan un montón de información privilegiada sobre cómo arreglar el sistema cuando va
mal, pero si lo tienen, no parecen estar transmitiendo el mensaje
a ninguno de los administradores de sistema que yo conozca.
Debido a que Linux no es comercial —porque es, de hecho, gratuito, ası́ como bastante difı́cil de obtener, instalar, y
operar—1 no tiene que mantener ninguna pretensión acerca de
su ﬁabilidad. En consecuencia, es mucho más ﬁable. Cuando
algo falla en Linux, el error es detectado y discutido vivamente
de inmediato. Cualquiera con los conocimientos técnicos necesarios puede ir derecho al código fuente y señalar el origen del
error, que es rápidamente solucionado por el hacker que fuera
responsable de ese programa en particular.
Por lo que yo sé, Debian es la única distribución de Linux
que tiene su propia constitución2 , pero lo que realmente me convenció fue su impresionante base de datos de errores3 , que es
una especie de Archivo de Indias interactivo del error, la falibilidad y la redención. Es la simplicidad misma. Cuando tuve un
problema con Debian a principios de enero de 1997, mandé un
1 No olvidemos que este ensayo se escribió a principios de 1999: desde entonces se han dedicado grandes esfuerzos a distribuir y facilitar la instalación
de cualquier sistema GNU/Linux y hoy dı́a su diﬁcultad de instalación y de uso
no es superior al de cualquier otro sistema operativo doméstico. (N. del E.)
2 http://www.debian.org/devel/constitution
3 http://www.debian.org/Bugs

104

En el principio fue la lı́nea de comandos

mensaje describiendo el problema a submit@bugs.debian.org.
De inmediato, a mi problema se le asignó un número de informe de fallo (#6518) y un nivel de gravedad (las opciones disponibles eran crı́tico, grave, importante, normal, arreglado, y lista
de deseos) y se reenvió a las listas de correo por las que merodea la gente de Debian. En veinticuatro horas habı́a recibido
cinco emails que me decı́an cómo solucionar el problema: dos
de Norteamérica, dos de Europa, y uno de Australia. Todos estos emails me daban la misma sugerencia, que funcionó, e hizo
que mi problema se desvaneciera. Pero al mismo tiempo se envió una transcripción de este intercambio a la base de datos de
fallos de Debian, de tal modo que si otros usuarios tenı́an el mismo problema más adelante, podrı́an buscar y hallar la solución
sin tener que realizar un nuevo y redundante informe de fallo.
Compárese esto con la experiencia que tuve cuando traté de
instalar Windows NT 4.0 en el mismo ordenador cerca de diez
meses después, a ﬁnales de 1997. El programa de instalación
sencillamente se detuvo a mitad del proceso sin emitir ningún
mensaje de error. Fue al sitio web de Microsoft y traté de buscar
documentos de ayuda que abordasen mi problema. El motor de
búsqueda no funcionaba en absoluto; no hizo nada. Ni siquiera
me dio un mensaje que me dijera que no funcionaba.
Al ﬁnal decidı́ que mi placa madre debı́a de ser defectuosa;
era una marca y modelo ligeramente inusuales, y NT no soportaba tantas placas madres como Linux. Siempre ando buscando excusas, por muy endebles que sean, para comprar nuevo
hardware, ası́ que compré una nueva placa madre compatible
con Windows NT, lo cual querı́a decir que llevaba el logotipo
de Windows NT impreso en la caja. La instalé en mi ordenador, inicié Linux, y traté de instalar Windows NT de nuevo. De
nuevo, la instalación falló sin ningún mensaje de error y ninguna explicación. Para entonces ya habı́an transcurrido un par de
semanas y pensé que tal vez el motor de búsqueda en el sitio
web de Microsoft estarı́a funcionando. Lo intenté, pero seguı́a
sin funcionar.
105

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

Ası́ que creé una nueva cuenta de ayuda Microsoft, e informé del incidente. Di el número de ID de mi producto cuando
me lo pidieron, y empecé a seguir las instrucciones en una serie
de pantallas de ayuda. En otras palabras, estaba enviando un
informe de fallo igual que en el sistema Debian. Solamente que
la interfaz era más elegante —yo escribı́a mi queja en pequeños
cuadros de edición de texto en formularios web, haciéndolo todo a través del GUI, mientras que con Debian se envı́a un telegrama en forma de email—. Sabı́a que cuando terminara de enviar el informe de fallo, se convertirı́a en propiedad intelectual
de Microsoft, y otros usuarios no podrı́an verlo. Muchos usuarios de Linux se negarı́an a participar en tal proceso por motivos
éticos, pero yo quise probar como experimento. Sin embargo, ﬁnalmente nunca pude enviar mi informe de fallo, porque la serie
de páginas web enlazadas que estaba rellenando acabó por llevarme a una página completamente en blanco: un callejón sin
salida.
Ası́ que volvı́ atrás, hice click en los botones de ayuda telefónica, y acabaron por darme un número de teléfono de Microsoft. Cuando marqué este número, me respondió una serie
de pitidos punzantes y un mensaje grabado de la compañı́a de
teléfonos que decı́a Lo sentimos, el número que ha marcado no
existe.
Probé de nuevo con la página de búsqueda - seguı́a sin funcionar. Luego probé PPI (Pago Por Incidencia) de nuevo. Esto
me llevó a otra serie de páginas web hasta que acabé en una
que decı́a: ((Atención - no hay ninguna página web que corresponda a su petición.))
Probé de nuevo, y acabé llegando una pantalla de Pago Por
Incidencia que decı́a: ((N O HAY INCIDENCIAS . No hay ninguna
incidencia sin usar en su cuenta. Si desea adquirir una incidencia de ayuda, haga clic en OK – entonces podrá pagar por anticipado por una incidencia...)) El precio por incidencia era de 95
dólares.
El experimento empezaba a resultar bastante caro, ası́ que
106

En el principio fue la lı́nea de comandos

renuncié a abordarlo desde el PPI y decidı́ intentarlo con las
preguntas frecuentes en el sitio web de Microsoft. Ninguna de
las preguntas habituales disponibles tenı́a nada que ver con mi
problema, salvo una titulada ((Tengo problemas al instalar NT)),
que parecı́a haber sido escrita por publicistas, no por ingenieros.
Ası́ que me rendı́, y hasta el dı́a de hoy no he instalado Windows NT en ese ordenador. Para mı́, el camino de menor resistencia era simplemente usar Debian GNU/Linux.
En el mundo del software de fuente abierta, los informes de
fallo son una información útil. Hacerlos públicos es un servicio
para los demás usuarios, y mejora el sistema operativo. Hacerlos públicos sistemáticamente es tan importante que personas
altamente inteligentes invierten tiempo y dinero en mantener
bases de datos de fallos. En el mundo de los sistemas operativos
comerciales, sin embargo, informar de un fallo es un privilegio
por el que hay que pagar mucho dinero. Pero si lo pagas, resulta que el informe de fallo debe ser conﬁdencial - ¡de otro modo,
cualquiera puede beneﬁciarse de tus noventa y cinco pavos! Y
sin embargo, nada impide a los usuarios de NT de montar su
propia base de datos de fallos pública.
Este es, en otras palabras, otro rasgo del mercado de sistemas operativos que sencillamente carece de sentido a menos que se examine en su contexto cultural. Lo que Microsoft
está vendiendo a través del Pago Por Incidente no es tanto un
apoyo técnico como la ilusión continuada de que sus clientes
están llevando a cabo una especie de transacción racional de negocios. Es una especie de tasa rutinaria de mantenimiento para
sostener la fantası́a. Si la gente quisiera realmente un sistema
operativo sólido, usarı́an Linux, y si realmente quisieran apoyo técnico encontrarı́an un modo de obtenerlo; los clientes de
Microsoft quieren otra cosa.
En el momento en que escribo esto (enero de 1999), la base
de datos de Debian Linux contiene cerca de 32.000 fallos. Casi
todos fueron solucionados hace mucho tiempo. Hay doce fallos
crı́ticos todavı́a en pie, el más antiguo de los cuales fue enviado
107

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

hace 79 dı́as. Hay 20 fallos graves en pie, el más antiguo de los
cuales tiene 1166 dı́as. Hay 48 fallos importantes y cientos de
fallos normales y menos importantes.
Igualmente, BeOS (al que llegaré en un momento) tiene su
propia base de datos de errores4 con su propio sistema de clasiﬁcación, incluyendo tales categorı́as como No Es Un Fallo, Caracterı́stica Reconocida, y No Se Puede Arreglar. Algunos de
estos fallos no son nada más que hackers de Be desfogándose, y
se clasiﬁcan como Input Reconocido. Por ejemplo, encontré uno
que se envı́o el 30 de diciembre de 1998. Está en mitad de una
larga lista de fallos, entre uno llamado El ratón funciona de modo muy raro y otro llamado El cambio de marco BView no afecta
si BView no va unida a una BWindow.
Éste se titula R4: A BeOS le falta una cabeza de turco
megalómana para centrar y mantener bajo control la furia del
programador

y dice lo siguiente:
Be Status: Input Reconocido BeOS Versión: R3.2 Componente: desconocido

Descripción Completa:
El BeOS necesita un megalómano egomanı́aco sentado en su trono para darle
un personaje humano que a todo el mundo le encante odiar. Sin esto, el
BeOS languidecerá en el ámbito impersonificable de los sistemas
operativos que la gente nunca consigue manejar. Se puede juzgar el éxito
de un sistema operativo no por la calidad de sus caracterı́sticas, sino
por lo infames y detestados que son sus lı́deres.

Creo que esto es un efecto colateral de la camaraderı́a entre
programadores en condiciones penosas. Después de todo, a la desdicha le
encanta la compañı́a. Creo que hacer que el BeOS sea menos accesible
conceptualmente y mucho menos fiable requerirá que los programadores se
unan, desarrollando el tipo de comunidad en la que los extraños se
hablan, algo ası́ como en un supermercado antes de una enorme tormenta de
nieve.
Siguiendo el mismo programa, probablemente resulte necesario desplazar
el cuartel general del BeOS a un clima mucho menos agradable. El
incómodo ambiente general generará esta actitud, y verdaderamente no
hay mejor receta para el éxito. Yo sugerirı́a Seattle, pero creo que ya
está ocupado. Podrı́a intentarse Washington DC, pero definitivamente no
un sitio como San Diego o Tucson.
4 http://www.be.com/developers/bugs/index.html

108

En el principio fue la lı́nea de comandos

Por desgracia, el sistema de informes de fallo de Be elimina
los nombres de las personas que informan de los fallos (¿para
protegerles de la venganza?), ası́ que no sé quién escribió esto.
Ası́ que pareciera que estoy pregonando la superioridad
técnica y moral de Debian GNU/Linux. Pero como casi siempre
sucede en el mundo de los sistemas operativos, es más complicado. Tengo Windows NT instalado en otro ordenador, y el
otro dı́a (enero de 1999), cuando tuve un problema con él, decidı́ probar con la ayuda técnica de Microsoft otra vez. Esta vez
el motor de búsqueda sı́ que funcionaba (aunque para llegar a
él tuve que identiﬁcarme como avanzado). Y en vez de hacerme
unas inútiles preguntas habituales, localizó cerca de doscientos
documentos (yo estaba usando unos criterios de búsqueda muy
vagos) que eran obviamente informes de fallos —aunque se llamaban de otro modo—. Microsoft, en otras palabras, tiene montado un sistema que es funcionalmente equivalente a la base de
datos de fallos de Debian. Tiene un aspecto diferente, claro, pero
contiene datos técnicos y no disimula la existencia de errores.
Como he explicado, vender sistemas operativos por dinero es una posición bastante insostenible, y el único modo en
que Apple y Microsoft lo consiguen es llevando los avances tecnológicos adelante lo más agresivamente que pueden, y haciendo que la gente crea en, y pague por, una imagen particular: en
el caso de Apple, la de un librepensador creativo, y en el caso
de Microsoft la del respetable tecnoburgués. Igual que la Disney, están haciendo dinero vendiendo una interfaz, un espejo
mágico. Tiene que estar pulido y perfecto o toda la ilusión se
arruinará y el plan de negocios se desvanecerá como un espejismo.
En consecuencia, hasta hace poco la gente que escribı́a manuales y creaba sitios web de apoyo técnico al cliente para sistemas operativos comerciales se veı́a impedida, por los departamentos legales o de Relaciones Públicas de sus empresas, en
admitir, aunque fuera indirectamente, que el software podrı́a
109

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

contener fallos o que la interfaz podrı́a sufrir el problema del
doce parpadeante. No podı́an tratar las diﬁcultades reales de
los usuarios. Los manuales y sitios web eran por tanto inútiles,
y hacı́an que incluso los usuarios seguros de sı́ mismos en el terreno técnico se preguntaran si se estaban volviendo sutilmente
locos.
Cuando Apple tiene este tipo de comportamiento corporativo, uno quiere creer que realmente lo hacen lo mejor que pueden. Todos queremos darle a Apple el beneﬁcio de la duda, porque el malvado Bill Gates les hizo morder el polvo, y porque
tienen unas buenas Relaciones Públicas. Pero cuando lo hace
Microsoft, uno casi no puede evitar convertirse en un paranoico
de las conspiraciones. ¡Obviamente nos están ocultando algo! ¡Y
además son tan poderosos! ¡Están tratando de volvernos locos!
Este modo de tratar con los clientes está tomado directamente del totalitarismo centroeuropeo de mediados del siglo XX. A
uno le vienen los adjetivos kafkiano y orwelliano a la mente. No
podı́a durar, no más que el Muro de Berlı́n, ası́ que ahora Microsoft tiene un base de datos de fallos públicamente disponible. Se
llama de otro modo, y lleva un rato encontrarla, pero está ahı́.
En otras palabras, se han adaptado a la estructura de dos niveles eloi / morlock de la sociedad tecnológica. Si eres un eloi
instalas Windows, sigues las instrucciones, esperas que todo vaya bien y sufres mudamente cuando se rompe. Si eres un morlock vas al sitio web, le dices que eres avanzado, encuentras la
base datos de fallos, y obtienes la verdad directamente de algún
anónimo ingeniero de Microsoft.
Pero una vez que Microsoft ha dado este paso, surge la cuestión, de nuevo, de si tiene algún sentido estar en el negocio de
los sistemas operativos en absoluto. Los clientes pueden estar
dispuestos a pagar 95 dólares por informar a Microsoft de un
problema si, a cambio, les dan un consejo que ningún otro usuario va a obtener. Esto tiene el útil efecto secundario de mantener
a los usuarios mutuamente alienados, lo cual contribuye a mantener la ilusión de que los fallos son raras aberraciones. Pero una
110

En el principio fue la lı́nea de comandos

vez que los resultados de esos informes de fallo están abiertamente disponibles en el sitio web de Microsoft, todo cambia.
Nadie va a soltar 95 dólares por informar de un problema cuando lo más probable es que algún otro tipo ya lo haya hecho,
y las instrucciones para solucionar el fallo aparezcan de forma
gratuita en un sitio web público. Y a medida que crece el tamaño de la base de datos de fallos, acaba convirtiéndose en una
clara admisión, por parte de Microsoft, que sus sistemas operativos tienen tantos fallos como los de sus competidores. Eso no
es ninguna vergüenza; como mencioné, la base de datos de fallos de Debian contiene 32.000 informes hasta ahora. Pero pone
a Microsoft al mismo nivel que los demás y hace mucho más
difı́cil que sus clientes —que quieren creer— crean.

111

Falibilidad, enmienda, redención, conﬁanza, y otros arcanos conceptos técnicos

112

Memento Mori
U NA VEZ QUE LA M ÁQUINA L INUX HA TERMINADO de escupir su telegrama de inicio en jerga, me insta a que introduzca un nombre de usuario y una contraseña. En este momento
la máquina todavı́a está ejecutando la interfaz de lı́nea de comandos, con letras blancas sobre fondo negro. No hay ventanas,
menús, ni botones. No responde al ratón; ni siquiera sabe que
el ratón está ahı́. En este punto, sin embargo, ya es posible ejecutar un montón de software. Emacs, por ejemplo, existe tanto
en versión de interfaz de lı́nea de comandos como de GUI (de
hecho, hay dos versiones GUI, que reﬂejan una especie de cisma doctrinal entre Richard Stallman y algunos hackers que se
hartaron de él). Lo mismo puede decirse de muchos otros programas Unix. Muchos no tienen siquiera un GUI, y muchos de
los que lo tienen pueden ejecutarse desde la lı́nea de comandos.
Por supuesto, dado que mi ordenador sólo tiene una pantalla, sólo puedo ver una lı́nea de comandos, ası́ que puede que
crean que sólo puedo interactuar con un programa cada vez.
Pero si mantengo apretada la tecla Alt y luego pulso el botón de
función F2 en lo alto de mi teclado, aparece otra pantalla negra
vacı́a que me pide que dé mi nombre de usuario y contraseña.
Puedo entrar e iniciar otro programa, luego pulsar Alt-F1 y regresar a la primera pantalla, que sigue haciendo lo que quiera
que estuviera haciendo cuando la dejé. O puedo pulsar Alt-F3
113

Memento Mori

y entrar en otra pantalla, y una cuarta, y una quinta. En una
de estas pantallas puedo entrar como yo mismo, en otra como
root (el administrador del sistema), y en otra puedo entrar en un
ordenador distinto a través de Internet.
Cada una de estas pantallas se llama, en jerga Unix, un tty,
que es la abreviatura de teletipo. Ası́ que cuando uso mi sistema Unix de este modo regreso a esa pequeña habitación en el
Instituto de Ames donde escribı́ mi primer código hace veinticinco años, excepto que el tty es más silencioso y rápido que un
teletipo, y es capaz de ejecutar un software incomparablemente superior, tal como emacs o las herramientas de desarrollo de
GNU .
Resulta fácil (fácil para el estándar de Unix, no el de Apple/Microsoft) conﬁgurar un ordenador Unix de tal modo que
vaya directamente a un GUI cuando lo inicies. De este modo,
nunca se ve una pantalla tty. Yo todavı́a hago que el mı́o inicie
en este pantalla de teletipo, blanco sobre negro, como un memento mori computacional. Solı́a estar de moda que los escritores tuvieran un cráneo humano sobre su escritorio como recordatorio de su mortalidad, de que todo era vanidad. La pantalla
tty me recuerda que lo mismo sucede con las elegantes interfaces de usuario.
El X Window System, que es el GUI de Unix, ha de ser capaz de ejecutarse en cientos de tarjetas de vı́deo diferentes con
diferentes chips, memoria y buses de placa madre. Igualmente,
hay cientos de tipos distintos de monitores en el mercado nuevo
y usado, cada uno con diferentes especiﬁcaciones, ası́ que probablemente haya más de un millón de combinaciones posibles
de tarjeta y monitor. Lo único que todas tienen en común es que
funcionan en modo VGA, que es la vieja pantalla de lı́nea de comandos que se ve durante unos pocos segundos al iniciar Windows. Ası́ que Linux siempre inicia en VGA, con una interfaz
de teletipo, porque al principio no tiene ni idea de qué tipo de
hardware está conectado al ordenador. Para ir más allá del teletipo hasta el GUI, hay que decirle a Linux exactamente qué tipo
114

En el principio fue la lı́nea de comandos

hardware hay. Si te equivocas, obtendrás una pantalla en blanco
en el mejor de los casos, y en el peor, podrı́as destruir de hecho
el monitor enviándole señales que no puede manejar.
Cuando empecé a usar Linux, esto habı́a que hacerlo a mano. Una vez me pasé casi un mes tratando de hacer que un
monitor rebelde funcionara, y llené la mayor parte de un cuaderno con notas garabateadas cada vez más desesperadas. Hoy
en dı́a, la mayor parte de las distribuciones Linux incluyen un
programa que automáticamente examina y conﬁgura el sistema, ası́ que instalar X Window es casi tan fácil como instalar un
GUI de Apple/Microsoft. La información crucial va a un archivo
(un archivo de texto ASCII, naturalmente) llamado XF86Conﬁg,
al que merece la pena echar un vistazo incluso aunque la distribución lo cree automáticamente. Para la mayor parte de la gente
parece una serie de ensalmos crı́pticos sin sentido — y esa era
la idea de mirarlo. Un sistema Apple/Microsoft tiene que tener
la misma información para lanzar su GUI, pero posiblemente
está escondida en las profundidades, o probablemente esté en
un archivo que ni siquiera puede abrir y leer un editor de textos. Todos los archivos importante que hacen que los sistemas
Linux funcionen están a la vista. Siempre son archivos de texto
ASCII , ası́ que no hace falta herramientas especiales para leerlos. Se pueden mirar siempre que se quiera, lo cual es bueno, y
se puede enredar con ellos y volver el sistema completamente
disfuncional, lo cual ya no es tan bueno.
En cualquier caso, asumiendo que mi archivo XF86Conﬁg
esté tal cual, introduzco el comando startx para iniciar X Window System. La pantalla queda en blanco durante un minuto, el
monitor emite extraños ruidos chirriantes, luego se reconstituye
como un escritorio gris en blanco con un cursos de ratón en el
medio. Al mismo tiempo inicia el gestor de ventanas. X Window
es software de bastante bajo nivel; proporciona la infrastructura
para un GUI, y es una infrastrucutra pesada e industrial. Pero
no trabaja con ventanas. Eso lo maneja otra categorı́a de la aplicación colocada encima de X Window, llamada gestor de ven115

Memento Mori

tanas. Hay varios disponibles, todos gratuitos, por supuesto. El
clásico es Tom’s Window Manager (twm, el ((Gestor de Ventanas
de Tom))) pero hay una variante más pequeña y supuestamente más eﬁciente llamada fvwm, que es la que yo uso. Le tengo
el ojo echado a un gestor de ventanas completamente diferente
llamado Enlightenment, que puede ser el producto tecnológico
más elegante que haya visto nunca, puesto que a) es para Linux, b) es gratuito, c) está siendo desarrollado por un número
muy pequeño de hackers obsesos, y d) tiene un aspecto asombrosamente estiloso; es el tipo de gestor de ventanas que podrı́a
aparecer en el trasfondo de una pelı́cula de Alien.
En cualquier caso, el gestor de ventanas funciona como un
intermediario entre X Windows y el software que se esté usando. Dibuja los bordes de las ventanas, los menús, y demás,
mientras las aplicaciones dibujan el contenido de las ventanas.
Las aplicaciones pueden ser de cualquier tipo: editores de texto,
navegadores web, paquetes gráﬁcos, o utilidades como un reloj
o una calculadora. En otras palabras, a partir de este punto, da
la sensación de haber pasado a un universo paralelo bastante
parecido al familiar universo de Apple o Microsoft, pero ligera y ubicuiamente diferente. El principal programa gráﬁco en
Apple/Microsoft es Adobe Photoshop, pero en Linux es algo
llamado GIMP. En vez de Microsoft Ofﬁce, se puede comprar
algo llamado ApplixWare. Hay muchos paquetes de software
comercial, tales como Mathematica, Netscape Communicator y
Adobe Acrobat, disponibles en versión Linux, y según cómo se
conﬁgure el gestor de ventanas se puede hacer que tengan el
mismo aspecto y se comporten igual que lo harı́an en MacOS o
Windows.
Pero hay un tipo de ventana que verán en Linux GUI que es
raro o inexistente en otros sistemas operativos. Estas ventanas
se llaman xterm y no contienen nada más que lı́neas de texto
—esta vez, texto negro sobre fondo blanco, aunque se pueden
cambiar los colores. Cada ventana xterm es una interfaz de lı́nea
de comandos en sı́ misma - un tty en una ventana. Ası́ que in116

En el principio fue la lı́nea de comandos

cluso cuando se está en pleno modo GUI, se puede seguir hablando con el ordenador Linux a través de una interfaz de lı́nea
de comandos.
Hay mucho buen software de Unix que no tiene GUIs en absoluto. Esto puede deberse al hecho de que se desarrolló antes
de que X Window estuviera disponible, o porque las personas
que lo escribieron no querı́an sufrir todo el agobio de crear un
GUI , o sencillamente porque no lo necesitaban. En cualquier caso, esos programas pueden invocarse introduciendo sus nombres en la lı́nea de comandos de una ventana xterm. El comando
whoami, mencionado antes, es un buen ejemplo. Hay otro llamado wc (word count, recuento de palabras) que sencillamente
devuelve el número de lı́neas, palabras y caracteres en un archivo de texto.
La capacidad de ejecutar este programitas de utilidades en
la lı́nea de comandos es una gran virtud de Unix, y una que es
improbable que dupliquen los sistemas operativos de GUI puro. El comando wc, por ejemplo, es el tipo de cosa que resulta
fácil de escribir con una interfaz de lı́nea de comandos. Probablemente no consiste más que de una pocas lı́neas de código, y
un programador listo probablemente podrı́a escribirlo en una
sola lı́nea. En forma compilada sólo ocupa unos pocos bytes de
espacio de disco. Pero el código requerido para darle una interfaz gráﬁca de usuario a ese programa probablemente tendrı́a
cientos o incluso miles de lı́neas, dependiendo del capricho del
programador. Compilado en un software ejecutable, tendrı́a un
montón de código GUI. Serı́a lento de iniciar y ocuparı́a un
montón de memoria. Este esfuerzo sencillamente no valdrı́a la
pena, ası́ que wc nunca se escribirı́a como un programa independiente. Los usuarios tendrı́an que esperar a que el recuento
de palabras viniera incluido en un paquete de software comercial.
Los GUIs tienden a imponer un montón de código superﬂuo
al software, incluso al más pequeño, y este plus cambia completamente el entorno de programación. Las pequeñas utilidades
117

Memento Mori

ya no merecen la pena escribirse. Esta funciones tienden a ser
aglutinadas en paquetes más amplios de software. A medida
que los GUIs se vuelven más complejos, e imponen más y más
código superﬂuo, esta tendencia se vuelve omnipresente, y los
paquetes de software se hacen cada vez más colosales; a partir
de cierto punto empiezan a fusionarse, como Microsoft Word y
Excel y PowerPoint se fundieron en Microsoft Ofﬁce: un enorme Corte Inglés de software al borde de una ciudad llenas de
tiendecitas en quiebra.
Es una analogı́a injusta, porque cuando una tiendecita quiebra signiﬁca que un tendero ha cerrado el negocio. Por supuesto, nada de eso ocurre cuando wc queda subsumido en uno de
los incontables elementos del menú de Microsoft Word. El único
inconveniente real es la pérdida de ﬂexibilidad para el usuario,
pero es una pérdida que la mayorı́a de clientes obviamente no
nota o no les importa. EL inconveniente más serio del enfoque
Corte Inglés es que la mayorı́a de usuarios sólo quieren o necesitan una pequeña parte de lo que contienen estos gigantescos paquetes de software. El resto es basura, peso muerto. Y sin
embargo, el usuario en el cubı́culo de al lado tendrá opiniones
completamente distintas acerca de qué es útil y qué no lo es.
La otra cosa importante que hay que mencionar aquı́ es que
Microsoft ha incluido una caracterı́stica verdaderamente elegante en el paquete Ofﬁce: un paquete de programación en
Basic. Basic es el primer lenguaje de ordenador que aprendı́,
allá cuando usaba la cinta de papel y el teletipo. Usando la versión de Basic que viene incluida en Ofﬁce uno puede escribir
sus propias utilidades que saben cómo interactuar con todos
los enredos, mariconaditas, lacitos y pompones de Ofﬁce. Basic
es más fácil de usar que los lenguajes usados habitualmente en
la programación Unix de lı́nea de comandos, y Ofﬁce ha llegado a muchas, muchas más personas que las herramientas GNU.
Ası́ que es bastante posible que esta caracterı́stica de Ofﬁce acabe por engendrar mucho más hacking que GNU.
Pero ahora estoy hablando del software de aplicaciones, no
118

En el principio fue la lı́nea de comandos

de sistemas operativos. Y como he dicho, el software de aplicaciones de Microsoft tiende a ser muy bueno. Yo no lo uso mucho, porque no entro dentro de su mercado diana. Si Microsoft
saca alguna vez un paquete de software que yo use y me guste,
entonces será el momento de que se deshagan del stock, porque
yo soy un segmento de mercado de una persona.

119

Memento Mori

120

La fatiga del nerd
E N LOS A ÑOS QUE LLEVO TRABAJANDO CON L INUX he llenado
tres cuadernos y medio registrando mis experiencias. Sólo empiezo a escribir cosas cuando estoy haciendo algo complicado,
como instalar X Windows o enredar con mi conexión de Internet, ası́ que estos cuadernos sólo contienen el registro de mis
luchas y frustraciones. Cuando las cosas me salen bien, trabajo
feliz y contento durante muchos meses sin anotar nada. Ası́ que
estos cuadernos son una lectura bastante lúgubre. Cambiar nada en Linux es cuestión de abrir varios de esos pequeños archivos ASCII y cambiar una palabra aquı́ y un carácter allı́, de
modos que resultan extremadamente signiﬁcativos para el funcionamiento del sistema.
Muchos de los archivos que controlan el funcionamiento de
Linux no son nada más que lı́neas de comando que se volvieron tan largas y complicadas que ni siquiera los hackers de Linux podrı́an escribirlas correctamente. Cuando se trabaja con
algo tan potente como Linux, fácilmente se puede dedicar toda una media hora a escribir una sola lı́nea de comando. Por
ejemplo, el comando find, que buscar en todo el sistema archivos que cumplan ciertos criterios, es fantásticamente potente y general. Su man tiene once páginas, y son páginas concisas;
podrı́an expandirse a todo un libro. Además, como si eso no
fuera lo bastante complicado por sı́ mismo, siempre se puede
121

La fatiga del nerd

llevar el output de un comando Unix al input de otro igualmente complicado. El comando pon, que se usa para activar una
conexión PPP con Internet, requiere tanta información detallada que básicamente resulta imposible lanzarlo todo desde l! a
lı́nea de comandos. Por el contrario, se abstraen grandes pedazos de su input a tres o cuatro archivos distintos. Hace falta un
script de marcación, que de hecho es un programita que le dice
cómo marcar el teléfono y responder a diversos sucesos; un archivo de opciones, que lista cerca de sesenta opciones diferentes
sobre cómo instalar la conexión PPP; y un archivo de secretos,
que te da información sobre tu contraseña.
Presumiblemente hay hackers cuasidivinos de Unix en
algún lugar del mundo que no tienen por qué usar estos pequeños guiones y archivos de opciones como muleta, y que
sencillamente pueden sacar lı́neas de comando fantásticamente
complejas sin cometer errores tipográﬁcos y sin tener que pasarse horas hojeando la documentación. Pero yo no soy uno de
ellos. Como casi todos los usuarios de Linux, dependo de miles
de pequeños archivos de texto ASCII que ocultan todos esos detalles, y que a su vez están metidos en recovecos del sistema de
archivos de Unix. Cuando quiero cambiar algo acerca del modo en que funciona mi sistema, edito esos archivos. Sé que si
no sigo la pista de cada pequeño cambio que he realizado, no
podré hacer que el sistema funcion tras haber enredado con él.
Mantener registros escritos a mano es tedioso, por no decir algo
anacrónico. Pero es necesario.
Probablemente me habrı́a ahorrado un montón de dolores
de cabeza trabajando con una compañı́a llamada Cygnus Support, que existe para proporcionar ayuda a los usuarios de software libre. Pero no lo hice, porque querı́a ver si podı́a hacerlo yo
solo. La respuesta resultó ser que sı́, pero por los pelos. Y hay
muchos retoques y optimizaciones que probablemente podrı́a
hacer a mi sistema que nunca he llegado a probar, en parte porque algunos dı́as me canso de ser un morlock, y en parte porque
me da miedo estropear un sistema que en general funciona bien.
122

En el principio fue la lı́nea de comandos

Aunque Linux me vale a mı́ y a muchos otros usuarios, su
potencia y generalidad son su talón de Aquiles. Si uno sabe lo
que está haciendo, puede comprar un PC barato de cualquier
tienda de ordenadores, tirar los discos de Windows que lleva
incluidos, y convertirlo en un sistema Linux de desconcertante
complejidad y potencia. Puede enchufarlo a otros doce ordenadores Linux y convertirlo en parte de un ordenador paralelo.
Puede conﬁgurarlo de tal modo que cien personas diferentes
puedan entrar en él a través de Internet, por vı́a de otras tantas
lı́neas de módem, tarjetas Ethernet, sockets TCP / IP, y enlaces de
paquetes de radio. Puede unirlo a media docena de monitores
diferentes y jugar a D OOM con alguien en Australia mientras sigue a satélites de comunicaciones en órbita y controla las luces
y termostatos de casa y la grabación en directo de su webcam y
navegar en Internet y diseñar circuitos en las demás pantallas.
Pero la potencia y complejidad del sistema —las cualidades que
lo hacen tan enormemente superior en el aspecto técnico a los
demás sistemas operativos— a veces hacen que parezca demasiado formidable para el uso cotidiano.
A veces, en otras palabras, sólo quiero ir a Disneylandia.
Mi sistema operativo ideal serı́a uno que tuviera un GUI bien
diseñado que resultase fácil de instalar y usar, pero que incluyera ventanas de terminal desde las que pudiera regresar a la
interfaz de lı́nea de comandos, y ejecutar software GNU, cuando
tuviera que hacerlo. Hace unos pocos años, Be Inc. inventó exactamente ese sistema operativo. Se llama el BeOS.

123

La fatiga del nerd

124

Etre
M UCHAS PERSONAS EN EL NEGOCIO DE LOS ORDENADORES lo
han pasado mal para vérselas con Be, Incorporated, por el simple motivo de que no parece tener ningún sentido. Se fundó a
ﬁnales de 1990, lo cual lo hace más o menos contemporáneo de
Linux. Desde el principio se ha dedicado a crear un nuevo sistema operativo que es, por su diseño, incompatible con todos
los demás (aunque, como veremos, es compatible con Unix en
algunos aspectos muy importantes). Si una deﬁnición de celebridad es alguien que es famoso por ser famoso, entonces Be es
una anticelebridad. Es famoso por no ser famoso; es famoso por
estar condenado. Pero lleva condenado muchı́simo tiempo.
La misión de Be podrı́a tener más sentido para los hackers
que para otra gente. Para explicar la razón tengo que exponer el
concepto de cruft,1 que para los que escriben código es casi tan
aberrante como una repetición innecesaria.
Si han estado en San Francisco habrán visto viejos ediﬁcios
que han sido sometidos a actualizaciones sı́smicas, lo cual frecuentemente signiﬁca que se han erigido grotescas superestructuras de acero moderno alrededor de ediﬁcios construidos, por
1 Cruft no suele traducirse. Tampoco aparece en ningún diccionario de inglés,
aunque sı́ en el Jargon File, que es el archivo oﬁcioso de la jerga hacker: signiﬁca ((excesivo)), ((superﬂuo)), ((basura)), los hackers lo emplean para referirse en
particular al código redundante o sobrante. (N. del E.)

125

Etre

ejemplo, en un estilo clásico. Cuando lleguen nuevas amenazas
—si tenemos otra Era Glacial, por ejemplo —podrán construirse capas adicionales de tecnologı́a todavı́a más alta, a su vez,
alrededor de éstas, hasta que el ediﬁcio original sea como una
reliquia en una catedral —un pedazo de hueso amarillentos incrustado en media tonelada de un bonito amasijo decorativo.
Se pueden tomar medidas análogas para hacer que viejos
sistemas operativos renqueantes sigan funcionando. Se hace todo el tiempo. Remendar un viejo sistema operativo desgastado debiera verse simpliﬁcado por el hecho de que, a diferencia
de los viejos ediﬁcios, los sistemas operativos no tienen ningún
mérito estético o cultural que les haga intrı́nsecamente dignos
de salvarse. Pero en la práctica no funciona ası́. Si trabajan con
un ordenador, probablemente hayan personalizado su escritorio, el entorno en el que se sientan a trabajar cada dı́a, y se han
gastado mucho dinero en software que funciona en ese entorno, y han dedicado mucho tiempo a familiarizarse con el modo
en que todo funciona. Esto lleva mucho tiempo, y el tiempo es
dinero. Como ya mencioné, el deseo de simpliﬁcar las interacciones con las tecnologı́as complejas a través de la interfaz, y de
rodearse de enanitos de jardı́n y ﬁguritas de Lladró virtuales, es
natural y omnipresente - presumiblemente u! na reacción contra
la complejidad y formidable abstracción del mundo informático. Los ordenadores nos dan más opciones de las que realmente
queremos. Preferimos elegir una sola vez, o aceptar la conﬁguración por defecto que nos dan las compañı́as de software, y
dejar las cosas tranquilas. Pero cuando un sistema operativo se
cambia, todo se desmadra.
El usuario medio de ordenador es un anticuario tecnológico al que realmente no le gusta que las cosas cambien. Es un
profesional urbano que acaba de comprarse un precioso chalet
adosado y está poniendo los muebles y la decoración, y reorganizando las alacenas, de tal modo que todo esté bien. Si es necesario que una banda de ingenieros hurguen en el sótano reforzando los cimientos para que puedan soportar la nueva bañera
126

En el principio fue la lı́nea de comandos

de hierro con patas, y metiendo nuevos cables y tuberı́as en las
paredes para instalar electrodomésticos modernos, bueno, que
ası́ sea - los ingenieros son baratos, al menos cuando millones
de usuarios de sistemas operativos se reparten el coste de sus
servicios.
Igualmente, a los usuarios de ordenador les gusta tener el
último Pentium, y poder navegar por la red, sin alterar las cosas
que les hacen sentir como si supieran qué demonios está pasando. A veces esto resulta posible, de hecho. Añadir más RAM al
sistema es un buen ejemplo de una actualización que probablemente no estropee nada.
Por desgracia, muy pocas actualizaciones son ası́ de pulcras
y sencillas. Lawrence Lessig, el en un tiempo Maestro Especial
en el pleito antimonopolio del Ministerio de Justicia contra Microsoft, se quejaba de que habı́a instalado Internet Explorer en
su ordenador, y al hacerlo habı́a perdido todas sus páginas favoritas - su lista personales de señales que usaba para navegar
por el laberinto de Internet. Era como si hubiera comprado un
nuevo juego de llantas para su coche y luego, al marcharse del
taller, descubriera que, debido a algún inescrutable efecto colateral, todas las señales y mapas de carreteras del mundo hubieran sido destruidos. Si es como la mayorı́a de nosotros, habrı́a
gastado un montón de esfuerzo en compilar esa lista de favoritos. Éste es sólo un pequeño ejemplo del tipo de problema que
pueden provocar las actualizaciones. Los sistemas operativos
viejos y desvencijados tienen valor en el sentido básicamente
negativo de que los nuevos nos hacen desear no haber n! acido.
Todos los apaños y remiendos que tienen que hacer los ingenieros para proporcionarnos los beneﬁcios de la nueva tecnologı́a sin forzarnos a pensar en ello, o a cambiar nuestras costumbres, producen un montón de código que, con el tiempo, se
convierte en un gigantesco pegote de chicle, engrudo, hilo de
embalaje, y cinta aislante que rodea a todo sistema operativo.
En la jerga de los hackers, se llama cruft. Un sistema que tiene muchas, muchas capas se describe como crufty, cruftoso. Los
127

Etre

hackers detestan hacer las cosas dos veces, pero cuando ven algo cruftoso, su primer impulso es arrancarlo, tirarlo, y empezar
de nuevo.
Si Mark Twain volviera a San Francisco hoy y estuviera en
uno de estos viejos ediﬁcios sı́smicamente restaurados, le parecerı́a igual, con todas las puertas y ventanas en el mismo sitio pero si saliera a la calle, no lo reconocerı́a. Y - si hubiera vuelto
con su ingenio intacto - podrı́a cuestionar si habı́a merecido tomarse tanta molestia para salvar ese ediﬁcio. En algún momento, hay que hacerse la pregunta: ¿merece la pena, o deberı́amos
derribarlo y levantar uno bueno? ¿Deberı́amos poner otra ola
humana de ingenieros a estabilizar la Torre Inclinada de Pisa, o
deberı́amos sencillamente dejar que la dichosa torre se caiga y
construir una que no esté mal hecha?
Como la restauración de un viejo ediﬁcio, el cruft siempre
parece una buena idea cuando se ponen las primera capas - sólo
es mantenimiento rutinario, una gestión sólida y prudente. Este
resulta especialmente cierto cuando (por ası́ decir) nunca se baja
al sótano, ni se mira detrás del encofrado. Pero cuando eres un
hacker que se pasa todo el tiempo mirando las cosas desde ese
punto de vista, el cruft es fundamentalmente asqueroso, y no
puedes evitar querer sacarlo a golpe de escoplo. O, mejor aún,
sencillamente salir del ediﬁcio - dejar que la Torre Inclinada de
Pisa se caiga - y ponerse a construir una nueva que no se incline.
Durante mucho tiempo, resultaba obvio a Apple, Microsoft,
y sus clientes que la primera generación de sistemas operativos
GUI estaba condenada, y que acabarı́an por ser desechada en favor de sistemas completamente nuevos. A ﬁnales de los ochena
y principios de los noventa, Apple realizó unos pocos esfuerzos
estériles Be, pero en vez de eso adquirieron NeXT, que tiene un
sistema operativo llamado NextStep que es de hecho una variante de Unix. A medida que estos esfuerzos se sucedı́an y fracasaban, uno detrás de otro, los ingenieros de Apple, que eran
de los mejores en la profesión, no dejaban de añadir capas de
cruft. Estaban tratando de convertir la pequeña tostadora en
128

En el principio fue la lı́nea de comandos

una máquina multitareas y apta para Internet, y les salió sorprendentemente bien durante cierto tiempo - algo ası́ como el
héroe de una pelı́cula que cruza un rı́o en la selva saltando sobre
los lomos de los cocodrilos. Pero en el mundo real los cocodrilos
terminan por acaba! rse, o pisas a uno realmente listo.
Hablando de lo cual, Microsoft abordó el mismo problema
de un modo considerablemente más ordenado creando un nuevo sistema operativo llamado Windows NT, que está explı́citamente pensado para ser un competidor directo de Unix. NT
quiere decir New Technology, Nueva Tecnologı́a, lo cual podrı́a
leerse como un rechazo del cruft. Y de hecho NT tiene la reputación de ser mucho menos cruftosos de lo que acabó siendo MacOS; en un momento dado la documentación necesaria
para escribir código en el Mac llenaba algo ası́ como 24 carpetas. Windows 95 era, y Windows 98 es, cruftoso porque tienen
que ser retroactivamente compatibles con los anteriores sistemas operativos de Microsoft. Linux trata con el problema del
cruft del mismo modo en que los esquimales trataban con sus
jubilados: si insistes en usar viejas versiones de software Linux,
antes o después acabarás por encontrarte ﬂotando por el Estrecho de Bering en un iceberg cada vez más pequeño. Pued!
en permitı́rselo porque la mayor parte del software es gratuito,
ası́ que no cuesta nada descargarse versiones actualizadas, y la
mayor parte de los usuarios de Linux son morlocks.
La gran idea detrás de BeOS fue partir de una hoja de papel
en blanco y diseñar un sistema operativo del modo correcto. Y
eso es exactamente lo que hicieron. Esto era obviamente una
buena idea desde el punto de vista estético, pero no es un buen
plan de negocios. Algunas personas que conozco en el mundo GNU/Linux están molestos con Be por haber emprendido
esta aventura quijotesca cuando sus formidables capacidades
podı́an haber contribuido a extender Linux.
De hecho, no tiene ningún sentido hasta que uno recuerda
que el fundador de la compañı́a, Jean-Louis Gassée, es de Francia —un paı́s que durante muchos años mantuvo su propia ver129

Etre

sión separada e independiente de la monarquı́a inglesa en la
corte de St. Germain, con cortesanos, ceremonias de coronación,
religión estatal, y polı́tica exterior—. Ahora, la misma fastidiosa
pero admirable testadurez que nos dio a los jacobinos, la force
de frappe, el Airbus, y las señales de ARRÊT en Québec, nos ha
dado un sistema operativo realmente chulo. ¡Me pedo en vosotros, perros anglosajones!
Crear un sistema operativo completamente a partir de la nada, sencillamente porque ninguno de los existentes era exactamente adecuado, me pareció un acto de tal chulerı́a que me
vi compelido a apoyarlo. Me compré un BeBox en cuanto pude. El BeBox era un ordenador de procesador dual, con chips
de Motorola fabricados especı́ﬁcamente para ejecutar el BeOS;
no podı́a ejecutar ningún otro sistema operativo. Por eso lo
compré. Sentı́ que era un modo de quemar las naves. Su caracterı́stica más distintiva son dos pilotos en el panel frontal que
suben y bajan como tacómetros para dar la sensación de lo duro que está trabajando cada procesador. Me pareció elegante, y
además, calculé que en cuanto la compañı́a quebrara en unos
poco meses, mi BeBox serı́a un valioso objeto de coleccionista.
Han pasado dos años y estoy escribiendo esto en mi BeBox. Los pilotos (Das Blinkenlights, como los llaman en la comunidad Be) parpadean alegremente junto a mi codo derecho
mientras pulso las teclas. Be, Inc. sigue en activo, aunque dejaron de fabricar BeBoxes casi inmediatamente después de que
yo comprara el mı́o. Tomaron la triste pero probablemente bastante acertada decisión de que el hardware era mal negocio, y
se llevaron el BeOS a Macintosh y a clones del Mac. Puesto que
estos usan el mismo tipo de chips Motorola que usaba el BeBox,
no resultó especialmente difı́cil.
Muy poco tiempo después, Apple estranguló a los fabricantes de clones del Mac y restauró su monopolio del hardware.
Ası́ que durante un tiempo Apple fabricó los únicos nuevos ordenadores que podı́an ejecutar BeOS.
A estas alturas Be, como el Hombre Araña con su sentido
130

En el principio fue la lı́nea de comandos

arácnido, habı́a desarrollado un agudo sentido de cuándo iban
a aplastarlo como a un bicho. Incluso aunque no lo hubieran tenido, la idea de depender de Apple - tan frágil y sin embargo
tan letal - para seguir existiendo hubiera espantado a cualquiera. Emprendiendo su propia aventura de salto de cocodrilos,
trasladaron el BeOS a chips de Intel - los mismos chips que usan
los ordenadores de Windows. Y justo en el momento adecuado,
pues cuando Apple lanzó su nuevo hardware, basado en el chip
G3 de Motorola, mantuvieron en secreto los datos técnicos que
los ingenieros de Be habrı́an necesitado para ejecutar el BeOS en
aquellos ordenadores. Esto habrı́a matado a Be como una bala
entre ceja y ceja, de no haber dado ya el salto a Intel.
Ası́ que ahora el BeOS se puede ejecutar en una gama
increı́blemente variada de hardware: BeBoxes, viejos Macs y
huérfanos clones del Mac, y ordenadores Intel para uso con
Windows. Por supuesto estos últimos son ubicuos y sorprendentemente baratos hoy en dı́a, ası́ que pareciera que los problemas de hardware de Be han llegado a su ﬁn. Algunos hackers alemanes incluso han creado un sustituto de Das Blinkenlights: es un circuito que se puede enchufar a máquinas compatibles con PC que ejecuten BeOS. Lleva los pilotos en forma
de tacómetro que habı́an sido una caracterı́stica tan popular del
BeBox.
Mi BeBox ya empieza a estar viejo, como les pasa a todos los
ordenadores cada dos años o ası́, y antes o después tendré que
sustituirlo por un ordenador Intel. Incluso después de eso, sin
embargo, podré seguir usándolo. Porque, inevitablemente, alguien ya ha llevado Linux al BeBox.
En cualquier caso, BeOS tiene un GUI extremadamente bien
pensado construido sobre un marco tecnológico sólido. Se basa
desde el principio en modernos principios del software orientado a objetos. El software del BeOS consiste en entidades cuasiindependientes de software llamadas objetos, que se comunican
enviándose mensajes unas a otras. El sistema operativo mismo
está compuesto de tales objetos, y funciona como una especie
131

Etre

de oﬁcina de correos o Internet a través de la cual se mandan
mensajes de objeto a objeto. El sistema operativo tiene múltiples
hilos, lo cual quiere decir que como todos los demás sistemas
operativos modernos puede caminar y mascar chicle a la vez;
pero les da a los programadores un montón de poder sobre la
generación y eliminación de hilos, o subprocesos independientes. También es un sistema operativo multiprocesador, lo cual
signiﬁca que se le da inherentemente bien ejecutarse en ordenadores con más de una CPU (Linux y Windows NT también
hacen esto con eﬁcacia).
Para este usuario, un punto fuerte de BeOS es su aplicación
Terminal, que permite abrir ventanas equivalente a las ventanas
xterm de Linux. En otras palabras, la interfaz de lı́nea de comandos está disponible si la quieres. Y debido a que BeOS sigue cierto estándar llamado POSIX, puede ejecutar la mayor parte del
software GNU. Es decir, que la inmensa cantidad de software de
lı́nea de comandos desarrollado por los de GNU funciona en una
ventana terminal de BeOS sin problemas. Esto incluye las herramientas de desarrollo de GNU —el compilador y el enlazador—.
E incluye todos los programitas de utilidades. Estoy escribiendo esto usando una especie de moderno editor de texto llamado
Pe, escrito por un holandés llamado Maarten Hekkelman, pero
cuando quiero averiguar cuánto he escrito, paso a una ventana
terminal y ejecuto wc.
Como sugiere el informe de fallo que cité antes, la gente que
trabaja para Be, y los programadores que escriben el código de
BeOS, parecen divertirse más que sus homólogos en otros sistemas operativos. También parecen ser más diversos en general. Hace un par de años fui a una universidad local para asistir a la conferencia de unos representante de Be. Fui porque
asumı́ que el auditorio estarı́a desierto, y me pareció que merecı́an un público de al menos una persona. De hecho, acabé de
pie en el pasillo, pues habı́a cientos de estudiantes llenando la
sala. Era como un concierto de rock. Uno de los dos ingenieros de Be en el escenario era negro, lo cual desgraciadamente
132

En el principio fue la lı́nea de comandos

es algo muy raro en el mundo de la alta tecnologı́a. El otro denunció animadamente el cruft, y cantó las loas de BeOS por sus
cualidades libres de cruft, y de hecho acabó diciendo que en
diez o quince años, cuando BeOS se volviese tan cruftoso como
MacOS y Windows95, serı́a hora de tirarlo y crear un nuevo sistema operativo a partir de la nada. ¡Dudo que esto fuera polı́tica
oﬁcial de Be, pero impresionó a todo el mundo en la sala! A ﬁnales de los ochenta, el MacOS fue, durante un tiempo, el sistema
operativo de los artistas en la onda y los hackers —y BeOS parece tener el potencial para atraer a la misma gente hoy—. Las
listas de correo de Be están llenas de hackers con nombres como Vladimir y Olaf y Pierre, poniéndose a parir unos a otros en
quebrado tecnoinglés.
La única pregunta real acerca de BeOS es si está condenado
o no.
Últimamente, Be ha respondido a la cansina acusación de
que están condenados con la aseveración de que BeOS es un
sistema de operación mediático fabricado para los creadores de
contenidos mediáticos, y por tanto no entra en competición con
Windows. Esto es un poco ingenuo. Por volver a la analogı́a de
los concesionarios de coches, es como si el dueño de la tienda de
Batmóviles aﬁrmara que en realidad no compite con los demás
porque su coche puede ir tres veces más rápido y además puede
volar.
Be tiene una oﬁcina en Parı́s y, como mencioné, la conversación en las listas de correos sobre Be tiene un sabor fuertemente
europeo. Al mismo tiempo se han esforzado mucho por hallar
un nicho en Japón, e Hitachi acaba de empezar a meter BeOS en
sus PCs. Ası́ que, si tuviera que lanzar una predicción, yo dirı́a
que están jugando al Go mientras Microsoft juega al ajedrez.
Por el momento, se mantienen lejos de la posición abrumadoramente fuerte de Microsoft en Norteamérica. Están tratando
de asentarse en los bordes del tablero, por ası́ decir, en Europa y
Japón, donde la gente puede estar más abierta a sistemas operativos alternativos, o al menos puede ser más hostil a Microsoft,
133

Etre

que en los Estados Unidos.
Lo que mantiene a Be trabado en este paı́s es el hecho de
que a la gente inteligente le da miedo parecer imbécil. Corres el
riesgo de parecer ingenuo cuando dices: ((He probado BeOS, y
esto es lo que opino.)) Parece mucho más soﬁsticado decir: ((Las
probabilidades de que Be encuentre un nicho en el mercado altamente competitivo de los sistemas operativos se aproximan a
cero.)) Es, en jerga técnica, un problema de mente compartida.
Y en el negocio de los sistemas operativos, la mente compartida es algo más que una mera cuestión de RP; tiene efectos directos sobre la tecnologı́a misma. Todos los enredos periféricos
que pueden enchufarse a un ordenador personal —las impresoras, escáneres, interfaces de PalmPilot y Lego Mindstorms—
precisan de unos elementos de software llamado drivers. Igualmente, las tarjetas de vı́deo y (en menor medida) los monitores
necesitan drivers. Incluso los diferentes tipos de placas madre
en el mercado se relacionan con el sistema operativo de diferentes maneras, y se precisa un código distinto para cada una. Todo
este código especı́ﬁco para el hardware no sólo ha de escribirse, sino también probarse, mejorarse, actualizarse, mantenerse,
y repararse. Debido al hecho de que el mercado del hardware
se ha vuelto tan enorme y complicado, lo que realmente determina el destino de un sistema operativo no es lo bueno que sea
técnicamente, ni cuánto cueste, sino la disponibilidad del código especı́ﬁco del hardware. Los hackers de Linux tienen que
escribir ese código ellos mismos, y han mantenido una rapidez
asombrosa. Be, Inc. tiene que escribir todos sus propios drivers,
aunque a medida que BeOS ha ido ganando impulso programadores independientes han empezado a contribuir con drivers,
que están disponibles en el sitio web de Be.
Pero Microsoft lleva ventaja de momento, porque no tiene
que escribir sus propios drivers. Cualquier fabricante de hardware que lleve una nueva tarjeta de vı́deo o periférico al mercado hoy sabe que será invendible a menos que incluya el código
especı́ﬁco del hardware que haga que funciones con Windows,
134

En el principio fue la lı́nea de comandos

y ası́ todos los fabricantes de hardware han aceptado la carga
de crear y mantener su propia biblioteca de drivers.

135

Etre

136

Mente compartida
L A AFIRMACI ÓN DEL G OBIERNO DE LOS EE . UU . de que Microsoft tiene el monopolio del mercado de sistemas operativos puede ser la aseveración más obviamente absurda jamás presentada por la mente legal. Linux, un sistema operativo técnicamente
superior, se regala, y BeOS está disponible por un precio nominal. Esto es sencillamente un hecho, que hay que aceptar te
guste o no Microsoft.
Microsoft es realmente grande y rica, y si hay que creer a
algunos de los testigos del Gobierno, no son muy agradables.
Pero la acusación de monopolio sencillamente carece de sentido.
Lo que realmente está pasando es que Microsoft se ha hecho, de momento, con cierta ventaja: dominan la competición
por la mente compartida, ası́ que cualquier fabricante de hardware o software que quiera ser tomado en serio se siente obligado a fabricar un producto que sea compatible con sus sistemas
operativos. Dado que los fabricantes de hardware escriben drivers compatibles con Windows, Microsoft no tiene por qué escribirlos; a todos los efectos, los fabricantes de hardware están
añadiendo nuevos componentes a Windows, convirtiéndolo en
un sistema operativo más capaz, sin cobrar a Microsoft por sus
servicios. Es una buena posición en la que estar. El único modo
de combatir a tal adversario es tener un ejército de programa137

Mente compartida

dores altamente competentes que escriban drivers equivalentes
de forma gratuita, que es lo que hace Linux.
Pero la posesión de esta ventaja tecnológica es diferente de
un monopolio en cualquier sentido normal de la palabra, porque aquı́ el dominio no tiene nada que ver con los resultados
técnicos o el precio. Los antiguos monopolios de barones ladrones eran monopolios porque controlaban fı́sicamente los medios de producción y/o distribución. Pero en el negocio del software, los medios de producción son los hackers que escriben
código, e Internet es el equivalente a los medios de distribución,
y nadie aﬁrma que Microsoft controle eso.
Aquı́, por el contrario, el dominio se encuentra en las mentes
de la gente que compra software. Microsoft tiene poder porque
la gente cree que lo tiene. Hace mucho dinero. A juzgar por los
recientes procedimientos judiciales en ambos Washingtons, pareciera que este poder y este dinero impelieron a algunos ejecutivos muy peculiares a trabajar para Microsoft, y que Bill Gates
debiera haber realizado tests de saliva antes de darles tarjetas
de identidad de Microsoft.
Pero éste no es el tipo de poder que encaja con cualquier
deﬁnición normal de la palabra monopolio, y no es regulable
legalmente. Puede que los tribunales ordenen a Microsoft que
haga las cosas de otro modo. Incluso puede que partan la compañı́a. Pero en realidad no pueden hacer nada respecto del monopolio de la mente compartida, a menos que agarren a cada
hombre, mujer y niño en el mundo desarrollado y los sometan
a un largo proceso de lavado de cerebro.
El dominio de la mente compartida es, en otras palabras, una
cosa muy rara, algo que los creadores de las leyes antimonopolio nunca podrı́an haberse imaginado. Se parece a uno de esos
desquiciados fenómenos modernos de teorı́a del caos, algo relacionado con la complejidad, en la que un montón de entidades
independientes pero conectadas (los usuarios de ordenadores
del mundo), tomando sus propias decisiones, según una pocas
reglas elementales, generan un enorme fenómeno (el dominio
138

En el principio fue la lı́nea de comandos

total del mercado por una sola compañı́a) que no tiene sentido
por ningún análisis racional. Tales fenómenos están llenos de
puntos pivotales ocultos y enmarañados con extraños bucles de
retroalimentación, y no pueden entenderse: los que lo intentan
acaban
1.

Volviéndose locos

2.

Rindiéndose

3.

Desarrollando teorı́as desquiciadas, o

4.

Convirtiéndose en consultores sobre teorı́a del caos muy
bien pagados.

Puede que haya una o dos personas en Microsoft lo bastante tontas para creer que el dominio de la mente compartida es
una posición estable y duradera. Tal vez eso explica alguno de
los chiﬂados que han contratado en el sector de negocios, los
zelotas que jueces enfurecidos constantemente llevan a los tribunales. Pero la mayorı́a de ellos deben de tener la inteligencia
para comprender que fenómenos como éstos son desquiciantemente inestables, y que no se puede decir qué suceso extraño
y aparentemente irrelevante podı́a hacer que el sistema pasar a
una conﬁguración radicalmente diferente.
Por expresarlo de otro modo, Microsoft puede estar segura
de que el juez no emitirá un mandato ordenador que se reprogramen sumariamente los cerebros de todos los habitantes del
mundo desarrollado. Pero no hay modo de predecir cuando la
gente decidirá, en masa, reprogramar sus propios cerebros. Esto
podrı́a explicar parte del comportamiento de Microsoft, como
su polı́tica de tener reservas extrañamente grandes de dinero,
y la angustia extrema que les entra cuando aparece algo como
Java.
Nunca he visto el interior del ediﬁcio de Microsoft donde
están todos los altos ejecutivos, pero tengo la fantası́a de que
en los pasillos, a intervalos regulares, hay grandes cajas rojas de
139

Mente compartida

alarma atornilladas a las paredes. Cada una contiene un gran
botón rojo protegido por un cristal. Un martillo de metal cuelga
por una cadena junto a él. Encima hay un gran cartel que dice:
Si se produce en desplome en la cuota de mercado, romper el
cristal.
No sé qué sucede cuando alguien rompe el cristal y aprieta
el botón, pero seguro que serı́a interesante averiguarlo. Me imagino bancos arruinándose en todo el mundo mientras Microsoft
retira sus reservas, y paquetes de billetes de cien envueltos en
plástico cayendo del cielo. Sin duda, Microsoft tiene un plan.
Pero lo que realmente me gustarı́a saber es si, a cierto nivel,
sus programadores respirarı́an aliviados si la carga de escribir
la Única Interfaz Universal para Todo fuera súbitamente retirada de sus hombros.

140

El meñique derecho de Dios
E N SU LIBRO La vida del cosmos, que todo el mundo deberı́a leer,
Lee Smolin da la mejor descripción que he leı́do nunca de cómo
nuestro universo emergió de un equilibrio sorprendentemente precios de diferentes constantes fundamentales. La masa del
protón, la fuerza de la gravedad, el ámbito de la fuerza nuclear
débil, y unas pocas docenas más de constantes fundamentales
determinan por completo qué tipo de universo surgirá de un
Big Bang. Si estos valores hubieran sido incluso ligeramente diferentes, el universo habrı́a sido un enorme océano de gas tibio
o un nudo caliente de plasma o alguna otra cosa básicamente poco interesante —un coñazo, en otras palabras—. El único
modo de obtener un universo que no sea un coñazo —que tenga estrellas, elementos pesados, planetas, y vida— es calcular
los números básicos bien. Si hubiera algún ordenador, en algún
lugar, que pudiera escupir universos con valores aleatoriamente
escogidos para sus constantes fundamentales, por cada universo como el nuestro producirı́a 102̂29 coñazos.
Aunque no me he sentado a hacer el cálculo, a mı́ esto me
parece comparable a la probabilidad de hacer que un ordenador
Unix haga algo útil entrando en un tty e introduciendo lı́neas de
comando cuando te has olvidado de todas las opciones y palabras clave. Cada vez que tu meñique pulsa la tecla ENTER, lo
estás intentando. En algunos casos el sistema operativo no hace
141

El meñique derecho de Dios

nada. En otros casos borra todos tus archivos. En la mayorı́a de
los casos simplemente te da un mensaje de error. En otras palabras, obtienes muchos coñazos. Pero a veces, si lo haces todo
bien, el ordenador rumia durante un rato y luego produce algo
como emacs. De hecho, genera complejidad, que es el criterio
de Smolin para la propiedad de resultar interesante.
No sólo eso, sino que además parece que, una vez que vas
por debajo de cierto tamaño —mucho más abajo del nivel de
los quarks, al ámbito de la teorı́a de supercuerdas— el universo
no puede describirse con la fı́sica que se practica dsde tiempos
de Newton. Si se mira a una escala lo bastante pequeña, se ven
procesos que parecen de naturaleza casi computacional.
Creo que el mensaje está muy claro: en algún lugar fuera y
más allá de nuestro universo hay un sistema operativo, codiﬁcado a lo largo de incalculables periodos de tiempo por algún
tipo de demiurgo-hacker. El sistema operativo cósmico usa una
interfaz de lı́nea de comandos. Se ejecuta en algo parecido a
un teletipo, con montones de ruido y calor; los bits introducidos revolotean a la papelera como estrellas fugaces. El demiurgo está sentado frente a su teletipo, introduciendo una lı́nea de
comando tras otra, especiﬁcando los valores de las constantes
fundamentales de la fı́sica:
universo -G 6.672e-11 -e 1.602e-19 -h 6.626e-34 -masaproton
1.673e-27....
y cuando acaba de escribir la lı́nea de comandos, su meñique
derecho titubea sobre la tecla ENTER durante uno o dos eones,
preguntándose qué va a pasar; luego cae —y el BOOM que se
oye es otro Big Bang.
Ese sı́ que es un sistema operativo chulo, y si estuviera disponible en Internet (de forma gratuita, por supuesto) todos los
hackers del mundo se lo descargarı́an enseguida y se pasarı́an
toda la noche enredando, escupiendo universos a diestro y siniestro. La mayorı́a serı́an universos bastante sosos pero algunos serı́an simplemente asombrosos. Porque los que esos hackers estarı́an tratando de conseguir serı́a algo mucho más ambi142

En el principio fue la lı́nea de comandos

cioso que un universo con unas pocas estrellas y galaxias. Cualquier hacker corrientucho podrı́a hacer eso. No, el modo de labrarse una gran reputación en Internet serı́a ser tan bueno con
la lı́nea de comandos que los universos desarrollaran vida espontáneamente. Y una vez que el modo de conseguir eso se convirtiera en un conocimiento común, esos hackers irı́an más allá,
tratando de hacer que sus universos desarrollaran el tipo adecuado de vida, tratando de hallar el único cambio en el Nésimo
lugar decimal de una constante fı́sica que nos darı́a una Tierra
en la que, pongamos, aceptaran a Hitler en la Escuela de Bellas Artes después de todo, y acabara como artista callejero con
curiosas opiniones polı́ticas.
Incluso si esa fantası́a se volviera realidad, sin embargo,
la mayorı́a de los usuarios (incuyéndome a mı́ mismo, algunos dı́as) no querrı́an molestarse en aprender todos esos arcanos comandos, y pugnar con todos los fracasos; unos pocos universos coñazo realmente pueden atiborrarte el trastero. Tras pasar un rato introduciendo lı́neas de comando y pulsando la tecla ENTER y engendrando aburridos universos fallidos, empezarı́amos a desear que hubiera un sistema operativo que fuera todo lo contrario: un sistema operativo que tuviera la potencia para hacerlo todo —para vivir nuestra vida por nosotros—. En este sistema operativo, todas las decisiones posibles que tuviéramos que tomar habrı́an sido predeterminadas por astutos programadores, y condensadas en
una serie de cuadros de diálogo. Pulsando en botones de radio podrı́amos escoger de entre opciones mutuamente exclusivas (((heterosexual/homosexual))). Las columnas de cuadritos a
tachar nos permitirı́an seleccionar las cosas que quisiéramos en
nuestra vida (((casarse/escribir la gran novela americana))) y para las opciones más complicadas podrı́amos rellenar cuadritos
de texto (((número de hijas: número de hijos))).
Incluso esta interfaz de usuario empezarı́a a parecer tremendamente complicada pasado un tiempo, con tantas opciones,
y tantas interacciones ocultas entre opciones. Se volverı́a ca143

El meñique derecho de Dios

si inmanejable —el problema del doce parpadeante de nuevo–
. La gente que nos la proporcionó tendrı́an que proporcionar
también asistentes y plantillas, dándonos unas pocas vidas por
defecto que pudiéramos usar como base para diseñar la nuestra. Lo más probable es que estas vidas por defecto le parecieran bastante buenas a la mayorı́a de la gente, de todas formas,
ası́ que les fastidiarı́a enredar con ellas por miedo a empeorarlas. Ası́ que, tras unas pocas versiones, el software serı́a aún
más simple: lo iniciarı́as y te presentarı́a un cuadro de diálogo
con un único botón grande en medio etiquetado: ((vivir)). Una
vez pulsaras ese botón, empezarı́a tu vida. Si algo fuese mal,
o no respondiese a tus expectativas, podrı́as quejarte al Departamento de Servicio al Cliente de Microsoft. Si te atendiese un
empleado de atención al público, te dirı́a que tu vida iba bien,
que no le pasaba nada, y que en cualquier caso irı́a mucho mejor
con la próxima actualización. Pero si insistieras, y te identiﬁcaras como avanzado, podrı́as hablar con un ingeniero de verdad.
¿Qué dirı́a el ingeniero, una vez hubieras explicado tu problema y enumerado todas las insatisfacciones de tu vida? Probablemente te dirı́a que la vida es una cosa muy difı́cil y complicada; que ninguna interfaz puede cambiar eso; que cualquiera
que crea lo contrario es un imbécil; y que si no te gusta que escojan por ti, deberı́as empezar a elegir por ti mismo.

144

